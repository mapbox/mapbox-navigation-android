// Signature format: 3.0
package com.mapbox.androidauto {

  public final class ActiveGuidanceState extends com.mapbox.androidauto.CarAppState {
    field public static final com.mapbox.androidauto.ActiveGuidanceState INSTANCE;
  }

  public final class ArrivalState extends com.mapbox.androidauto.CarAppState {
    field public static final com.mapbox.androidauto.ArrivalState INSTANCE;
  }

  public abstract sealed class CarAppState {
  }

  public final class FreeDriveState extends com.mapbox.androidauto.CarAppState {
    field public static final com.mapbox.androidauto.FreeDriveState INSTANCE;
  }

  public final class MapboxCarApp {
    method public com.mapbox.navigation.ui.voice.internal.MapboxAudioGuidance carAppAudioGuidanceService();
    method public com.mapbox.androidauto.navigation.location.CarAppLocation carAppLocationService();
    method public kotlinx.coroutines.flow.StateFlow<com.mapbox.androidauto.CarAppState> getCarAppState();
    method public void setup(android.app.Application application);
    method public void updateCarAppState(com.mapbox.androidauto.CarAppState carAppState);
    property public final kotlinx.coroutines.flow.StateFlow<com.mapbox.androidauto.CarAppState> carAppState;
    field public static final com.mapbox.androidauto.MapboxCarApp INSTANCE;
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class MapboxCarNavigationManager implements com.mapbox.navigation.core.lifecycle.MapboxNavigationObserver {
    ctor public MapboxCarNavigationManager(androidx.car.app.CarContext carContext);
    method public kotlinx.coroutines.flow.StateFlow<java.lang.Boolean> getAutoDriveEnabledFlow();
    method public void onAttached(com.mapbox.navigation.core.MapboxNavigation mapboxNavigation);
    method public void onDetached(com.mapbox.navigation.core.MapboxNavigation mapboxNavigation);
    property public final kotlinx.coroutines.flow.StateFlow<java.lang.Boolean> autoDriveEnabledFlow;
  }

  public final class RoutePreviewState extends com.mapbox.androidauto.CarAppState {
    field public static final com.mapbox.androidauto.RoutePreviewState INSTANCE;
  }

}

package com.mapbox.androidauto.car {

  public final class MainActionStrip {
    ctor public MainActionStrip(androidx.car.app.Screen screen, com.mapbox.androidauto.car.MainCarContext mainCarContext);
    method public androidx.car.app.model.ActionStrip.Builder buildSettings();
    method public androidx.car.app.model.ActionStrip.Builder builder();
  }

  public final class MainCarContext {
    ctor public MainCarContext(androidx.car.app.CarContext carContext, com.mapbox.maps.extension.androidauto.MapboxCarMap mapboxCarMap, com.mapbox.search.SearchEngine searchEngine);
    method public androidx.car.app.CarContext getCarContext();
    method public com.mapbox.androidauto.car.settings.CarSettingsStorage getCarSettingsStorage();
    method public com.mapbox.navigation.base.formatter.DistanceFormatter getDistanceFormatter();
    method public com.mapbox.navigation.utils.internal.JobControl getJobControl();
    method public com.mapbox.navigation.ui.maneuver.api.MapboxManeuverApi getManeuverApi();
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap getMapboxCarMap();
    method public com.mapbox.navigation.core.MapboxNavigation getMapboxNavigation();
    method public kotlinx.coroutines.flow.MutableStateFlow<java.lang.Boolean> getRouteAlternativesEnabled();
    method public com.mapbox.search.SearchEngine getSearchEngine();
    property public final androidx.car.app.CarContext carContext;
    property public final com.mapbox.androidauto.car.settings.CarSettingsStorage carSettingsStorage;
    property public final com.mapbox.navigation.base.formatter.DistanceFormatter distanceFormatter;
    property public final com.mapbox.navigation.ui.maneuver.api.MapboxManeuverApi maneuverApi;
    property public final com.mapbox.maps.extension.androidauto.MapboxCarMap mapboxCarMap;
    property public final com.mapbox.navigation.core.MapboxNavigation mapboxNavigation;
    property public final kotlinx.coroutines.flow.MutableStateFlow<java.lang.Boolean> routeAlternativesEnabled;
    property public final com.mapbox.search.SearchEngine searchEngine;
  }

  public final class MainCarScreen extends androidx.car.app.Screen {
    ctor public MainCarScreen(com.mapbox.androidauto.car.MainCarContext mainCarContext);
    method public com.mapbox.androidauto.car.location.CarLocationRenderer getCarLocationRenderer();
    method public com.mapbox.androidauto.car.navigation.CarNavigationCamera getCarNavigationCamera();
    method public com.mapbox.androidauto.car.preview.CarRouteLine getCarRouteLine();
    method public com.mapbox.androidauto.car.navigation.speedlimit.CarSpeedLimitRenderer getCarSpeedLimitRenderer();
    method public androidx.car.app.model.Template onGetTemplate();
    property public final com.mapbox.androidauto.car.location.CarLocationRenderer carLocationRenderer;
    property public final com.mapbox.androidauto.car.navigation.CarNavigationCamera carNavigationCamera;
    property public final com.mapbox.androidauto.car.preview.CarRouteLine carRouteLine;
    property public final com.mapbox.androidauto.car.navigation.speedlimit.CarSpeedLimitRenderer carSpeedLimitRenderer;
  }

  public final class MainMapActionStrip {
    ctor public MainMapActionStrip(androidx.car.app.Screen screen, com.mapbox.androidauto.car.navigation.CarNavigationCamera carNavigationCamera);
    method public androidx.car.app.model.ActionStrip build();
  }

  public final class MainScreenManager {
    ctor public MainScreenManager(com.mapbox.androidauto.car.MainCarContext mainCarContext);
    method public androidx.car.app.Screen currentScreen();
    method public com.mapbox.androidauto.car.MainCarContext getMainCarContext();
    method public suspend Object? observeCarAppState(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public final com.mapbox.androidauto.car.MainCarContext mainCarContext;
  }

}

package com.mapbox.androidauto.car.action {

  public sealed interface MapboxActionProvider {
  }

  public static interface MapboxActionProvider.ActionProvider extends com.mapbox.androidauto.car.action.MapboxActionProvider {
    method public androidx.car.app.model.Action getAction();
  }

  public static interface MapboxActionProvider.ScreenActionProvider extends com.mapbox.androidauto.car.action.MapboxActionProvider {
    method public androidx.car.app.model.Action getAction(androidx.car.app.Screen screen);
  }

}

package com.mapbox.androidauto.car.feedback.core {

  @Keep public final class CarFeedbackHistoryEvent {
    ctor public CarFeedbackHistoryEvent(String sourceScreen, com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem? carFeedbackItem = null, String? encodedSnapshot = null, com.mapbox.navigation.core.telemetry.events.FeedbackMetadata? feedbackMetadata = null);
    method public String component1();
    method public com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem? component2();
    method public String? component3();
    method public com.mapbox.navigation.core.telemetry.events.FeedbackMetadata? component4();
    method public com.mapbox.androidauto.car.feedback.core.CarFeedbackHistoryEvent copy(String sourceScreen, com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem? carFeedbackItem, String? encodedSnapshot, com.mapbox.navigation.core.telemetry.events.FeedbackMetadata? feedbackMetadata);
    method public com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem? getCarFeedbackItem();
    method public String? getEncodedSnapshot();
    method public com.mapbox.navigation.core.telemetry.events.FeedbackMetadata? getFeedbackMetadata();
    method public String getSourceScreen();
    property public final com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem? carFeedbackItem;
    property public final String? encodedSnapshot;
    property public final com.mapbox.navigation.core.telemetry.events.FeedbackMetadata? feedbackMetadata;
    property public final String sourceScreen;
  }

  public interface CarFeedbackItemProvider {
    method public java.util.List<com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem> feedbackItems();
  }

  public final class CarFeedbackSender {
    ctor public CarFeedbackSender();
    method public void send(com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem selectedItem, String? encodedSnapshot, String sourceScreenSimpleName);
  }

}

package com.mapbox.androidauto.car.feedback.ui {

  public final class CarFeedbackAction implements com.mapbox.androidauto.car.action.MapboxActionProvider.ScreenActionProvider {
    ctor public CarFeedbackAction(com.mapbox.maps.extension.androidauto.MapboxCarMap mapboxCarMap, com.mapbox.androidauto.car.feedback.core.CarFeedbackSender carFeedBackSender, com.mapbox.androidauto.car.feedback.core.CarFeedbackItemProvider carFeedbackItemProvider);
    method public androidx.car.app.model.Action getAction(androidx.car.app.Screen screen);
  }

  public abstract sealed class CarFeedbackIcon {
    method public final String getName();
    property public final String name;
  }

  public final class CarFeedbackIconKt {
    method @DrawableRes public static int drawableRes(com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon);
  }

  @Keep public final class CarFeedbackItem {
    ctor public CarFeedbackItem(String carFeedbackTitle, com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon carFeedbackIcon, @com.mapbox.navigation.core.telemetry.events.FeedbackEvent.Type String? navigationFeedbackType = null, @com.mapbox.search.analytics.FeedbackEvent.FeedbackReason String? searchFeedbackReason = null, String? favoritesFeedbackReason = null, com.mapbox.navigation.core.geodeeplink.GeoDeeplink? geoDeeplink = null, com.mapbox.api.geocoding.v5.models.GeocodingResponse? geocodingResponse = null, java.util.List<com.mapbox.search.record.FavoriteRecord>? favoriteRecords = null, java.util.List<? extends com.mapbox.search.result.SearchSuggestion>? searchSuggestions = null);
    method public com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon getCarFeedbackIcon();
    method public String getCarFeedbackTitle();
    method public java.util.List<com.mapbox.search.record.FavoriteRecord>? getFavoriteRecords();
    method public String? getFavoritesFeedbackReason();
    method public com.mapbox.navigation.core.geodeeplink.GeoDeeplink? getGeoDeeplink();
    method public com.mapbox.api.geocoding.v5.models.GeocodingResponse? getGeocodingResponse();
    method public String? getNavigationFeedbackType();
    method public String? getSearchFeedbackReason();
    method public java.util.List<com.mapbox.search.result.SearchSuggestion>? getSearchSuggestions();
    property public final com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon carFeedbackIcon;
    property public final String carFeedbackTitle;
    property public final java.util.List<com.mapbox.search.record.FavoriteRecord>? favoriteRecords;
    property public final String? favoritesFeedbackReason;
    property public final com.mapbox.navigation.core.geodeeplink.GeoDeeplink? geoDeeplink;
    property public final com.mapbox.api.geocoding.v5.models.GeocodingResponse? geocodingResponse;
    property public final String? navigationFeedbackType;
    property public final String? searchFeedbackReason;
    property public final java.util.List<com.mapbox.search.result.SearchSuggestion>? searchSuggestions;
  }

  public final class CarFeedbackItemKt {
    method public static com.mapbox.androidauto.car.feedback.core.CarFeedbackItemProvider activeGuidanceCarFeedbackProvider(androidx.car.app.CarContext carContext);
    method public static java.util.List<com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem> buildActiveGuidanceCarFeedbackItems(androidx.car.app.CarContext carContext);
    method public static java.util.List<com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem> buildArrivalFeedbackProvider(androidx.car.app.CarContext carContext);
    method public static java.util.List<com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem> buildFreeDriveFeedbackItems(androidx.car.app.CarContext carContext);
    method public static com.mapbox.androidauto.car.feedback.core.CarFeedbackItemProvider buildFreeDriveFeedbackItemsProvider(androidx.car.app.CarContext carContext);
    method public static java.util.List<com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem> buildRoutePreviewCarFeedbackItems(androidx.car.app.CarContext carContext);
    method public static java.util.List<com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem> buildSearchPlacesCarFeedbackItems(androidx.car.app.CarContext carContext, java.util.List<com.mapbox.search.record.FavoriteRecord>? favoriteRecords = null, java.util.List<? extends com.mapbox.search.result.SearchSuggestion>? searchSuggestions = null, com.mapbox.navigation.core.geodeeplink.GeoDeeplink? geoDeeplink = null, com.mapbox.api.geocoding.v5.models.GeocodingResponse? geocodingResponse = null);
    method public static com.mapbox.androidauto.car.feedback.core.CarFeedbackItemProvider buildSearchPlacesCarFeedbackProvider(androidx.car.app.CarContext carContext, java.util.List<com.mapbox.search.record.FavoriteRecord>? favoriteRecords = null, java.util.List<? extends com.mapbox.search.result.SearchSuggestion>? searchSuggestions = null, com.mapbox.navigation.core.geodeeplink.GeoDeeplink? geoDeeplink = null, com.mapbox.api.geocoding.v5.models.GeocodingResponse? geocodingResponse = null);
    method public static com.mapbox.androidauto.car.feedback.core.CarFeedbackItemProvider routePreviewCarFeedbackProvider(androidx.car.app.CarContext carContext);
  }

  public final class CarGridFeedbackScreen extends androidx.car.app.Screen {
    ctor public CarGridFeedbackScreen(androidx.car.app.CarContext carContext, String sourceScreenSimpleName, com.mapbox.androidauto.car.feedback.core.CarFeedbackSender carFeedbackSender, java.util.List<com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem> feedbackItems, String? encodedSnapshot, kotlin.jvm.functions.Function0<kotlin.Unit> onFinish);
    method public androidx.car.app.model.Template onGetTemplate();
  }

  public final class ConfusingAudioCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.ConfusingAudioCarFeedbackIcon INSTANCE;
  }

  public final class IncorrectAddressCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.IncorrectAddressCarFeedbackIcon INSTANCE;
  }

  public final class IncorrectLocationCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.IncorrectLocationCarFeedbackIcon INSTANCE;
  }

  public final class IncorrectNameCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.IncorrectNameCarFeedbackIcon INSTANCE;
  }

  public final class IncorrectVisualCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.IncorrectVisualCarFeedbackIcon INSTANCE;
  }

  public final class NegativeCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.NegativeCarFeedbackIcon INSTANCE;
  }

  public final class OtherIssueCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.OtherIssueCarFeedbackIcon INSTANCE;
  }

  public final class PositioningIssueCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.PositioningIssueCarFeedbackIcon INSTANCE;
  }

  public final class PositiveCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.PositiveCarFeedbackIcon INSTANCE;
  }

  public final class RoadClosureCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.RoadClosureCarFeedbackIcon INSTANCE;
  }

  public final class RouteNotAllowedCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.RouteNotAllowedCarFeedbackIcon INSTANCE;
  }

  public final class RoutingErrorCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.RoutingErrorCarFeedbackIcon INSTANCE;
  }

  public final class SearchOtherIssueCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.SearchOtherIssueCarFeedbackIcon INSTANCE;
  }

  public final class TrafficIssueCarFeedbackIcon extends com.mapbox.androidauto.car.feedback.ui.CarFeedbackIcon {
    field public static final com.mapbox.androidauto.car.feedback.ui.TrafficIssueCarFeedbackIcon INSTANCE;
  }

}

package com.mapbox.androidauto.car.location {

  public final class CarLocationPuck {
    method public com.mapbox.maps.plugin.LocationPuck2D navigationPuck2D(android.content.Context context);
    field public static final com.mapbox.androidauto.car.location.CarLocationPuck INSTANCE;
  }

  public final class CarLocationRenderer implements com.mapbox.maps.extension.androidauto.MapboxCarMapObserver {
    ctor public CarLocationRenderer(com.mapbox.androidauto.car.MainCarContext mainCarContext);
    method public void onAttached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
  }

}

package com.mapbox.androidauto.car.map.widgets.compass {

  public final class CarCompassSurfaceRenderer implements com.mapbox.maps.extension.androidauto.MapboxCarMapObserver {
    ctor public CarCompassSurfaceRenderer();
    method public void onAttached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onDetached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
  }

}

package com.mapbox.androidauto.car.map.widgets.logo {

  public final class CarLogoSurfaceRenderer implements com.mapbox.maps.extension.androidauto.MapboxCarMapObserver {
    ctor public CarLogoSurfaceRenderer();
    method public void onAttached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onDetached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onVisibleAreaChanged(android.graphics.Rect visibleArea, com.mapbox.maps.EdgeInsets edgeInsets);
  }

}

package com.mapbox.androidauto.car.navigation {

  public final class ActiveGuidanceScreen extends androidx.car.app.Screen {
    ctor public ActiveGuidanceScreen(com.mapbox.androidauto.car.navigation.CarActiveGuidanceCarContext carActiveGuidanceContext, java.util.List<? extends com.mapbox.androidauto.car.action.MapboxActionProvider> actionProviders, com.mapbox.androidauto.car.placeslistonmap.PlacesListOnMapLayerUtil placesLayerUtil = com.mapbox.androidauto.car.placeslistonmap.PlacesListOnMapLayerUtil());
    method public com.mapbox.androidauto.car.location.CarLocationRenderer getCarLocationRenderer();
    method public com.mapbox.androidauto.car.navigation.CarNavigationCamera getCarNavigationCamera();
    method public com.mapbox.androidauto.car.preview.CarRouteLine getCarRouteLine();
    method public com.mapbox.androidauto.car.navigation.speedlimit.CarSpeedLimitRenderer getCarSpeedLimitRenderer();
    method public androidx.car.app.model.Template onGetTemplate();
    property public final com.mapbox.androidauto.car.location.CarLocationRenderer carLocationRenderer;
    property public final com.mapbox.androidauto.car.navigation.CarNavigationCamera carNavigationCamera;
    property public final com.mapbox.androidauto.car.preview.CarRouteLine carRouteLine;
    property public final com.mapbox.androidauto.car.navigation.speedlimit.CarSpeedLimitRenderer carSpeedLimitRenderer;
  }

  public final class CarActiveGuidanceCarContext {
    ctor public CarActiveGuidanceCarContext(com.mapbox.androidauto.car.MainCarContext mainCarContext);
    method public androidx.car.app.CarContext getCarContext();
    method public com.mapbox.navigation.base.formatter.DistanceFormatter getDistanceFormatter();
    method public com.mapbox.androidauto.car.MainCarContext getMainCarContext();
    method public com.mapbox.navigation.ui.maneuver.api.MapboxManeuverApi getManeuverApi();
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap getMapboxCarMap();
    method public com.mapbox.navigation.core.MapboxNavigation getMapboxNavigation();
    method public com.mapbox.androidauto.car.navigation.CarNavigationInfoMapper getNavigationInfoMapper();
    method public com.mapbox.androidauto.car.navigation.CarNavigationEtaMapper getTripProgressMapper();
    property public final androidx.car.app.CarContext carContext;
    property public final com.mapbox.navigation.base.formatter.DistanceFormatter distanceFormatter;
    property public final com.mapbox.androidauto.car.MainCarContext mainCarContext;
    property public final com.mapbox.navigation.ui.maneuver.api.MapboxManeuverApi maneuverApi;
    property public final com.mapbox.maps.extension.androidauto.MapboxCarMap mapboxCarMap;
    property public final com.mapbox.navigation.core.MapboxNavigation mapboxNavigation;
    property public final com.mapbox.androidauto.car.navigation.CarNavigationInfoMapper navigationInfoMapper;
    property public final com.mapbox.androidauto.car.navigation.CarNavigationEtaMapper tripProgressMapper;
  }

  public enum CarCameraMode {
    enum_constant public static final com.mapbox.androidauto.car.navigation.CarCameraMode FOLLOWING;
    enum_constant public static final com.mapbox.androidauto.car.navigation.CarCameraMode IDLE;
    enum_constant public static final com.mapbox.androidauto.car.navigation.CarCameraMode OVERVIEW;
  }

  public final class CarDistanceFormatter {
    ctor public CarDistanceFormatter(com.mapbox.navigation.base.formatter.UnitType unitType);
    method public androidx.car.app.model.Distance carDistance(double distanceMeters, @com.mapbox.navigation.base.formatter.Rounding.Increment int roundingIncrement = 50);
  }

  public final class CarLocationsOverviewCamera implements com.mapbox.maps.extension.androidauto.MapboxCarMapObserver {
    ctor public CarLocationsOverviewCamera(com.mapbox.navigation.core.MapboxNavigation mapboxNavigation, com.mapbox.maps.CameraOptions initialCameraOptions = CameraOptions.<init>().zoom(DEFAULT_INITIAL_ZOOM).build());
    method public com.mapbox.navigation.core.MapboxNavigation getMapboxNavigation();
    method public void onAttached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onDetached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onVisibleAreaChanged(android.graphics.Rect visibleArea, com.mapbox.maps.EdgeInsets edgeInsets);
    method public void updateWithLocations(java.util.List<com.mapbox.geojson.Point> points);
    property public final com.mapbox.navigation.core.MapboxNavigation mapboxNavigation;
    field public static final double DEFAULT_INITIAL_ZOOM = 15.0;
  }

  public final class CarNavigationCamera implements com.mapbox.maps.extension.androidauto.MapboxCarMapObserver {
    ctor public CarNavigationCamera(com.mapbox.navigation.core.MapboxNavigation mapboxNavigation, com.mapbox.androidauto.car.navigation.CarCameraMode initialCarCameraMode, com.mapbox.androidauto.car.navigation.CarCameraMode? alternativeCarCameraMode, com.mapbox.maps.CameraOptions? initialCameraOptions = CameraOptions.<init>().zoom(DEFAULT_INITIAL_ZOOM).build());
    method public boolean followingZoomUpdatesAllowed();
    method public com.mapbox.maps.extension.androidauto.DefaultMapboxCarMapGestureHandler getGestureHandler();
    method public kotlinx.coroutines.flow.StateFlow<com.mapbox.androidauto.car.navigation.CarCameraMode> getNextCameraMode();
    method public void onAttached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onDetached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onVisibleAreaChanged(android.graphics.Rect visibleArea, com.mapbox.maps.EdgeInsets edgeInsets);
    method public void updateCameraMode(com.mapbox.androidauto.car.navigation.CarCameraMode carCameraMode);
    method public void zoomInAction();
    method public void zoomOutAction();
    method public void zoomUpdatesAllowed(boolean allowed);
    property public final com.mapbox.maps.extension.androidauto.DefaultMapboxCarMapGestureHandler gestureHandler;
    property public final kotlinx.coroutines.flow.StateFlow<com.mapbox.androidauto.car.navigation.CarCameraMode> nextCameraMode;
  }

  public final class CarNavigationCameraKt {
  }

  public final class CarNavigationEtaMapper {
    ctor public CarNavigationEtaMapper(com.mapbox.androidauto.car.navigation.CarDistanceFormatter carDistanceFormatter, com.mapbox.navigation.ui.tripprogress.api.MapboxTripProgressApi tripProgressApi);
    method public androidx.car.app.navigation.model.TravelEstimate from(com.mapbox.navigation.base.trip.model.RouteProgress routeProgress);
  }

  public final class CarNavigationInfoMapper {
    ctor public CarNavigationInfoMapper(android.content.Context context, com.mapbox.androidauto.car.navigation.maneuver.CarManeuverInstructionRenderer carManeuverInstructionRenderer, com.mapbox.androidauto.car.navigation.maneuver.CarManeuverIconRenderer carManeuverIconRenderer, com.mapbox.androidauto.car.navigation.lanes.CarLanesImageRenderer carLanesImageGenerator, com.mapbox.androidauto.car.navigation.CarDistanceFormatter carDistanceFormatter);
    method public androidx.car.app.navigation.model.NavigationTemplate.NavigationInfo? mapNavigationInfo(com.mapbox.bindgen.Expected<com.mapbox.navigation.ui.maneuver.model.ManeuverError,java.util.List<com.mapbox.navigation.ui.maneuver.model.Maneuver>> expectedManeuvers, java.util.List<? extends com.mapbox.navigation.ui.shield.model.RouteShield> routeShields, com.mapbox.navigation.base.trip.model.RouteProgress routeProgress);
  }

  public final class CarNavigationInfoObserver {
    ctor public CarNavigationInfoObserver(com.mapbox.androidauto.car.navigation.CarActiveGuidanceCarContext carActiveGuidanceCarContext);
    method public androidx.car.app.navigation.model.NavigationTemplate.NavigationInfo? getNavigationInfo();
    method public androidx.car.app.navigation.model.TravelEstimate? getTravelEstimateInfo();
    method public void setTravelEstimateInfo(androidx.car.app.navigation.model.TravelEstimate?);
    method public void start(kotlin.jvm.functions.Function0<kotlin.Unit> onNavigationInfoChanged);
    method public void stop();
    property public final androidx.car.app.navigation.model.NavigationTemplate.NavigationInfo? navigationInfo;
    property public final androidx.car.app.navigation.model.TravelEstimate? travelEstimateInfo;
  }

  public final class MapUserStyleObserver implements com.mapbox.maps.extension.androidauto.MapboxCarMapObserver {
    ctor public MapUserStyleObserver();
    method public String getStyleId();
    method public String getUserId();
    method public void onAttached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onDetached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void setStyleId(String);
    method public void setUserId(String);
    property public final String styleId;
    property public final String userId;
  }

}

package com.mapbox.androidauto.car.navigation.lanes {

  public final class CarLaneIcon {
    ctor public CarLaneIcon(com.mapbox.navigation.ui.maneuver.model.LaneIcon laneIcon, boolean isActive);
    method public com.mapbox.navigation.ui.maneuver.model.LaneIcon component1();
    method public boolean component2();
    method public com.mapbox.androidauto.car.navigation.lanes.CarLaneIcon copy(com.mapbox.navigation.ui.maneuver.model.LaneIcon laneIcon, boolean isActive);
    method public com.mapbox.navigation.ui.maneuver.model.LaneIcon getLaneIcon();
    method public boolean isActive();
    property public final boolean isActive;
    property public final com.mapbox.navigation.ui.maneuver.model.LaneIcon laneIcon;
  }

  public final class CarLaneIconOptions {
    method public android.content.res.Resources.Theme getActiveTheme();
    method public android.content.res.Resources.Theme getNotActiveTheme();
    method public com.mapbox.androidauto.car.navigation.lanes.CarLaneIconOptions.Builder toBuilder();
    property public final android.content.res.Resources.Theme activeTheme;
    property public final android.content.res.Resources.Theme notActiveTheme;
  }

  public static final class CarLaneIconOptions.Builder {
    ctor public CarLaneIconOptions.Builder();
    method public com.mapbox.androidauto.car.navigation.lanes.CarLaneIconOptions.Builder activeTheme(android.content.res.Resources.Theme activeTheme);
    method public com.mapbox.androidauto.car.navigation.lanes.CarLaneIconOptions build(android.content.Context? context = null);
    method public com.mapbox.androidauto.car.navigation.lanes.CarLaneIconOptions.Builder notActiveTheme(android.content.res.Resources.Theme notActiveTheme);
  }

  public final class CarLanesImage {
    method public androidx.car.app.model.CarIcon getCarIcon();
    method public java.util.List<androidx.car.app.navigation.model.Lane> getLanes();
    property public final androidx.car.app.model.CarIcon carIcon;
    property public final java.util.List<androidx.car.app.navigation.model.Lane> lanes;
  }

  public final class CarLanesImageRenderer {
    ctor public CarLanesImageRenderer(android.content.Context context, @ColorInt int background = 0, com.mapbox.androidauto.car.navigation.lanes.CarLaneIconOptions options = CarLaneIconOptions.<init>().build(context));
    method public int getBackground();
    method public com.mapbox.androidauto.car.navigation.lanes.CarLaneIconOptions getOptions();
    method public com.mapbox.androidauto.car.navigation.lanes.CarLanesImage? renderLanesImage(com.mapbox.navigation.ui.maneuver.model.Lane? lane);
    property public final int background;
    property public final com.mapbox.androidauto.car.navigation.lanes.CarLaneIconOptions options;
  }

  public final class CarLanesImageRendererKt {
    method public static androidx.car.app.navigation.model.Step.Builder useMapboxLaneGuidance(androidx.car.app.navigation.model.Step.Builder, com.mapbox.androidauto.car.navigation.lanes.CarLanesImageRenderer imageGenerator, com.mapbox.navigation.ui.maneuver.model.Lane? laneGuidance);
  }

}

package com.mapbox.androidauto.car.navigation.maneuver {

  public final class CarManeuverIconOptions {
    method public int getBackground();
    method public android.content.Context getContext();
    method public int getStyleRes();
    method public com.mapbox.androidauto.car.navigation.maneuver.CarManeuverIconOptions.Builder toBuilder();
    property public final int background;
    property public final android.content.Context context;
    property public final int styleRes;
  }

  public static final class CarManeuverIconOptions.Builder {
    ctor public CarManeuverIconOptions.Builder(android.content.Context context);
    method public com.mapbox.androidauto.car.navigation.maneuver.CarManeuverIconOptions.Builder background(@ColorInt int background);
    method public com.mapbox.androidauto.car.navigation.maneuver.CarManeuverIconOptions build();
    method public com.mapbox.androidauto.car.navigation.maneuver.CarManeuverIconOptions.Builder styleRes(@StyleRes Integer? styleRes);
  }

  public final class CarManeuverIconRenderer {
    ctor public CarManeuverIconRenderer(com.mapbox.androidauto.car.navigation.maneuver.CarManeuverIconOptions options);
    method public androidx.car.app.model.CarIcon? renderManeuverIcon(com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver maneuver);
    method public androidx.car.app.model.CarIcon? renderManeuverIcon(com.mapbox.navigation.ui.maneuver.model.SubManeuver maneuver);
  }

  public final class CarManeuverInstructionRenderer {
    ctor public CarManeuverInstructionRenderer();
    method public CharSequence renderInstruction(java.util.List<com.mapbox.navigation.ui.maneuver.model.Component> maneuver, java.util.List<? extends com.mapbox.navigation.ui.shield.model.RouteShield> shields, com.mapbox.navigation.ui.maneuver.view.MapboxExitText exitView, String? modifier, int desiredHeight);
  }

  public final class CarManeuverMapper {
    method public androidx.car.app.navigation.model.Trip from(com.mapbox.navigation.base.trip.model.RouteProgress routeProgress, com.mapbox.navigation.ui.maneuver.api.MapboxManeuverApi maneuverApi, com.mapbox.androidauto.car.navigation.CarDistanceFormatter distanceFormatter);
    method public androidx.car.app.navigation.model.Maneuver.Builder from(com.mapbox.bindgen.Expected<com.mapbox.navigation.ui.maneuver.model.ManeuverError,java.util.List<com.mapbox.navigation.ui.maneuver.model.Maneuver>> expected);
    method public androidx.car.app.navigation.model.Maneuver.Builder from(String? maneuverType, String? maneuverModifier, Double? degrees = null);
    field public static final com.mapbox.androidauto.car.navigation.maneuver.CarManeuverMapper INSTANCE;
  }

}

package com.mapbox.androidauto.car.navigation.roadlabel {

  public final class RoadLabelOptions {
    method public int getBackgroundColor();
    method public int getRoundedLabelColor();
    method public Integer? getShadowColor();
    method public int getTextColor();
    method public com.mapbox.androidauto.car.navigation.roadlabel.RoadLabelOptions.Builder toBuilder();
    property public final int backgroundColor;
    property public final int roundedLabelColor;
    property public final Integer? shadowColor;
    property public final int textColor;
    field public static final com.mapbox.androidauto.car.navigation.roadlabel.RoadLabelOptions.Companion Companion;
  }

  public static final class RoadLabelOptions.Builder {
    ctor public RoadLabelOptions.Builder();
    method public com.mapbox.androidauto.car.navigation.roadlabel.RoadLabelOptions.Builder backgroundColor(@ColorInt int backgroundColor);
    method public com.mapbox.androidauto.car.navigation.roadlabel.RoadLabelOptions build();
    method public com.mapbox.androidauto.car.navigation.roadlabel.RoadLabelOptions.Builder roundedLabelColor(@ColorInt int roundedLabelColor);
    method public com.mapbox.androidauto.car.navigation.roadlabel.RoadLabelOptions.Builder shadowColor(@ColorInt Integer? shadowColor);
    method public com.mapbox.androidauto.car.navigation.roadlabel.RoadLabelOptions.Builder textColor(@ColorInt int textColor);
  }

  public static final class RoadLabelOptions.Companion {
    method public com.mapbox.androidauto.car.navigation.roadlabel.RoadLabelOptions getDefault();
    property public final com.mapbox.androidauto.car.navigation.roadlabel.RoadLabelOptions default;
  }

  public final class RoadLabelRenderer {
    ctor public RoadLabelRenderer(android.content.res.Resources resources);
    method public android.graphics.Bitmap? render(java.util.List<com.mapbox.navigation.base.road.model.RoadComponent> road, java.util.List<? extends com.mapbox.navigation.ui.shield.model.RouteShield> shields, com.mapbox.androidauto.car.navigation.roadlabel.RoadLabelOptions options = RoadLabelOptions.default);
  }

  public final class RoadLabelSurfaceLayer extends com.mapbox.androidauto.surfacelayer.CarSurfaceLayer {
    ctor public RoadLabelSurfaceLayer(androidx.car.app.CarContext carContext, com.mapbox.navigation.core.MapboxNavigation mapboxNavigation);
    method public java.util.List<com.mapbox.androidauto.surfacelayer.textview.CarScene2d> children();
    method public androidx.car.app.CarContext getCarContext();
    method public com.mapbox.navigation.core.MapboxNavigation getMapboxNavigation();
    property public final androidx.car.app.CarContext carContext;
    property public final com.mapbox.navigation.core.MapboxNavigation mapboxNavigation;
  }

  public abstract class RoadNameObserver implements com.mapbox.navigation.core.trip.session.LocationObserver {
    ctor public RoadNameObserver(com.mapbox.navigation.core.MapboxNavigation mapboxNavigation, com.mapbox.navigation.ui.shield.api.MapboxRouteShieldApi routeShieldApi, com.mapbox.androidauto.car.navigation.MapUserStyleObserver mapUserStyleObserver);
    method public final java.util.List<com.mapbox.navigation.base.road.model.RoadComponent> getCurrentRoad();
    method public final java.util.List<com.mapbox.navigation.ui.shield.model.RouteShield> getCurrentShields();
    method public final com.mapbox.navigation.core.MapboxNavigation getMapboxNavigation();
    method public void onNewLocationMatcherResult(com.mapbox.navigation.core.trip.session.LocationMatcherResult locationMatcherResult);
    method public void onNewRawLocation(android.location.Location rawLocation);
    method public abstract void onRoadUpdate(java.util.List<com.mapbox.navigation.base.road.model.RoadComponent> road, java.util.List<? extends com.mapbox.navigation.ui.shield.model.RouteShield> shields);
    method public final void setCurrentRoad(java.util.List<com.mapbox.navigation.base.road.model.RoadComponent>);
    method public final void setCurrentShields(java.util.List<? extends com.mapbox.navigation.ui.shield.model.RouteShield>);
    property public final java.util.List<com.mapbox.navigation.base.road.model.RoadComponent> currentRoad;
    property public final java.util.List<com.mapbox.navigation.ui.shield.model.RouteShield> currentShields;
    property public final com.mapbox.navigation.core.MapboxNavigation mapboxNavigation;
  }

}

package com.mapbox.androidauto.car.navigation.speedlimit {

  public final class CarSpeedLimitRenderer implements com.mapbox.maps.extension.androidauto.MapboxCarMapObserver {
    ctor public CarSpeedLimitRenderer(com.mapbox.androidauto.car.MainCarContext mainCarContext);
    method public void onAttached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onDetached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onVisibleAreaChanged(android.graphics.Rect visibleArea, com.mapbox.maps.EdgeInsets edgeInsets);
  }

  public final class SpeedLimitWidget extends com.mapbox.maps.renderer.widget.BitmapWidget {
    ctor public SpeedLimitWidget(com.mapbox.maps.renderer.widget.WidgetPosition position = com.mapbox.maps.renderer.widget.WidgetPosition(com.mapbox.maps.renderer.widget.WidgetPosition.Vertical.BOTTOM, com.mapbox.maps.renderer.widget.WidgetPosition.Horizontal.RIGHT), float marginX = 26f, float marginY = 50f);
    method public void update(Integer? speedLimit, int speed);
  }

}

package com.mapbox.androidauto.car.permissions {

  public final class NeedsLocationPermissionsScreen extends androidx.car.app.Screen {
    ctor public NeedsLocationPermissionsScreen(androidx.car.app.CarContext carContext);
    method public androidx.car.app.model.Template onGetTemplate();
  }

}

package com.mapbox.androidauto.car.placeslistonmap {

  public final class PlaceMarkerRenderer {
    ctor public PlaceMarkerRenderer(android.content.Context context, @ColorInt int background = 0);
    method public android.graphics.Bitmap? getBitmap();
    method public androidx.car.app.model.CarIcon renderMarker();
    method public void setBitmap(android.graphics.Bitmap?);
    property public final android.graphics.Bitmap? bitmap;
  }

  public interface PlacesListItemClickListener {
    method public void onItemClick(com.mapbox.androidauto.car.search.PlaceRecord placeRecord);
  }

  public final class PlacesListItemMapper {
    ctor public PlacesListItemMapper(com.mapbox.androidauto.car.placeslistonmap.PlaceMarkerRenderer placeMarkerRenderer, com.mapbox.navigation.base.formatter.UnitType unitType);
    method public androidx.car.app.model.ItemList mapToItemList(android.location.Location anchorLocation, java.util.List<com.mapbox.androidauto.car.search.PlaceRecord> places, com.mapbox.androidauto.car.placeslistonmap.PlacesListItemClickListener? itemClickListener);
  }

  public final class PlacesListOnMapLayerUtil {
    ctor public PlacesListOnMapLayerUtil();
    method public void initializePlacesListOnMapLayer(com.mapbox.maps.Style style, android.content.res.Resources resources);
    method public void removePlacesListOnMapLayer(com.mapbox.maps.Style style);
    method public void updatePlacesListOnMapLayer(com.mapbox.maps.Style style, com.mapbox.geojson.FeatureCollection featureCollection);
    field public static final com.mapbox.androidauto.car.placeslistonmap.PlacesListOnMapLayerUtil.Companion Companion;
  }

  public static final class PlacesListOnMapLayerUtil.Companion {
  }

  public interface PlacesListOnMapProvider {
    method public void cancel();
    method public suspend Object? getPlaces(kotlin.coroutines.Continuation<? super com.mapbox.bindgen.Expected<com.mapbox.androidauto.car.search.GetPlacesError,java.util.List<? extends com.mapbox.androidauto.car.search.PlaceRecord>>>);
  }

  @com.mapbox.maps.MapboxExperimental public final class PlacesListOnMapScreen extends androidx.car.app.Screen {
    ctor public PlacesListOnMapScreen(com.mapbox.androidauto.car.MainCarContext mainCarContext, com.mapbox.androidauto.car.placeslistonmap.PlacesListOnMapProvider placesProvider, com.mapbox.androidauto.car.placeslistonmap.PlacesListItemMapper placesListItemMapper, java.util.List<? extends com.mapbox.androidauto.car.action.MapboxActionProvider> actionProviders, com.mapbox.androidauto.car.search.SearchCarContext searchCarContext = com.mapbox.androidauto.car.search.SearchCarContext(mainCarContext), com.mapbox.androidauto.car.placeslistonmap.PlacesListOnMapLayerUtil placesLayerUtil = com.mapbox.androidauto.car.placeslistonmap.PlacesListOnMapLayerUtil());
    method public androidx.car.app.model.ItemList getItemList();
    method public androidx.car.app.model.Template onGetTemplate();
    method public void setItemList(androidx.car.app.model.ItemList);
    property public final androidx.car.app.model.ItemList itemList;
  }

}

package com.mapbox.androidauto.car.preview {

  public final class CarRouteLine implements com.mapbox.maps.extension.androidauto.MapboxCarMapObserver {
    ctor public CarRouteLine(com.mapbox.androidauto.car.MainCarContext mainCarContext);
    method public com.mapbox.androidauto.car.MainCarContext getMainCarContext();
    method public void onAttached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method public void onDetached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    property public final com.mapbox.androidauto.car.MainCarContext mainCarContext;
  }

  @com.mapbox.maps.MapboxExperimental public final class CarRoutePreviewScreen extends androidx.car.app.Screen {
    ctor public CarRoutePreviewScreen(com.mapbox.androidauto.car.preview.RoutePreviewCarContext routePreviewCarContext, com.mapbox.androidauto.car.search.PlaceRecord placeRecord, java.util.List<com.mapbox.navigation.base.route.NavigationRoute> navigationRoutes, com.mapbox.androidauto.car.placeslistonmap.PlacesListOnMapLayerUtil placesLayerUtil = com.mapbox.androidauto.car.placeslistonmap.PlacesListOnMapLayerUtil());
    method public com.mapbox.androidauto.car.location.CarLocationRenderer getCarLocationRenderer();
    method public com.mapbox.androidauto.car.navigation.CarNavigationCamera getCarNavigationCamera();
    method public com.mapbox.androidauto.car.preview.CarRouteLine getCarRouteLine();
    method public com.mapbox.androidauto.car.navigation.speedlimit.CarSpeedLimitRenderer getCarSpeedLimitRenderer();
    method public int getSelectedIndex();
    method public androidx.car.app.model.Template onGetTemplate();
    method public void setSelectedIndex(int);
    property public final com.mapbox.androidauto.car.location.CarLocationRenderer carLocationRenderer;
    property public final com.mapbox.androidauto.car.navigation.CarNavigationCamera carNavigationCamera;
    property public final com.mapbox.androidauto.car.preview.CarRouteLine carRouteLine;
    property public final com.mapbox.androidauto.car.navigation.speedlimit.CarSpeedLimitRenderer carSpeedLimitRenderer;
    property public final int selectedIndex;
  }

  public final class CarRouteRequest {
    ctor public CarRouteRequest(com.mapbox.navigation.core.MapboxNavigation mapboxNavigation, com.mapbox.navigation.ui.maps.location.NavigationLocationProvider navigationLocationProvider);
    method public void cancelRequest();
    method public com.mapbox.navigation.core.MapboxNavigation getMapboxNavigation();
    method public void request(com.mapbox.androidauto.car.search.PlaceRecord placeRecord, com.mapbox.androidauto.car.preview.CarRouteRequestCallback callback);
    method public suspend Object? requestSync(com.mapbox.androidauto.car.search.PlaceRecord placeRecord, kotlin.coroutines.Continuation<? super java.util.List<? extends com.mapbox.navigation.base.route.NavigationRoute>>);
    property public final com.mapbox.navigation.core.MapboxNavigation mapboxNavigation;
  }

  public interface CarRouteRequestCallback {
    method public void onDestinationLocationUnknown();
    method public void onNoRoutesFound();
    method public void onRoutesReady(com.mapbox.androidauto.car.search.PlaceRecord placeRecord, java.util.List<com.mapbox.navigation.base.route.NavigationRoute> routes);
    method public void onUnknownCurrentLocation();
  }

  public final class RoutePreviewCarContext {
    method public com.mapbox.androidauto.car.MainCarContext component1();
    method public com.mapbox.androidauto.car.preview.RoutePreviewCarContext copy(com.mapbox.androidauto.car.MainCarContext mainCarContext);
    method public androidx.car.app.CarContext getCarContext();
    method public com.mapbox.navigation.base.formatter.DistanceFormatter getDistanceFormatter();
    method public com.mapbox.androidauto.car.MainCarContext getMainCarContext();
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap getMapboxCarMap();
    method public com.mapbox.navigation.core.MapboxNavigation getMapboxNavigation();
    property public final androidx.car.app.CarContext carContext;
    property public final com.mapbox.navigation.base.formatter.DistanceFormatter distanceFormatter;
    property public final com.mapbox.androidauto.car.MainCarContext mainCarContext;
    property public final com.mapbox.maps.extension.androidauto.MapboxCarMap mapboxCarMap;
    property public final com.mapbox.navigation.core.MapboxNavigation mapboxNavigation;
  }

}

package com.mapbox.androidauto.car.search {

  public final class CarSearchEngine {
    ctor public CarSearchEngine(com.mapbox.search.SearchEngine searchEngine, com.mapbox.navigation.ui.maps.location.NavigationLocationProvider navigationLocationProvider);
    method public void search(String query, kotlin.jvm.functions.Function1<? super java.util.List<? extends com.mapbox.search.result.SearchSuggestion>,kotlin.Unit> callback);
    method public void select(com.mapbox.search.result.SearchSuggestion selection, kotlin.jvm.functions.Function1<? super java.util.List<? extends com.mapbox.search.result.SearchResult>,kotlin.Unit> callback);
  }

  public final class FavoritesApi implements com.mapbox.androidauto.car.feedback.core.CarFeedbackItemProvider com.mapbox.androidauto.car.placeslistonmap.PlacesListOnMapProvider {
    ctor public FavoritesApi(androidx.car.app.CarContext carContext, com.mapbox.search.record.FavoritesDataProvider favoritesProvider);
    method public suspend Object? addFavorite(com.mapbox.search.record.FavoriteRecord favoriteRecord, kotlin.coroutines.Continuation<? super com.mapbox.bindgen.Expected<com.mapbox.androidauto.car.search.GetPlacesError,com.mapbox.search.record.FavoriteRecord>>);
    method public void cancel();
    method public java.util.List<com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem> feedbackItems();
    method public suspend Object? getFavorites(kotlin.coroutines.Continuation<? super com.mapbox.bindgen.Expected<com.mapbox.androidauto.car.search.GetPlacesError,java.util.List<? extends com.mapbox.search.record.FavoriteRecord>>>);
    method public suspend Object? getPlaces(kotlin.coroutines.Continuation<? super com.mapbox.bindgen.Expected<com.mapbox.androidauto.car.search.GetPlacesError,java.util.List<? extends com.mapbox.androidauto.car.search.PlaceRecord>>>);
    method public suspend Object? removeFavorite(String favoriteId, kotlin.coroutines.Continuation<? super com.mapbox.bindgen.Expected<com.mapbox.androidauto.car.search.GetPlacesError,java.lang.Boolean>>);
  }

  public final class GetPlacesError {
    method public String getErrorMessage();
    method public Throwable? getThrowable();
    property public final String errorMessage;
    property public final Throwable? throwable;
  }

  public final class PlaceRecord {
    ctor public PlaceRecord(String id, String name, com.mapbox.geojson.Point? coordinate, String? description = null, java.util.List<java.lang.String> categories = listOf());
    method public java.util.List<java.lang.String> getCategories();
    method public com.mapbox.geojson.Point? getCoordinate();
    method public String? getDescription();
    method public String getId();
    method public String getName();
    property public final java.util.List<java.lang.String> categories;
    property public final com.mapbox.geojson.Point? coordinate;
    property public final String? description;
    property public final String id;
    property public final String name;
  }

  public final class PlaceRecordMapper {
    method public com.mapbox.androidauto.car.search.PlaceRecord fromCarmenFeature(com.mapbox.api.geocoding.v5.models.CarmenFeature carmenFeature);
    method public com.mapbox.androidauto.car.search.PlaceRecord fromFavoriteRecord(com.mapbox.search.record.FavoriteRecord favoriteRecord);
    method public com.mapbox.androidauto.car.search.PlaceRecord fromSearchResult(com.mapbox.search.result.SearchResult searchResult);
    field public static final com.mapbox.androidauto.car.search.PlaceRecordMapper INSTANCE;
  }

  public final class SearchCarContext {
    ctor public SearchCarContext(com.mapbox.androidauto.car.MainCarContext mainCarContext);
    method public androidx.car.app.CarContext getCarContext();
    method public com.mapbox.androidauto.car.preview.CarRouteRequest getCarRouteRequest();
    method public com.mapbox.androidauto.car.search.CarSearchEngine getCarSearchEngine();
    method public com.mapbox.navigation.base.formatter.DistanceFormatter getDistanceFormatter();
    method public com.mapbox.androidauto.car.MainCarContext getMainCarContext();
    property public final androidx.car.app.CarContext carContext;
    property public final com.mapbox.androidauto.car.preview.CarRouteRequest carRouteRequest;
    property public final com.mapbox.androidauto.car.search.CarSearchEngine carSearchEngine;
    property public final com.mapbox.navigation.base.formatter.DistanceFormatter distanceFormatter;
    property public final com.mapbox.androidauto.car.MainCarContext mainCarContext;
  }

  public final class SearchScreen extends androidx.car.app.Screen {
    ctor public SearchScreen(com.mapbox.androidauto.car.search.SearchCarContext searchCarContext);
    method public void doSearch(String searchText);
    method public androidx.car.app.model.ItemList getItemList();
    method public androidx.car.app.model.Template onGetTemplate();
    method public void setItemList(androidx.car.app.model.ItemList);
    property public final androidx.car.app.model.ItemList itemList;
    field public static final com.mapbox.androidauto.car.search.SearchScreen.Companion Companion;
  }

  public static final class SearchScreen.Companion {
    method public Object? parseResult(Object? results);
  }

}

package com.mapbox.androidauto.car.settings {

  public final class CarSettingsScreen extends androidx.car.app.Screen {
    ctor public CarSettingsScreen(com.mapbox.androidauto.car.settings.SettingsCarContext settingsCarContext);
    method public androidx.car.app.model.Template onGetTemplate();
  }

  public final class CarSettingsStorage {
    ctor public CarSettingsStorage(androidx.car.app.CarContext carContext);
    method public androidx.car.app.CarContext getCarContext();
    method public boolean readSharedPref(String key, boolean defaultValue);
    method public void writeSharedPref(String key, boolean value);
    property public final androidx.car.app.CarContext carContext;
  }

  public final class CarSettingsStorageKt {
  }

  public final class SettingsCarContext {
    ctor public SettingsCarContext(com.mapbox.androidauto.car.MainCarContext mainCarContext);
    method public androidx.car.app.CarContext getCarContext();
    method public com.mapbox.androidauto.car.settings.CarSettingsStorage getCarSettingsStorage();
    method public com.mapbox.androidauto.car.MainCarContext getMainCarContext();
    property public final androidx.car.app.CarContext carContext;
    property public final com.mapbox.androidauto.car.settings.CarSettingsStorage carSettingsStorage;
    property public final com.mapbox.androidauto.car.MainCarContext mainCarContext;
  }

  public final class SettingsFailureScreen extends androidx.car.app.Screen {
    ctor public SettingsFailureScreen(androidx.car.app.CarContext carContext);
    method public androidx.car.app.model.Template onGetTemplate();
  }

}

package com.mapbox.androidauto.deeplink {

  public final class GeoDeeplinkGeocoding {
    ctor public GeoDeeplinkGeocoding(String accessToken);
    method public void cancel();
    method public com.mapbox.api.geocoding.v5.MapboxGeocoding? getCurrentMapboxGeocoding();
    method public suspend Object? requestPlaces(com.mapbox.navigation.core.geodeeplink.GeoDeeplink geoDeeplink, com.mapbox.geojson.Point origin, kotlin.coroutines.Continuation<? super com.mapbox.api.geocoding.v5.models.GeocodingResponse>);
    method public void setCurrentMapboxGeocoding(com.mapbox.api.geocoding.v5.MapboxGeocoding?);
    property public final com.mapbox.api.geocoding.v5.MapboxGeocoding? currentMapboxGeocoding;
  }

  public final class GeoDeeplinkNavigateAction {
    ctor public GeoDeeplinkNavigateAction(com.mapbox.androidauto.car.MainCarContext mainCarContext, androidx.lifecycle.Lifecycle lifecycle);
    method public androidx.lifecycle.Lifecycle getLifecycle();
    method public com.mapbox.androidauto.car.MainCarContext getMainCarContext();
    method public androidx.car.app.Screen? onNewIntent(android.content.Intent intent);
    property public final androidx.lifecycle.Lifecycle lifecycle;
    property public final com.mapbox.androidauto.car.MainCarContext mainCarContext;
  }

  public final class GeoDeeplinkParser {
    method public kotlinx.coroutines.channels.ReceiveChannel<com.mapbox.navigation.core.geodeeplink.GeoDeeplink> getDestinationReceiveChannel();
    method public void parseAndSave(String? geoDeeplink);
    property public final kotlinx.coroutines.channels.ReceiveChannel<com.mapbox.navigation.core.geodeeplink.GeoDeeplink> destinationReceiveChannel;
    field public static final com.mapbox.androidauto.deeplink.GeoDeeplinkParser INSTANCE;
  }

  public final class GeoDeeplinkPlacesListOnMapProvider implements com.mapbox.androidauto.car.feedback.core.CarFeedbackItemProvider com.mapbox.androidauto.car.placeslistonmap.PlacesListOnMapProvider {
    ctor public GeoDeeplinkPlacesListOnMapProvider(androidx.car.app.CarContext carContext, com.mapbox.androidauto.deeplink.GeoDeeplinkGeocoding geoDeeplinkGeocoding, com.mapbox.navigation.core.geodeeplink.GeoDeeplink geoDeeplink);
    method public void cancel();
    method public java.util.List<com.mapbox.androidauto.car.feedback.ui.CarFeedbackItem> feedbackItems();
    method public suspend Object? getPlaces(kotlin.coroutines.Continuation<? super com.mapbox.bindgen.Expected<com.mapbox.androidauto.car.search.GetPlacesError,java.util.List<? extends com.mapbox.androidauto.car.search.PlaceRecord>>>);
  }

}

package com.mapbox.androidauto.navigation.audioguidance {

  public final class AppAudioGuidanceUiKt {
    method public static void attachAudioGuidance(androidx.fragment.app.Fragment, com.mapbox.navigation.ui.voice.view.MapboxSoundButton mapboxSoundButton);
    method public static void muteAudioGuidance(androidx.lifecycle.Lifecycle);
  }

  public final class CarAudioGuidanceUi implements com.mapbox.androidauto.car.action.MapboxActionProvider.ScreenActionProvider {
    ctor public CarAudioGuidanceUi();
    method public androidx.car.app.model.Action getAction(androidx.car.app.Screen screen);
  }

}

package com.mapbox.androidauto.navigation.location {

  public interface CarAppLocation extends com.mapbox.navigation.core.lifecycle.MapboxNavigationObserver {
    method public com.mapbox.navigation.ui.maps.location.NavigationLocationProvider getNavigationLocationProvider();
    method public suspend Object? validLocation(kotlin.coroutines.Continuation<? super android.location.Location>);
    property public abstract com.mapbox.navigation.ui.maps.location.NavigationLocationProvider navigationLocationProvider;
  }

}

package com.mapbox.androidauto.notification {

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class CarNotificationInterceptor implements com.mapbox.navigation.core.lifecycle.MapboxNavigationObserver {
    ctor public CarNotificationInterceptor(android.content.Context context, Class<? extends androidx.car.app.CarAppService> carAppServiceClass);
    method public void onAttached(com.mapbox.navigation.core.MapboxNavigation mapboxNavigation);
    method public void onDetached(com.mapbox.navigation.core.MapboxNavigation mapboxNavigation);
  }

}

package com.mapbox.androidauto.surfacelayer {

  public class CarSurfaceLayer implements com.mapbox.maps.extension.androidauto.MapboxCarMapObserver {
    ctor public CarSurfaceLayer();
    method public java.util.List<com.mapbox.maps.extension.androidauto.MapboxCarMapObserver> children();
    method public final com.mapbox.maps.EdgeInsets? getEdgeInsets();
    method protected final com.mapbox.maps.extension.androidauto.MapboxCarMapSurface? getMapboxCarMapSurface();
    method public final android.graphics.Rect? getVisibleArea();
    method @CallSuper public void onAttached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method @CallSuper public void onDetached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface mapboxCarMapSurface);
    method @CallSuper public void onVisibleAreaChanged(android.graphics.Rect visibleArea, com.mapbox.maps.EdgeInsets edgeInsets);
    method public final kotlin.Pair<java.lang.Integer,java.lang.Integer>? surfaceDimensions();
    property public final com.mapbox.maps.EdgeInsets? edgeInsets;
    property protected final com.mapbox.maps.extension.androidauto.MapboxCarMapSurface? mapboxCarMapSurface;
    property public final android.graphics.Rect? visibleArea;
  }

  public final class GLUtilsKt {
  }

}

package com.mapbox.androidauto.surfacelayer.textview {

  public final class CarCamera2d extends com.mapbox.androidauto.surfacelayer.CarSurfaceLayer {
    ctor public CarCamera2d();
    method public float[] getProjM();
    method public float[] getViewM();
    property public final float[] projM;
    property public final float[] viewM;
  }

  public final class CarScene2d extends com.mapbox.androidauto.surfacelayer.CarSurfaceLayer {
    ctor public CarScene2d();
    method public java.util.List<com.mapbox.androidauto.surfacelayer.CarSurfaceLayer> children();
    method public com.mapbox.androidauto.surfacelayer.textview.CarCamera2d getCamera();
    method public com.mapbox.androidauto.surfacelayer.textview.CarTextModel2d getModel();
    method public float[] getMvpMatrix();
    property public final com.mapbox.androidauto.surfacelayer.textview.CarCamera2d camera;
    property public final com.mapbox.androidauto.surfacelayer.textview.CarTextModel2d model;
    property public final float[] mvpMatrix;
  }

  public final class CarTextLayerHost implements com.mapbox.maps.CustomLayerHost {
    ctor public CarTextLayerHost();
    method public void contextLost();
    method public void deinitialize();
    method public com.mapbox.androidauto.surfacelayer.textview.CarScene2d getMapScene();
    method public void initialize();
    method public void offerBitmap(android.graphics.Bitmap? bitmap);
    method public void render(com.mapbox.maps.CustomLayerRenderParameters parameters);
    property public final com.mapbox.androidauto.surfacelayer.textview.CarScene2d mapScene;
    field public static final com.mapbox.androidauto.surfacelayer.textview.CarTextLayerHost.Companion Companion;
  }

  public static final class CarTextLayerHost.Companion {
    method public float[] getColor();
    method public void setColor(float[]);
    property public final float[] color;
  }

  public final class CarTextModel2d extends com.mapbox.androidauto.surfacelayer.CarSurfaceLayer {
    ctor public CarTextModel2d();
    method public int getDimensions();
    method public int getLength();
    method public float[] getModelMatrix();
    method public int getStride();
    method public java.nio.FloatBuffer getTextureCords();
    method public java.nio.FloatBuffer getVertices();
    method public void updateModelMatrix(android.graphics.Bitmap? nextBitmap);
    property public final int dimensions;
    property public final int length;
    property public final float[] modelMatrix;
    property public final int stride;
    property public final java.nio.FloatBuffer textureCords;
    property public final java.nio.FloatBuffer vertices;
  }

}

