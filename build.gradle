buildscript {
  apply from: "${rootDir}/gradle/dependencies.gradle"
    repositories {
    google()
    mavenCentral()
    jcenter()
    maven { url 'https://plugins.gradle.org/m2' }
    maven {
      url 'https://api.mapbox.com/downloads/v2/releases/maven'
      authentication {
        basic(BasicAuthentication)
      }
      credentials {
        username = "mapbox"
        password = project.hasProperty('SDK_REGISTRY_TOKEN') ? project.property('SDK_REGISTRY_TOKEN') : System.getenv('SDK_REGISTRY_TOKEN')
      }
    }
  }
  dependencies {
    classpath pluginDependencies.gradle
    classpath pluginDependencies.kotlin
    classpath pluginDependencies.dependencyUpdates
    classpath pluginDependencies.jacoco
    classpath pluginDependencies.googleServices
    classpath pluginDependencies.license
    classpath pluginDependencies.mapboxSdkVersions
    classpath pluginDependencies.mapboxSdkRegistry
    classpath pluginDependencies.mapboxAccessToken
    classpath pluginDependencies.mapboxNativeDownload
    classpath pluginDependencies.dokka
    classpath pluginDependencies.firebaseCrashlytics
    classpath pluginDependencies.googleServices
  }
}

apply plugin: 'jacoco'
apply plugin: 'org.jetbrains.dokka'

task testReport(type: TestReport, group: 'Build') {
  description = 'Generates an aggregate test report'
  destinationDir = file("${buildDir}/reports/allTests")
}

allprojects {
  repositories {
    google()
    mavenCentral()
    jcenter()
    maven { url 'https://plugins.gradle.org/m2' }
    maven {
      url 'https://api.mapbox.com/downloads/v2/releases/maven'
      authentication {
        basic(BasicAuthentication)
      }
      credentials {
        username = "mapbox"
        password = project.hasProperty('SDK_REGISTRY_TOKEN') ? project.property('SDK_REGISTRY_TOKEN') : System.getenv('SDK_REGISTRY_TOKEN')
      }
    }
    // we allow access to snapshots repo if ALLOW_SNAPSHOT_REPOSITORY is set, what means we are running on CI 
    // with Navigation Native forced to be some snapshot version
    // if you need to use snapshots while development, just set `addSnapshotsRepo` to true manually
    def addSnapshotsRepo = project.hasProperty('ALLOW_SNAPSHOT_REPOSITORY') ? project.property('ALLOW_SNAPSHOT_REPOSITORY') : (System.getenv("ALLOW_SNAPSHOT_REPOSITORY")?.toBoolean() ?: false)
    if (addSnapshotsRepo) {
      println("Snapshot repository reference added.")
      maven {
        url 'https://api.mapbox.com/downloads/v2/snapshots/maven'
        authentication {
          basic(BasicAuthentication)
        }
        credentials {
          username = "mapbox"
          password = project.hasProperty('SDK_REGISTRY_TOKEN') ? project.property('SDK_REGISTRY_TOKEN') : System.getenv('SDK_REGISTRY_TOKEN')
        }
      }
    }
  }
}

subprojects {
  apply plugin: 'idea'
  apply from: "${rootDir}/gradle/dependencies.gradle"
  apply from: "${rootDir}/gradle/dependency-updates.gradle"
  apply from: "${rootDir}/gradle/checkstyle.gradle"
  apply from: "${rootDir}/gradle/dependencies-graph.gradle"

  plugins.withId('org.jetbrains.kotlin.jvm') {
    compileKotlin {
      kotlinOptions {
        jvmTarget = "1.8"
      }
    }
  }
}

apply from: "${rootDir}/gradle/kdoc-settings.gradle"
apply from: "${rootDir}/gradle/verify-common-sdk-version.gradle"

dokkaHtmlMultiModule {
  outputDirectory.set(kdocPath)
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
