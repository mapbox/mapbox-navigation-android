apply plugin: 'jacoco'

buildscript {
  apply from: "${rootDir}/gradle/dependencies.gradle"

  repositories {
    google()
    mavenCentral()
    jcenter()
    maven { url 'https://plugins.gradle.org/m2' }
    maven {
      url 'https://api.mapbox.com/downloads/v2/releases/maven'
      authentication {
        basic(BasicAuthentication)
      }
      credentials {
        username = "mapbox"
        password = project.hasProperty('SDK_REGISTRY_TOKEN') ? project.property('SDK_REGISTRY_TOKEN') : System.getenv('SDK_REGISTRY_TOKEN')
      }
    }
  }
  dependencies {
    classpath pluginDependencies.gradle
    classpath pluginDependencies.kotlin
    classpath pluginDependencies.dependencyUpdates
    classpath pluginDependencies.jacoco
    classpath pluginDependencies.googleServices
    classpath pluginDependencies.license
    classpath pluginDependencies.mapboxSdkVersions
    classpath pluginDependencies.dokka
    classpath pluginDependencies.mapboxSdkRegistry
    classpath pluginDependencies.mapboxAccessToken
  }
}

task testReport(type: TestReport, group: 'Build') {
  description = 'Generates an aggregate test report'
  destinationDir = file("${buildDir}/reports/allTests")
}

allprojects {
  repositories {
    google()
    mavenCentral()
    jcenter()
    maven { url 'https://plugins.gradle.org/m2' }
    maven {
      url 'https://api.mapbox.com/downloads/v2/releases/maven'
      authentication {
        basic(BasicAuthentication)
      }
      credentials {
        username = "mapbox"
        password = project.hasProperty('SDK_REGISTRY_TOKEN') ? project.property('SDK_REGISTRY_TOKEN') : System.getenv('SDK_REGISTRY_TOKEN')
      }
    }
    // uncomment if snapshots access is needed
    /*maven {
      url 'https://api.mapbox.com/downloads/v2/snapshots/maven'
      authentication {
        basic(BasicAuthentication)
      }
      credentials {
        username = "mapbox"
        password = project.hasProperty('SDK_REGISTRY_TOKEN') ? project.property('SDK_REGISTRY_TOKEN') : System.getenv('SDK_REGISTRY_TOKEN')
      }
    }*/
    /*maven {
      url 'https://mapbox.bintray.com/mapbox_internal'
      credentials {
        username = project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')
        password = project.hasProperty('BINTRAY_API_KEY') ? project.property('BINTRAY_API_KEY') : System.getenv('BINTRAY_API_KEY')
      }
    }*/
    /*maven {
      url 'https://mapbox.bintray.com/mapbox_collab'
      credentials {
        username = project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')
        password = project.hasProperty('BINTRAY_API_KEY') ? project.property('BINTRAY_API_KEY') : System.getenv('BINTRAY_API_KEY')
      }
    }*/
    /*maven {
      url 'https://mapbox.bintray.com/mapbox_private'
      credentials {
        username = project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : System.getenv('BINTRAY_USER')
        password = project.hasProperty('BINTRAY_API_KEY') ? project.property('BINTRAY_API_KEY') : System.getenv('BINTRAY_API_KEY')
      }
    }*/
    maven { url 'https://mapbox.bintray.com/mapbox' }
    // uncomment if snapshots access is needed
    // maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
  }
}

subprojects {
  apply plugin: 'idea'
  apply from: "${rootDir}/gradle/dependencies.gradle"
  apply from: "${rootDir}/gradle/dependency-updates.gradle"
  apply from: "${rootDir}/gradle/checkstyle.gradle"
  apply from: "${rootDir}/gradle/dependencies-graph.gradle"

  plugins.withId('org.jetbrains.kotlin.jvm') {
    compileKotlin {
      kotlinOptions {
        jvmTarget = "1.8"
      }
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
