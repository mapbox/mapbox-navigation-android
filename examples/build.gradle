apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.triplet.play'
apply from: "${rootDir}/gradle/script-git-version.gradle"
apply from: "${rootDir}/gradle/ktlint.gradle"

android {
    compileSdkVersion androidVersions.compileSdkVersion
    buildToolsVersion androidVersions.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    playConfigs {
        defaultAccountConfig {
            serviceAccountCredentials = file("$project.rootDir/android-gl-native-15d95ab30d0f.json")
        }
    }

    def getGitHash = { ->
        try {
            def stdout = new ByteArrayOutputStream()
            exec {
                commandLine 'git', 'rev-parse', '--short', 'HEAD'
                standardOutput = stdout
            }
            return stdout.toString().trim()
        } catch (Exception exception) {
            return ""
        }
    }

    defaultConfig {
        applicationId "com.mapbox.navigation.examples"
        minSdkVersion androidVersions.minSdkVersion
        targetSdkVersion androidVersions.targetSdkVersion
        multiDexEnabled true
        versionCode gitVersionCode
        versionName gitVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    signingConfigs {
        release {
            keyAlias System.getenv("CIRCLECI_ANDROID_KEYSTORE_ALIAS")
            keyPassword System.getenv("CIRCLECI_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
            storeFile file("$project.rootDir/navigation_testapp.keystore")
            storePassword System.getenv("CIRCLECI_ANDROID_KEYSTORE_PASSWORD")
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled = false
            manifestPlaceholders = [enableCrashReporting: "false"]
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            manifestPlaceholders = [enableCrashReporting: "true"]
        }
    }

    dexOptions {
        maxProcessCount 8
        javaMaxHeapSize "2g"
        preDexLibraries true
    }

    lintOptions {
        abortOnError false
    }

    play {
        serviceAccountCredentials = playConfigs.defaultAccountConfig.serviceAccountCredentials
        track = System.getenv("GOOGLE_PLAY_TRACK") ?: "internal"
    }
}

dependencies {
    // Mapbox Navigation SDK
    implementation project(':libnavigation-metrics')
    implementation project(':libdirections-offboard')
    implementation project(':libdirections-onboard')
    implementation project(':libdirections-hybrid')
    implementation project(':libtrip-notification')
    implementation project(':libnavigation-util')
    implementation project(':libnavigator')
    implementation project(':libnavigation-ui')
    implementation project(':libnavui-alert')
    implementation dependenciesList.mapboxCommon
    implementation dependenciesList.mapboxLogger
    implementation dependenciesList.mapboxAnnotationPlugin
    implementation dependenciesList.mapboxSdkTurf

    // test
    androidTestImplementation project(':libtesting-ui')
    androidTestImplementation dependenciesList.testRunner
    androidTestUtil dependenciesList.testOrchestrator

    //ktlint
    ktlint dependenciesList.ktlint

    // Kotlin support
    implementation dependenciesList.kotlinStdLib
    implementation dependenciesList.ankoCommon

    //Coroutines
    implementation dependenciesList.coroutinesAndroid

    // Support libraries
    implementation dependenciesList.androidXCore
    implementation dependenciesList.materialDesign
    implementation dependenciesList.androidXAppCompat
    implementation dependenciesList.androidXConstraintLayout

    implementation dependenciesList.gmsLocation

    implementation dependenciesList.multidex

    // Logging
    implementation dependenciesList.timber

    // Butter Knife
    implementation dependenciesList.butterKnife
    annotationProcessor dependenciesList.butterKnifeProcessor

    // Leak Canary
    debugImplementation dependenciesList.leakCanaryDebug
}

apply from: "${rootDir}/gradle/developer-config.gradle"
apply from: "${rootDir}/gradle/checkstyle.gradle"
apply from: "${rootDir}/gradle/dependency-updates.gradle"
