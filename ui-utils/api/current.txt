// Signature format: 3.0
package com.mapbox.navigation.ui.base.util.resource {

  public interface ResourceLoadCallback extends com.mapbox.navigation.ui.base.util.resource.ResourceLoadObserver {
  }

  public interface ResourceLoadObserver {
    method public void onFinish(com.mapbox.navigation.ui.utils.internal.resource.ResourceLoadRequest request, com.mapbox.bindgen.Expected<com.mapbox.common.ResourceLoadError,com.mapbox.common.ResourceLoadResult> result);
    method public void onProgress(com.mapbox.navigation.ui.utils.internal.resource.ResourceLoadRequest request, com.mapbox.common.ResourceLoadProgress progress);
    method public void onStart(com.mapbox.navigation.ui.utils.internal.resource.ResourceLoadRequest request);
  }

  public abstract class ResourceLoader {
    ctor public ResourceLoader();
    method public abstract void cancel(long requestId);
    method public abstract long load(com.mapbox.navigation.ui.utils.internal.resource.ResourceLoadRequest request, com.mapbox.navigation.ui.base.util.resource.ResourceLoadCallback callback);
    method public abstract long load(com.mapbox.common.TileStore tileStore, com.mapbox.navigation.ui.utils.internal.resource.ResourceLoadRequest request, com.mapbox.navigation.ui.base.util.resource.ResourceLoadCallback callback);
    method public abstract void registerObserver(com.mapbox.navigation.ui.base.util.resource.ResourceLoadObserver observer);
    method public abstract void unregisterObserver(com.mapbox.navigation.ui.base.util.resource.ResourceLoadObserver observer);
  }

}

