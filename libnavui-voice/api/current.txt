// Signature format: 3.0
package com.mapbox.navigation.ui.voice.api {

  public interface AudioFocusDelegate {
    method public void abandonFocus();
    method public boolean requestFocus();
  }

  public final class MapboxSpeechApi {
    ctor public MapboxSpeechApi(android.content.Context context, String accessToken, String language, com.mapbox.navigation.ui.voice.options.MapboxSpeechApiOptions options = MapboxSpeechApiOptions.<init>().build());
    ctor public MapboxSpeechApi(android.content.Context context, String accessToken, String language);
    method public void cancel();
    method public void clean(com.mapbox.navigation.ui.voice.model.SpeechAnnouncement announcement);
    method public void generate(com.mapbox.api.directions.v5.models.VoiceInstructions voiceInstruction, com.mapbox.navigation.ui.base.util.MapboxNavigationConsumer<com.mapbox.navigation.ui.base.model.Expected<com.mapbox.navigation.ui.voice.model.SpeechValue,com.mapbox.navigation.ui.voice.model.SpeechError>> consumer);
  }

  @UiThread public final class MapboxVoiceInstructionsPlayer {
    ctor public MapboxVoiceInstructionsPlayer(android.content.Context context, String accessToken, String language, com.mapbox.navigation.ui.voice.options.VoiceInstructionsPlayerOptions options = VoiceInstructionsPlayerOptions.<init>().build(), com.mapbox.navigation.ui.voice.api.AudioFocusDelegate audioFocusDelegate = buildAndroidAudioFocus(context, options));
    ctor public MapboxVoiceInstructionsPlayer(android.content.Context context, String accessToken, String language, com.mapbox.navigation.ui.voice.options.VoiceInstructionsPlayerOptions options = VoiceInstructionsPlayerOptions.<init>().build());
    ctor public MapboxVoiceInstructionsPlayer(android.content.Context context, String accessToken, String language);
    method public void clear();
    method public void play(com.mapbox.navigation.ui.voice.model.SpeechAnnouncement announcement, com.mapbox.navigation.ui.base.util.MapboxNavigationConsumer<com.mapbox.navigation.ui.voice.model.SpeechAnnouncement> consumer);
    method public void shutdown();
    method public void stream(int type);
    method public void volume(com.mapbox.navigation.ui.voice.model.SpeechVolume state);
  }

}

package com.mapbox.navigation.ui.voice.model {

  public final class SpeechAnnouncement {
    method public String getAnnouncement();
    method public java.io.File? getFile();
    method public String? getSsmlAnnouncement();
    method public com.mapbox.navigation.ui.voice.model.SpeechAnnouncement.Builder toBuilder();
    property public final String announcement;
    property public final java.io.File? file;
    property public final String? ssmlAnnouncement;
  }

  public static final class SpeechAnnouncement.Builder {
    ctor public SpeechAnnouncement.Builder(String announcement);
    method public com.mapbox.navigation.ui.voice.model.SpeechAnnouncement build();
    method public com.mapbox.navigation.ui.voice.model.SpeechAnnouncement.Builder file(java.io.File? file);
    method public com.mapbox.navigation.ui.voice.model.SpeechAnnouncement.Builder ssmlAnnouncement(String? ssmlAnnouncement);
  }

  public final class SpeechError {
    method public String getErrorMessage();
    method public com.mapbox.navigation.ui.voice.model.SpeechAnnouncement getFallback();
    method public Throwable? getThrowable();
    property public final String errorMessage;
    property public final com.mapbox.navigation.ui.voice.model.SpeechAnnouncement fallback;
    property public final Throwable? throwable;
  }

  public final class SpeechValue {
    method public com.mapbox.navigation.ui.voice.model.SpeechAnnouncement getAnnouncement();
    property public final com.mapbox.navigation.ui.voice.model.SpeechAnnouncement announcement;
  }

  public final class SpeechVolume {
    ctor public SpeechVolume(@FloatRange(from=com.mapbox.navigation.ui.voice.model.SpeechVolumeKt.MINIMUM_VOLUME_LEVEL, to=com.mapbox.navigation.ui.voice.model.SpeechVolumeKt.MAXIMUM_VOLUME_LEVEL) float level);
    method public float component1();
    method public com.mapbox.navigation.ui.voice.model.SpeechVolume copy(float level);
    method public float getLevel();
    property public final float level;
  }

  public final class SpeechVolumeKt {
  }

}

package com.mapbox.navigation.ui.voice.options {

  public final class MapboxSpeechApiOptions {
    method public String getBaseUri();
    method public com.mapbox.navigation.ui.voice.options.MapboxSpeechApiOptions.Builder toBuilder();
    property public final String baseUri;
  }

  public static final class MapboxSpeechApiOptions.Builder {
    ctor public MapboxSpeechApiOptions.Builder();
    method public com.mapbox.navigation.ui.voice.options.MapboxSpeechApiOptions.Builder baseUri(String baseUri);
    method public com.mapbox.navigation.ui.voice.options.MapboxSpeechApiOptions build();
  }

  public final class VoiceInstructionsPlayerOptions {
    method public int getFocusGain();
    method public com.mapbox.navigation.ui.voice.options.VoiceInstructionsPlayerOptions.Builder toBuilder();
    property public final int focusGain;
  }

  public static final class VoiceInstructionsPlayerOptions.Builder {
    ctor public VoiceInstructionsPlayerOptions.Builder();
    method public com.mapbox.navigation.ui.voice.options.VoiceInstructionsPlayerOptions build();
    method public com.mapbox.navigation.ui.voice.options.VoiceInstructionsPlayerOptions.Builder focusGain(int focusGain);
  }

}

package com.mapbox.navigation.ui.voice.view {

  public final class MapboxSoundButton extends androidx.constraintlayout.widget.ConstraintLayout {
    ctor public MapboxSoundButton(android.content.Context context);
    ctor public MapboxSoundButton(android.content.Context context, android.util.AttributeSet? attrs);
    ctor public MapboxSoundButton(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr);
    method public void mute(com.mapbox.navigation.ui.base.util.MapboxNavigationConsumer<java.lang.Boolean>? callback = null);
    method public void mute();
    method public void muteAndExtend(long duration, com.mapbox.navigation.ui.base.util.MapboxNavigationConsumer<java.lang.Boolean>? callback = null);
    method public void muteAndExtend(long duration);
    method public void unmute(com.mapbox.navigation.ui.base.util.MapboxNavigationConsumer<java.lang.Boolean>? callback = null);
    method public void unmute();
    method public void unmuteAndExtend(long duration, com.mapbox.navigation.ui.base.util.MapboxNavigationConsumer<java.lang.Boolean>? callback = null);
    method public void unmuteAndExtend(long duration);
    method public void updateStyle(@StyleRes int style);
    field public static final int EXTEND_TEXT_TO_WIDTH = 165; // 0xa5
    field public static final long SLIDE_DURATION = 300L; // 0x12cL
  }

}

