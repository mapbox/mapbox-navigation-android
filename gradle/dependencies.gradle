ext {
  def kotlinVersion = "1.7.20"

  androidVersions = [
      minSdkVersion           : 21,
      targetSdkVersion        : 36,
      compileSdkVersion       : 36,
      carMinSdkVersion        : 23
  ]

  def mapboxSdkVersionSuffix = '16.0-beta.1'

  def ndkVersionSuffix = ""
  if (project.hasProperty("ndkMajor")) {
    ndkVersionSuffix = "-ndk${project.property("ndkMajor")}"
    println("Building with NDK version suffix: " + ndkVersionSuffix)
  }

  // Navigation Native CI can run SDK CI downstream with forced Navigation Native version
  // in this case `FORCE_MAPBOX_NAVIGATION_NATIVE_VERSION` environment variable will contain
  // version which we should use in this build
  def mapboxNavigatorVersion = System.getenv("FORCE_MAPBOX_NAVIGATION_NATIVE_VERSION")
  if (mapboxNavigatorVersion == null || mapboxNavigatorVersion == '') {
      mapboxNavigatorVersion = "324.${mapboxSdkVersionSuffix}"
  }
  if (!project.hasProperty("hasPrintedNavigatorVersion")) {
    println("Navigation Native version: " + mapboxNavigatorVersion)
    project.ext.hasPrintedNavigatorVersion = true
  }

  version = [
      mapboxMapSdk              : "11.${mapboxSdkVersionSuffix}",
      mapboxSdkServices         : "7.8.0",
      mapboxNavigator           : "${mapboxNavigatorVersion}",
      mapboxCommonNative        : "24.${mapboxSdkVersionSuffix}",
      mapboxNavSdkCpp           : "0.${mapboxSdkVersionSuffix}",
      mapboxSearch              : "2.${mapboxSdkVersionSuffix}",
      mapboxBaseAndroid         : '0.11.0',
      androidXActivity          : '1.7.1',
      androidXActivityCompose   : '1.9.2',
      androidXLifecycle         : '2.4.0',
      androidXCoreVersion       : '1.6.0',
      androidXArchCoreVersion   : '2.1.0',
      androidXAppCompatVersion  : '1.3.1',
      androidXPreferenceVersion : '1.1.0',
      androidXAnnotationVersion : '1.2.0',
      androidXFragmentVersion   : '1.4.0',
      androidXDataStore         : '1.0.0',
      androidXWorkManager       : '2.7.1',
      androidXAsyncInflater     : '1.0.0',
      cardViewVersion           : '1.0.0',
      recyclerViewVersion       : '1.1.0',
      materialDesignVersion     : '1.1.0',
      compose                   : '1.4.2',
      composeCompiler           : '1.3.2',
      autoValue                 : '1.5.4',
      autoValueParcel           : '0.2.5',
      junit                     : '4.12',
      constraintLayout          : '1.1.3',
      mockito                   : '2.23.4',
      mockkVersion              : '1.12.1',
      leakCanaryVersion         : '2.9.1',
      commonsIO                 : '2.6',
      robolectric               : '4.15.1',
      mockwebserver             : '4.10.0',
      gmsLocation               : '17.0.0',
      ktlint                    : '0.47.1',
      kotlinStdLib              : kotlinVersion,
      firebaseCrashlytics       : '18.6.0',
      multidex                  : '2.0.1',
      json                      : '20180813',
      coroutinesAndroid         : '1.6.4',
      okhttp                    : '4.10.0',
      okio                      : '3.4.0',
      androidxTestJunit         : '1.1.5',
      androidxTest              : '1.5.2',
      androidxTestCore          : '1.5.0',
      androidxTestRules         : '1.5.0',
      androidxTestOrchestrator  : '1.4.2',
      barista                   : '4.2.0',
      svgParser                 : '1.4',
      androidStartup            : '1.0.0',
      viewBinding               : '7.2.1',
      glide                     : '4.13.2',
      kaspresso                 : '1.5.3',
      equalsVerifier            : '3.15.8',
      toStringVerifier          : '1.4.8',
      kotlinDateTime            : '0.4.1',
      kotlinSerialization       : '1.3.1',
      coilVersion               : '2.4.0',
      microsoftCognitiveSpeech  : '1.34.0',
      lottie                    : '6.0.0'
  ]
  dependenciesList = [
      // mapbox
      mapboxMapSdk              : "com.mapbox.maps:android$ndkVersionSuffix:${version.mapboxMapSdk}",
      mapboxMapsAndroidAuto     : "com.mapbox.extension:maps-androidauto$ndkVersionSuffix:${version.mapboxMapSdk}",
      mapboxSdkServices         : "com.mapbox.mapboxsdk:mapbox-sdk-services:${version.mapboxSdkServices}",
      mapboxSdkServicesCore     : "com.mapbox.mapboxsdk:mapbox-sdk-core:${version.mapboxSdkServices}",
      mapboxSdkGeoJSON          : "com.mapbox.mapboxsdk:mapbox-sdk-geojson:${version.mapboxSdkServices}",
      mapboxSdkTurf             : "com.mapbox.mapboxsdk:mapbox-sdk-turf:${version.mapboxSdkServices}",
      mapboxSdkDirectionsModels : "com.mapbox.mapboxsdk:mapbox-sdk-directions-models:${version.mapboxSdkServices}",
      mapboxSdkRefreshModels    : "com.mapbox.mapboxsdk:mapbox-sdk-directions-refresh-models:${version.mapboxSdkServices}",
      mapboxNavigator           : "com.mapbox.navigator:dash-native$ndkVersionSuffix:${version.mapboxNavigator}",
      mapboxCommonNative        : "com.mapbox.common:common$ndkVersionSuffix:${version.mapboxCommonNative}",
      mapboxSearch              : "com.mapbox.search:mapbox-search-android$ndkVersionSuffix:${version.mapboxSearch}",
      mapboxOfflineSearch       : "com.mapbox.search:offline$ndkVersionSuffix:${version.mapboxSearch}",
      mapboxNavSdkCpp           : "com.mapbox.navsdk:sdk$ndkVersionSuffix:${version.mapboxNavSdkCpp}",
      mapboxNavSdkFullHdCpp     : "com.mapbox.navsdk:navsdk-hd$ndkVersionSuffix:${version.mapboxNavSdkCpp}",
      mapboxNavSdkLocIndCpp     : "com.mapbox.maps:location-component$ndkVersionSuffix:${version.mapboxMapSdk}",
      mapboxMapGptExpAndroid   : "com.mapbox.mapgpt.experimental:mapgpt$ndkVersionSuffix:${version.mapboxCommonNative}",

      mapboxAnnotations         : "com.mapbox.base:annotations:${version.mapboxBaseAndroid}",
      mapboxAnnotationsProcessor: "com.mapbox.base:annotations-processor:${version.mapboxBaseAndroid}",
      mapboxAndroidCommon       : "com.mapbox.base:common:${version.mapboxBaseAndroid}",
      mapboxLogger              : "com.mapbox.common:logger:${version.mapboxBaseAndroid}",

      // Kotlin
      kotlinStdLib              : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${version.kotlinStdLib}",
      kotlinReflect             : "org.jetbrains.kotlin:kotlin-reflect:${version.kotlinStdLib}",

      // Coroutines and Channels
      coroutinesAndroid         : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${version.coroutinesAndroid}",
      coroutinesTestAndroid     : "org.jetbrains.kotlinx:kotlinx-coroutines-test:${version.coroutinesAndroid}",
      coroutinesCore            : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${version.coroutinesAndroid}",

      // code style
      ktlint                    : "com.pinterest:ktlint:${version.ktlint}",

      // network
      okhttp                    : "com.squareup.okhttp3:okhttp:${version.okhttp}",
      okhttpInterceptor         : "com.squareup.okhttp3:logging-interceptor:${version.okhttp}",

      // I/O
      okio                      : "com.squareup.okio:okio:${version.okio}",

      // AutoValue
      autoValue                 : "com.google.auto.value:auto-value:${version.autoValue}",
      autoValuesParcel          : "com.ryanharter.auto.value:auto-value-parcel:${version.autoValueParcel}",
      autoValuesParcelAdapter   : "com.ryanharter.auto.value:auto-value-parcel-adapter:${version.autoValueParcel}",

      // support
      androidXAnnotation        : "androidx.annotation:annotation:${version.androidXAnnotationVersion}",
      androidXAppCompat         : "androidx.appcompat:appcompat:${version.androidXAppCompatVersion}",
      androidXCore              : "androidx.core:core:${version.androidXCoreVersion}",
      androidXCoreKtx           : "androidx.core:core-ktx:${version.androidXCoreVersion}",
      materialDesign            : "com.google.android.material:material:${version.materialDesignVersion}",
      androidXRecyclerView      : "androidx.recyclerview:recyclerview:${version.recyclerViewVersion}",
      androidXCardView          : "androidx.cardview:cardview:${version.cardViewVersion}",
      androidXConstraintLayout  : "androidx.constraintlayout:constraintlayout:${version.constraintLayout}",
      androidXPreference        : "androidx.preference:preference-ktx:${version.androidXPreferenceVersion}",
      androidStartup            : "androidx.startup:startup-runtime:${version.androidStartup}",
      androidXFragment          : "androidx.fragment:fragment-ktx:${version.androidXFragmentVersion}",
      androidXArchCoreTesting   : "androidx.arch.core:core-testing:${version.androidXArchCoreVersion}",
      androidXDataStore         : "androidx.datastore:datastore-preferences:${version.androidXDataStore}",
      androidXWorkManager       : "androidx.work:work-runtime-ktx:${version.androidXWorkManager}",
      androidXAsyncInflater     : "androidx.asynclayoutinflater:asynclayoutinflater:${version.androidXAsyncInflater}",
      androidXActivity          : "androidx.activity:activity-ktx:${version.androidXActivity}",
      androidXActivityCompose   : "androidx.activity:activity-compose:${version.androidXActivityCompose}",

      // compose
     composeUi                  : "androidx.compose.ui:ui:${version.compose}",
     composeUiTooling           : "androidx.compose.ui:ui-tooling:${version.compose}",
     composeUiToolingPreview    : "androidx.compose.ui:ui-tooling-preview:${version.compose}",
     composeFoundation          : "androidx.compose.foundation:foundation:${version.compose}",
     composeMaterial            : "androidx.compose.material:material:${version.compose}",
     coilCompose                : "io.coil-kt:coil-compose:${version.coilVersion}",

      // lifecycle
      androidXLifecycleRuntime  : "androidx.lifecycle:lifecycle-runtime-ktx:${version.androidXLifecycle}",
      androidXLifecycleLivedata : "androidx.lifecycle:lifecycle-livedata-ktx:${version.androidXLifecycle}",
      androidXLifecycleViewmodel: "androidx.lifecycle:lifecycle-viewmodel-ktx:${version.androidXLifecycle}",
      androidXLifecycleTesting  : "androidx.lifecycle:lifecycle-runtime-testing:${version.androidXLifecycle}",

      // square crew
      leakCanaryDebug           : "com.squareup.leakcanary:leakcanary-android:${version.leakCanaryVersion}",

      // instrumentation test
      testRunner                : "androidx.test:runner:${version.androidxTest}",
      testOrchestrator          : "androidx.test:orchestrator:${version.androidxTestOrchestrator}",
      testRules                 : "androidx.test:rules:${version.androidxTestRules}",
      androidxTestJunit         : "androidx.test.ext:junit:${version.androidxTestJunit}",
      barista                   : "com.adevinta.android:barista:${version.barista}",

      // screenshot tests
      kaspresso                 : "com.kaspersky.android-components:kaspresso:${version.kaspresso}",

      // unit test
      junit                     : "junit:junit:${version.junit}",
      mockito                   : "org.mockito:mockito-core:${version.mockito}",
      mockk                     : "io.mockk:mockk:${version.mockkVersion}",
      mockkAndroid              : "io.mockk:mockk-android:${version.mockkVersion}",
      commonsIO                 : "commons-io:commons-io:${version.commonsIO}",
      robolectric               : "org.robolectric:robolectric:${version.robolectric}",
      mockwebserver             : "com.squareup.okhttp3:mockwebserver:${version.mockwebserver}",
      json                      : "org.json:json:${version.json}",
      androidxTestCore          : "androidx.test:core:${version.androidxTestCore}",
      equalsVerifier            : "nl.jqno.equalsverifier:equalsverifier:${version.equalsVerifier}",
      toStringVerifier          : "com.jparams:to-string-verifier:${version.toStringVerifier}",

      // play services
      gmsLocation               : "com.google.android.gms:play-services-location:${version.gmsLocation}",

      multidex                  : "androidx.multidex:multidex:${version.multidex}",

      svgParser                 : "com.caverock:androidsvg-aar:${version.svgParser}",

      glide                     : "com.github.bumptech.glide:glide:${version.glide}",

      viewBinding               : "androidx.databinding:viewbinding:${version.viewBinding}",

      // Test app crashlytics
      firebaseCrashlyticsNdk    : "com.google.firebase:firebase-crashlytics-ndk:${version.firebaseCrashlytics}",

      kotlinXDateTime           : "org.jetbrains.kotlinx:kotlinx-datetime:${version.kotlinDateTime}",
      kotlinSerialization       : "org.jetbrains.kotlinx:kotlinx-serialization-json:${version.kotlinSerialization}",

      microsoftCognitiveSpeech  : "com.microsoft.cognitiveservices.speech:client-sdk:${version.microsoftCognitiveSpeech}",
      lottie                    : "com.airbnb.android:lottie-compose:${version.lottie}"
  ]

  pluginVersion = [
      checkstyle           : '8.2',
      pmd                  : '5.8.1',
      gradle               : '8.10.1',
      dependencyGraph      : '0.8.0',
      dependencyUpdates    : '0.29.0',
      kotlin               : kotlinVersion,
      serialization        : '0.29.0',
      license              : '0.8.80',
      // Used by license. Add this dependency explicitly,
      // because the version used by license has been removed from the repository.
      // This dependency may be removed when we bump license version.
      kotlinHtmlJvm        : '0.7.3',
      jacoco               : '0.8.12',
      kover                : '0.9.1',
      googleServices       : '4.4.2',
      mapboxSdkVersions    : '1.1.5',
      dokka                : '1.9.20',
      mapboxSdkRegistry    : '1.4.1',
      mapboxAccessToken    : '0.2.1',
      mapboxNativeDownload : '0.2.2',
      firebaseCrashlytics  : '3.0.3'
  ]

  pluginDependencies = [
      gradle               : "com.android.tools.build:gradle:${pluginVersion.gradle}",
      kotlin               : "org.jetbrains.kotlin:kotlin-gradle-plugin:${pluginVersion.kotlin}",
      checkstyle           : "com.puppycrawl.tools:checkstyle:${pluginVersion.checkstyle}",
      license              : "com.jaredsburrows:gradle-license-plugin:${pluginVersion.license}",
      // Used by license. Add this dependency explicitly,
      // because the version used by license has been removed from the repository.
      // This dependency may be removed when we bump license version.
      kotlinHtmlJvm        : "org.jetbrains.kotlinx:kotlinx-html-jvm:${pluginVersion.kotlinHtmlJvm}",
      dependencyGraph      : "com.vanniktech:gradle-dependency-graph-generator-plugin:${pluginVersion.dependencyGraph}",
      dependencyUpdates    : "com.github.ben-manes:gradle-versions-plugin:${pluginVersion.dependencyUpdates}",
      jacoco               : "org.jacoco:org.jacoco.core:${pluginVersion.jacoco}",
      kover                : "org.jetbrains.kotlinx:kover-gradle-plugin:${pluginVersion.kover}",
      googleServices       : "com.google.gms:google-services:${pluginVersion.googleServices}",
      mapboxSdkVersions    : "com.mapbox.mapboxsdk:mapbox-android-sdk-versions:${pluginVersion.mapboxSdkVersions}",
      dokka                : "org.jetbrains.dokka:dokka-gradle-plugin:${pluginVersion.dokka}",
      mapboxSdkRegistry    : "com.mapbox.gradle.plugins:sdk-registry:${pluginVersion.mapboxSdkRegistry}",
      mapboxAccessToken    : "com.mapbox.gradle.plugins:access-token:${pluginVersion.mapboxAccessToken}",
      mapboxNativeDownload : "com.mapbox.gradle.plugins:native-download:${pluginVersion.mapboxNativeDownload}",
      firebaseCrashlytics  : "com.google.firebase:firebase-crashlytics-gradle:${pluginVersion.firebaseCrashlytics}"
  ]
}
