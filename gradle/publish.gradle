apply plugin: 'maven-publish'
apply plugin: 'com.mapbox.sdkRegistry'
apply from: file("${rootDir}/gradle/artifact-settings.gradle")
apply from: "${rootDir}/gradle/kdoc-settings.gradle"

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId project.ext.mapboxArtifactGroupId
                artifactId project.ext.mapboxArtifactId
                version project.ext.versionName

                artifact(androidSourcesJar)
                artifact(androidKdocJar)

                pom.withXml {
                    final mainNode = asNode()
                    mainNode.appendNode('name', project.ext.mapboxArtifactTitle)
                    mainNode.appendNode('description', project.ext.mapboxArtifactDescription)
                    mainNode.appendNode('url', project.ext.mapboxArtifactUrl)

                    final licenseNode = mainNode.appendNode('licenses').appendNode('license')
                    licenseNode.appendNode('name', project.ext.mapboxArtifactLicenseName)
                    licenseNode.appendNode('url', project.ext.mapboxArtifactLicenseUrl)
                    licenseNode.appendNode('distribution', "repo")

                    final developerNode = mainNode.appendNode('developers').appendNode('developer')
                    developerNode.appendNode('id', project.ext.mapboxDeveloperId)
                    developerNode.appendNode('name', project.ext.mapboxDeveloperName)

                    final scmNode = mainNode.appendNode("scm")
                    scmNode.appendNode("connection", project.ext.mapboxArtifactScmUrl)
                    scmNode.appendNode("developerConnection", project.ext.mapboxArtifactScmUrl)
                    scmNode.appendNode("url", project.ext.mapboxArtifactUrl)
                }
            }
            debug(MavenPublication) {
                from components.debug
                groupId project.ext.mapboxArtifactGroupId
                artifactId project.ext.mapboxArtifactId
                version project.ext.versionName

                artifact(androidSourcesJar)
                artifact(androidKdocJar)
            }
        }
    }
}

def sdkNameMap = [:]
sdkNameMap["libnavigation-base"] = "mobile-navigation-base"
sdkNameMap["libnavigation-core"] = "mobile-navigation-core"
sdkNameMap["libnavigation-metrics"] = "mobile-navigation-metrics"
sdkNameMap["libnavigator"] = "mobile-navigation-navigator"
sdkNameMap["libtrip-notification"] = "mobile-navigation-notification"
sdkNameMap["libnavigation-router"] = "mobile-navigation-router"
sdkNameMap["libnavigation-util"] = "mobile-navigation-utils"
sdkNameMap["libnavui-base"] = "mobile-navigation-ui-base"
sdkNameMap["libnavui-maps"] = "mobile-navigation-ui-maps"
sdkNameMap["libnavui-util"] = "mobile-navigation-ui-utils"
sdkNameMap["libnavui-tripprogress"] = "mobile-navigation-ui-tripprogress"
sdkNameMap["libnavui-maneuver"] = "mobile-navigation-ui-maneuver"
sdkNameMap["libnavui-resources"] = "mobile-navigation-ui-resources"

registry {
    sdkName = sdkNameMap[project.name]
    production = true
    snapshot = project.ext.versionName.endsWith("-SNAPSHOT")
    override = snapshot ? true : false
    dryRun = false
    publish = true
    publications = ["release"]
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.kotlin
}

task androidKdocJar(type: Jar) {
    classifier = 'javadoc'
    from kdocPath
}
