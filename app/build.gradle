apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.triplet.play'
apply from: "${rootDir}/gradle/script-git-version.gradle"
apply from: "${rootDir}/gradle/ktlint.gradle"

android {
  compileSdkVersion androidVersions.compileSdkVersion
  buildToolsVersion androidVersions.buildToolsVersion

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  playConfigs {
    defaultAccountConfig {
      serviceAccountCredentials = file("$project.rootDir/android-gl-native-15d95ab30d0f.json")
    }
  }

  def getGitHash = { ->
    try {
      def stdout = new ByteArrayOutputStream()
      exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
      }
      return stdout.toString().trim()
    } catch (Exception exception) {
      return ""
    }
  }

  defaultConfig {
    applicationId "com.mapbox.services.android.navigation.app"
    minSdkVersion androidVersions.minSdkVersion
    targetSdkVersion androidVersions.targetSdkVersion
    multiDexEnabled true
    versionCode gitVersionCode
    versionName gitVersionName
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
    buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""
  }

  signingConfigs {
    release {
      keyAlias System.getenv("CIRCLECI_ANDROID_KEYSTORE_ALIAS")
      keyPassword System.getenv("CIRCLECI_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
      storeFile file("$project.rootDir/navigation_testapp.keystore")
      storePassword System.getenv("CIRCLECI_ANDROID_KEYSTORE_PASSWORD")
    }
  }

  buildTypes {
    debug {
      testCoverageEnabled = false
      manifestPlaceholders = [enableCrashReporting:"false"]
    }
    release {
      minifyEnabled true
      signingConfig signingConfigs.release
      manifestPlaceholders = [enableCrashReporting:"true"]
    }
  }

  dexOptions {
    maxProcessCount 8
    javaMaxHeapSize "2g"
    preDexLibraries true
  }

  lintOptions {
    abortOnError false
  }

  play {
    serviceAccountCredentials = playConfigs.defaultAccountConfig.serviceAccountCredentials
    track = System.getenv("GOOGLE_PLAY_TRACK") ?: "internal"
  }
}

dependencies {
  //ktlint
  ktlint dependenciesList.ktlint

  // Kotlin support
  implementation dependenciesList.kotlinStdLib
  implementation dependenciesList.ankoCommon

  // Mapbox Navigation SDK
  implementation project(':libnavigation-ui')
  implementation dependenciesList.mapboxMapSdk
  implementation dependenciesList.mapboxSearchSdk
  implementation dependenciesList.mapboxCrashMonitor

  // Support libraries
  implementation dependenciesList.supportAppcompatV7
  implementation dependenciesList.supportDesign
  implementation dependenciesList.supportRecyclerView
  implementation dependenciesList.supportConstraintLayout
  implementation dependenciesList.supportCardView
  implementation dependenciesList.lifecycleExtensions

  implementation dependenciesList.gmsLocation

  implementation dependenciesList.firebaseCore
  implementation dependenciesList.crashlytics

  implementation dependenciesList.multidex

  // Logging
  implementation dependenciesList.timber

  // Butter Knife
  implementation dependenciesList.butterKnife
  annotationProcessor dependenciesList.butterKnifeProcessor

  // Leak Canary
  debugImplementation dependenciesList.leakCanaryDebug
  releaseImplementation dependenciesList.leakCanaryRelease
  androidTestImplementation dependenciesList.leakCanaryTest

  // Unit Testing
  testImplementation dependenciesList.junit
  testImplementation dependenciesList.mockito
  testImplementation dependenciesList.mockk

  // Instrumentation testing
  androidTestImplementation dependenciesList.testRules
  androidTestImplementation(dependenciesList.testEspressoCore, {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  androidTestImplementation dependenciesList.testEspressoContrib
}

apply from: "${rootDir}/gradle/developer-config.gradle"
apply from: "${rootDir}/gradle/checkstyle.gradle"
apply from: "${rootDir}/gradle/dependency-updates.gradle"
