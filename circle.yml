version: 2

workflows:
  version: 2
  default:
    jobs:
      - build
      - release
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: mbgl/feb0443038:android-ndk-r17
    environment:
      JVM_OPTS: -Xmx3200m
      BUILDTYPE: Debug
      IS_LOCAL_DEVELOPMENT: false
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Check Java code style
          command: make checkstyle
      - run:
          name: Run unit-test and generate Jacoco test report
          command: ./gradlew createDebugUnitTestCoverageReport
#      - run:
#          name: Sonarcloud upload
#          command: make sonarqube
      - run:
          name: Build testapp APK
          command: |
            ./gradlew accessToken
            ./gradlew app:assembleDebug
      - run:
          name: Build release to test ProGuard rules
          command: ./gradlew app:assembleRelease
      - run:
          name: Log in to Google Cloud Platform
          shell: /bin/bash -euo pipefail
          command: |
            echo "${GCLOUD_SERVICE_ACCOUNT_JSON}" > secret.json
            gcloud auth activate-service-account --key-file secret.json --project mapbox-navigation-android
            rm secret.json
      - run:
          name: Run instrumentation tests on Firebase
          no_output_timeout: 1200
          shell: /bin/bash -euo pipefail
          command: |
            gcloud firebase test android run --type robo --app app/build/outputs/apk/debug/app-debug.apk --device-ids shamu --os-version-ids 22 --locales en --orientations portrait --timeout 5m
      - run:
          name: Update Transifex
          command: |
            if [ "${CIRCLE_BRANCH}" == "${DEPLOY_BRANCH}" ]; then
              pip install transifex-client
              echo $'[https://www.transifex.com]\nhostname = https://www.transifex.com\nusername = '"${TRANSIFEX_USER}"$'\npassword = '"${TRANSIFEX_API_TOKEN}"$'\ntoken = '""$'\n' > ~/.transifexrc
              tx push -s
            else
              echo "Skipping push to Transifex"
            fi
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

# ------------------------------------------------------------------------------
  release:
    branch:
      only:
      - master
    docker:
      - image: mbgl/feb0443038:android-ndk-r17
    working_directory: ~/code
    environment:
      BUILDTYPE: Release
      IS_LOCAL_DEVELOPMENT: false
    steps:
      - checkout
      - run:
          name: Generate Maven credentials
          shell: /bin/bash -euo pipefail
          command: |
            aws s3 cp s3://mapbox/android/signing-credentials/secring.gpg secring.gpg
            echo "NEXUS_USERNAME=$PUBLISH_NEXUS_USERNAME
            NEXUS_PASSWORD=$PUBLISH_NEXUS_PASSWORD
            signing.keyId=$SIGNING_KEYID
            signing.password=$SIGNING_PASSWORD
            signing.secretKeyRingFile=../secring.gpg" >> gradle.properties
      - run:
          name: Build Navigation SDK
          command: make build-release
      - deploy:
          name: Publish Navigation SDK To Maven Central
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
            make publish ;
            fi
      - store_artifacts:
          path: app/build/reports
          destination: reports