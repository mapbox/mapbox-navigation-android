package com.mapbox.services.android.navigation.ui.v5.instruction.turnlane;

import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.RectF;

import java.util.Stack;


/**
 * Created on Nov 6, 2017.
 * Copyright Â© 2017 Mapbox. All rights reserved.
 * <p>
 * Generated by PaintCode
 * http://www.paintcodeapp.com
 */
public class TurnLaneStyleKit {

  // Canvas Drawings
  // Tab

  private static class CacheForLaneStraightRight {
    private static Paint paint = new Paint();
    private static RectF rectangleRect = new RectF();
    private static Path rectanglePath = new Path();
    private static RectF bezierRect = new RectF();
    private static Path bezierPath = new Path();
    private static RectF bezier2Rect = new RectF();
    private static Path bezier2Path = new Path();
    private static RectF bezier3Rect = new RectF();
    private static Path bezier3Path = new Path();
  }


  public static void drawLaneStraightRight(Canvas canvas, int primaryColor) {
    // General Declarations
    Paint paint = CacheForLaneStraightRight.paint;

    // Rectangle
    RectF rectangleRect = CacheForLaneStraightRight.rectangleRect;
    rectangleRect.set(9f, 11.5f, 13f, 27f);
    Path rectanglePath = CacheForLaneStraightRight.rectanglePath;
    rectanglePath.reset();
    rectanglePath.moveTo(rectangleRect.left, rectangleRect.top);
    rectanglePath.lineTo(rectangleRect.right, rectangleRect.top);
    rectanglePath.lineTo(rectangleRect.right, rectangleRect.bottom);
    rectanglePath.lineTo(rectangleRect.left, rectangleRect.bottom);
    rectanglePath.close();

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(primaryColor);
    canvas.drawPath(rectanglePath, paint);

    // Bezier
    RectF bezierRect = CacheForLaneStraightRight.bezierRect;
    bezierRect.set(5f, 2f, 17.02f, 11.99f);
    Path bezierPath = CacheForLaneStraightRight.bezierPath;
    bezierPath.reset();
    bezierPath.moveTo(11.02f, 2f);
    bezierPath.cubicTo(11.06f, 2.06f, 16.74f, 9.97f, 16.86f, 10.13f);
    bezierPath.cubicTo(16.96f, 10.23f, 17.02f, 10.37f, 17.02f, 10.52f);
    bezierPath.cubicTo(17.02f, 10.8f, 16.79f, 11.03f, 16.5f, 11.03f);
    bezierPath.cubicTo(16.44f, 11.03f, 16.37f, 11.02f, 16.31f, 10.99f);
    bezierPath.cubicTo(16.2f, 10.95f, 13.69f, 10.04f, 13.59f, 10f);
    bezierPath.cubicTo(13.2f, 10f, 13.01f, 10.23f, 13.01f, 10.52f);
    bezierPath.cubicTo(13.01f, 10.59f, 13f, 10.66f, 13f, 10.72f);
    bezierPath.cubicTo(13f, 10.8f, 13.01f, 11.99f, 13.01f, 11.99f);
    bezierPath.lineTo(9.01f, 11.92f);
    bezierPath.cubicTo(9.01f, 11.92f, 9.02f, 10.75f, 9.02f, 10.66f);
    bezierPath.cubicTo(9.01f, 10.6f, 9.01f, 10.53f, 9.01f, 10.46f);
    bezierPath.cubicTo(9.01f, 10.17f, 8.82f, 9.94f, 8.53f, 9.94f);
    bezierPath.cubicTo(8.32f, 9.98f, 5.82f, 10.89f, 5.71f, 10.93f);
    bezierPath.cubicTo(5.65f, 10.96f, 5.58f, 10.97f, 5.52f, 10.97f);
    bezierPath.cubicTo(5.23f, 10.97f, 5f, 10.74f, 5f, 10.46f);
    bezierPath.cubicTo(5f, 10.3f, 5.06f, 10.17f, 5.16f, 10.08f);
    bezierPath.cubicTo(5.28f, 9.9f, 10.97f, 2.06f, 11.01f, 2f);
    bezierPath.lineTo(11.02f, 2f);
    bezierPath.close();

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(primaryColor);
    canvas.drawPath(bezierPath, paint);

    // Bezier 2
    RectF bezier2Rect = CacheForLaneStraightRight.bezier2Rect;
    bezier2Rect.set(17.99f, 10.58f, 26.97f, 22.6f);
    Path bezier2Path = CacheForLaneStraightRight.bezier2Path;
    bezier2Path.reset();
    bezier2Path.moveTo(18.05f, 14.59f);
    bezier2Path.lineTo(19.31f, 14.59f);
    bezier2Path.lineTo(19.31f, 14.59f);
    bezier2Path.cubicTo(19.37f, 14.59f, 19.44f, 14.59f, 19.51f, 14.59f);
    bezier2Path.cubicTo(19.8f, 14.59f, 20.03f, 14.4f, 20.03f, 14.1f);
    bezier2Path.cubicTo(20.03f, 14.07f, 20.03f, 14.04f, 20.03f, 14.01f);
    bezier2Path.lineTo(20.03f, 14.01f);
    bezier2Path.lineTo(19.04f, 11.28f);
    bezier2Path.lineTo(19.04f, 11.29f);
    bezier2Path.cubicTo(19.02f, 11.23f, 19f, 11.16f, 19f, 11.09f);
    bezier2Path.cubicTo(19f, 10.81f, 19.23f, 10.58f, 19.52f, 10.58f);
    bezier2Path.cubicTo(19.67f, 10.58f, 19.8f, 10.64f, 19.9f, 10.74f);
    bezier2Path.lineTo(19.9f, 10.74f);
    bezier2Path.lineTo(26.97f, 16.59f);
    bezier2Path.lineTo(19.83f, 22.44f);
    bezier2Path.lineTo(19.84f, 22.43f);
    bezier2Path.cubicTo(19.74f, 22.53f, 19.6f, 22.6f, 19.46f, 22.6f);
    bezier2Path.cubicTo(19.17f, 22.6f, 18.94f, 22.37f, 18.94f, 22.08f);
    bezier2Path.cubicTo(18.94f, 22.01f, 18.95f, 21.95f, 18.98f, 21.89f);
    bezier2Path.lineTo(18.98f, 21.89f);
    bezier2Path.lineTo(19.97f, 19.16f);
    bezier2Path.lineTo(19.97f, 19.16f);
    bezier2Path.cubicTo(19.97f, 19.14f, 19.97f, 19.1f, 19.97f, 19.07f);
    bezier2Path.cubicTo(19.97f, 18.78f, 19.74f, 18.59f, 19.45f, 18.59f);
    bezier2Path.cubicTo(19.38f, 18.59f, 19.31f, 18.58f, 19.25f, 18.58f);
    bezier2Path.lineTo(19.25f, 18.58f);
    bezier2Path.lineTo(17.99f, 18.59f);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    bezier2Path.setFillType(Path.FillType.EVEN_ODD);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(primaryColor);
    canvas.drawPath(bezier2Path, paint);

    // Bezier 3
    RectF bezier3Rect = CacheForLaneStraightRight.bezier3Rect;
    bezier3Rect.set(11.03f, 16.61f, 20.03f, 27f);
    Path bezier3Path = CacheForLaneStraightRight.bezier3Path;
    bezier3Path.reset();
    bezier3Path.moveTo(11.03f, 27f);
    bezier3Path.lineTo(11.03f, 22.87f);
    bezier3Path.cubicTo(11.03f, 21.23f, 11.73f, 19.65f, 13f, 18.61f);
    bezier3Path.cubicTo(14.23f, 17.61f, 15.93f, 16.61f, 17.84f, 16.61f);
    bezier3Path.lineTo(20.03f, 16.61f);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStrokeWidth(4f);
    paint.setStrokeMiter(10f);
    canvas.save();
    paint.setStyle(Paint.Style.STROKE);
    paint.setColor(primaryColor);
    canvas.drawPath(bezier3Path, paint);
    canvas.restore();
  }

  private static class CacheForLaneStraightOnly {
    private static Paint paint = new Paint();
    private static RectF bezier2Rect = new RectF();
    private static Path bezier2Path = new Path();
    private static RectF bezier3Rect = new RectF();
    private static Path bezier3Path = new Path();
    private static RectF rectangleRect = new RectF();
    private static Path rectanglePath = new Path();
    private static RectF bezierRect = new RectF();
    private static Path bezierPath = new Path();
  }


  public static void drawLaneStraightOnly(Canvas canvas, int primaryColor, int secondaryColor) {
    // General Declarations
    Paint paint = CacheForLaneStraightOnly.paint;

    // Bezier 2
    RectF bezier2Rect = CacheForLaneStraightOnly.bezier2Rect;
    bezier2Rect.set(17.99f, 10.58f, 26.97f, 22.6f);
    Path bezier2Path = CacheForLaneStraightOnly.bezier2Path;
    bezier2Path.reset();
    bezier2Path.moveTo(18.05f, 14.59f);
    bezier2Path.lineTo(19.31f, 14.59f);
    bezier2Path.lineTo(19.31f, 14.59f);
    bezier2Path.cubicTo(19.37f, 14.59f, 19.44f, 14.59f, 19.51f, 14.59f);
    bezier2Path.cubicTo(19.8f, 14.59f, 20.03f, 14.4f, 20.03f, 14.1f);
    bezier2Path.cubicTo(20.03f, 14.07f, 20.03f, 14.04f, 20.03f, 14.01f);
    bezier2Path.lineTo(20.03f, 14.01f);
    bezier2Path.lineTo(19.04f, 11.28f);
    bezier2Path.lineTo(19.04f, 11.29f);
    bezier2Path.cubicTo(19.02f, 11.23f, 19f, 11.16f, 19f, 11.09f);
    bezier2Path.cubicTo(19f, 10.81f, 19.23f, 10.58f, 19.52f, 10.58f);
    bezier2Path.cubicTo(19.67f, 10.58f, 19.8f, 10.64f, 19.9f, 10.74f);
    bezier2Path.lineTo(19.9f, 10.74f);
    bezier2Path.lineTo(26.97f, 16.59f);
    bezier2Path.lineTo(19.83f, 22.44f);
    bezier2Path.lineTo(19.84f, 22.43f);
    bezier2Path.cubicTo(19.74f, 22.53f, 19.6f, 22.6f, 19.46f, 22.6f);
    bezier2Path.cubicTo(19.17f, 22.6f, 18.94f, 22.37f, 18.94f, 22.08f);
    bezier2Path.cubicTo(18.94f, 22.01f, 18.95f, 21.95f, 18.98f, 21.89f);
    bezier2Path.lineTo(18.98f, 21.89f);
    bezier2Path.lineTo(19.97f, 19.16f);
    bezier2Path.lineTo(19.97f, 19.16f);
    bezier2Path.cubicTo(19.97f, 19.14f, 19.97f, 19.1f, 19.97f, 19.07f);
    bezier2Path.cubicTo(19.97f, 18.78f, 19.74f, 18.59f, 19.45f, 18.59f);
    bezier2Path.cubicTo(19.38f, 18.59f, 19.31f, 18.58f, 19.25f, 18.58f);
    bezier2Path.lineTo(19.25f, 18.58f);
    bezier2Path.lineTo(17.99f, 18.59f);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    bezier2Path.setFillType(Path.FillType.EVEN_ODD);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(secondaryColor);
    canvas.drawPath(bezier2Path, paint);

    // Bezier 3
    RectF bezier3Rect = CacheForLaneStraightOnly.bezier3Rect;
    bezier3Rect.set(11.03f, 16.61f, 20.03f, 27f);
    Path bezier3Path = CacheForLaneStraightOnly.bezier3Path;
    bezier3Path.reset();
    bezier3Path.moveTo(11.03f, 27f);
    bezier3Path.lineTo(11.03f, 22.87f);
    bezier3Path.cubicTo(11.03f, 21.23f, 11.73f, 19.65f, 13f, 18.61f);
    bezier3Path.cubicTo(14.23f, 17.61f, 15.93f, 16.61f, 17.84f, 16.61f);
    bezier3Path.lineTo(20.03f, 16.61f);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStrokeWidth(4f);
    paint.setStrokeMiter(10f);
    canvas.save();
    paint.setStyle(Paint.Style.STROKE);
    paint.setColor(secondaryColor);
    canvas.drawPath(bezier3Path, paint);
    canvas.restore();

    // Rectangle
    RectF rectangleRect = CacheForLaneStraightOnly.rectangleRect;
    rectangleRect.set(9f, 11f, 13f, 27f);
    Path rectanglePath = CacheForLaneStraightOnly.rectanglePath;
    rectanglePath.reset();
    rectanglePath.addRect(rectangleRect, Path.Direction.CW);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(primaryColor);
    canvas.drawPath(rectanglePath, paint);

    // Bezier
    RectF bezierRect = CacheForLaneStraightOnly.bezierRect;
    bezierRect.set(5f, 2f, 17.02f, 11.99f);
    Path bezierPath = CacheForLaneStraightOnly.bezierPath;
    bezierPath.reset();
    bezierPath.moveTo(11.02f, 2f);
    bezierPath.cubicTo(11.06f, 2.06f, 16.74f, 9.97f, 16.86f, 10.13f);
    bezierPath.cubicTo(16.96f, 10.23f, 17.02f, 10.37f, 17.02f, 10.52f);
    bezierPath.cubicTo(17.02f, 10.8f, 16.79f, 11.03f, 16.5f, 11.03f);
    bezierPath.cubicTo(16.44f, 11.03f, 16.37f, 11.02f, 16.31f, 10.99f);
    bezierPath.cubicTo(16.2f, 10.95f, 13.69f, 10.04f, 13.59f, 10f);
    bezierPath.cubicTo(13.2f, 10f, 13.01f, 10.23f, 13.01f, 10.52f);
    bezierPath.cubicTo(13.01f, 10.59f, 13f, 10.66f, 13f, 10.72f);
    bezierPath.cubicTo(13f, 10.8f, 13.01f, 11.99f, 13.01f, 11.99f);
    bezierPath.lineTo(9.01f, 11.92f);
    bezierPath.cubicTo(9.01f, 11.92f, 9.02f, 10.75f, 9.02f, 10.66f);
    bezierPath.cubicTo(9.01f, 10.6f, 9.01f, 10.53f, 9.01f, 10.46f);
    bezierPath.cubicTo(9.01f, 10.17f, 8.82f, 9.94f, 8.53f, 9.94f);
    bezierPath.cubicTo(8.32f, 9.98f, 5.82f, 10.89f, 5.71f, 10.93f);
    bezierPath.cubicTo(5.65f, 10.96f, 5.58f, 10.97f, 5.52f, 10.97f);
    bezierPath.cubicTo(5.23f, 10.97f, 5f, 10.74f, 5f, 10.46f);
    bezierPath.cubicTo(5f, 10.3f, 5.06f, 10.17f, 5.16f, 10.08f);
    bezierPath.cubicTo(5.28f, 9.9f, 10.97f, 2.06f, 11.01f, 2f);
    bezierPath.lineTo(11.02f, 2f);
    bezierPath.close();

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(primaryColor);
    canvas.drawPath(bezierPath, paint);
  }

  private static class CacheForLaneRight {
    private static Paint paint = new Paint();
    private static RectF bezierRect = new RectF();
    private static Path bezierPath = new Path();
    private static RectF bezier2Rect = new RectF();
    private static Path bezier2Path = new Path();
  }


  public static void drawLaneRight(Canvas canvas, int primaryColor) {
    // General Declarations
    Paint paint = CacheForLaneRight.paint;

    // Bezier
    RectF bezierRect = CacheForLaneRight.bezierRect;
    bezierRect.set(14.87f, 4f, 23.85f, 16.02f);
    Path bezierPath = CacheForLaneRight.bezierPath;
    bezierPath.reset();
    bezierPath.moveTo(16.46f, 4f);
    bezierPath.cubicTo(16.55f, 4f, 16.68f, 4.06f, 16.77f, 4.16f);
    bezierPath.cubicTo(16.93f, 4.29f, 23.85f, 10.02f, 23.85f, 10.02f);
    bezierPath.cubicTo(23.85f, 10.02f, 16.87f, 15.73f, 16.72f, 15.86f);
    bezierPath.cubicTo(16.62f, 15.96f, 16.48f, 16.02f, 16.34f, 16.02f);
    bezierPath.cubicTo(16.05f, 16.02f, 15.82f, 15.79f, 15.82f, 15.5f);
    bezierPath.cubicTo(15.82f, 15.44f, 15.83f, 15.37f, 15.86f, 15.31f);
    bezierPath.cubicTo(15.9f, 15.2f, 16.81f, 12.7f, 16.85f, 12.59f);
    bezierPath.cubicTo(16.85f, 12.2f, 16.62f, 12.01f, 16.33f, 12.01f);
    bezierPath.cubicTo(16.26f, 12.01f, 16.19f, 12.01f, 16.13f, 12.01f);
    bezierPath.cubicTo(16.05f, 12f, 14.87f, 12.01f, 14.87f, 12.01f);
    bezierPath.lineTo(14.93f, 8.01f);
    bezierPath.cubicTo(14.93f, 8.01f, 16.1f, 8.02f, 16.19f, 8.02f);
    bezierPath.cubicTo(16.25f, 8.01f, 16.32f, 8.01f, 16.39f, 8.01f);
    bezierPath.cubicTo(16.68f, 8.01f, 16.91f, 7.82f, 16.91f, 7.53f);
    bezierPath.cubicTo(16.87f, 7.32f, 15.96f, 4.82f, 15.92f, 4.71f);
    bezierPath.cubicTo(15.9f, 4.65f, 15.88f, 4.58f, 15.88f, 4.52f);
    bezierPath.cubicTo(15.88f, 4.23f, 16.11f, 4f, 16.39f, 4f);
    bezierPath.lineTo(16.46f, 4f);
    bezierPath.close();

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(primaryColor);
    canvas.drawPath(bezierPath, paint);

    // Bezier 2
    RectF bezier2Rect = CacheForLaneRight.bezier2Rect;
    bezier2Rect.set(9f, 10.03f, 20.03f, 27f);
    Path bezier2Path = CacheForLaneRight.bezier2Path;
    bezier2Path.reset();
    bezier2Path.moveTo(9f, 27f);
    bezier2Path.lineTo(9.06f, 13.56f);
    bezier2Path.cubicTo(9.06f, 13.56f, 9.34f, 10.03f, 12.94f, 10.03f);
    bezier2Path.lineTo(20.03f, 10.03f);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStrokeWidth(4f);
    paint.setStrokeMiter(10f);
    canvas.save();
    paint.setStyle(Paint.Style.STROKE);
    paint.setColor(primaryColor);
    canvas.drawPath(bezier2Path, paint);
    canvas.restore();
  }

  private static class CacheForLaneRightOnly {
    private static Paint paint = new Paint();
    private static RectF rectangleRect = new RectF();
    private static Path rectanglePath = new Path();
    private static RectF bezierRect = new RectF();
    private static Path bezierPath = new Path();
    private static RectF bezier2Rect = new RectF();
    private static Path bezier2Path = new Path();
    private static RectF bezier3Rect = new RectF();
    private static Path bezier3Path = new Path();
  }


  public static void drawLaneRightOnly(Canvas canvas, int primaryColor, int secondaryColor) {
    // General Declarations
    Paint paint = CacheForLaneRightOnly.paint;

    // Rectangle
    RectF rectangleRect = CacheForLaneRightOnly.rectangleRect;
    rectangleRect.set(9f, 11f, 13f, 27f);
    Path rectanglePath = CacheForLaneRightOnly.rectanglePath;
    rectanglePath.reset();
    rectanglePath.addRect(rectangleRect, Path.Direction.CW);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(secondaryColor);
    canvas.drawPath(rectanglePath, paint);

    // Bezier
    RectF bezierRect = CacheForLaneRightOnly.bezierRect;
    bezierRect.set(5f, 2f, 17.02f, 11.99f);
    Path bezierPath = CacheForLaneRightOnly.bezierPath;
    bezierPath.reset();
    bezierPath.moveTo(11.02f, 2f);
    bezierPath.cubicTo(11.06f, 2.06f, 16.74f, 9.97f, 16.86f, 10.13f);
    bezierPath.cubicTo(16.96f, 10.23f, 17.02f, 10.37f, 17.02f, 10.52f);
    bezierPath.cubicTo(17.02f, 10.8f, 16.79f, 11.03f, 16.5f, 11.03f);
    bezierPath.cubicTo(16.44f, 11.03f, 16.37f, 11.02f, 16.31f, 10.99f);
    bezierPath.cubicTo(16.2f, 10.95f, 13.69f, 10.04f, 13.59f, 10f);
    bezierPath.cubicTo(13.2f, 10f, 13.01f, 10.23f, 13.01f, 10.52f);
    bezierPath.cubicTo(13.01f, 10.59f, 13f, 10.66f, 13f, 10.72f);
    bezierPath.cubicTo(13f, 10.8f, 13.01f, 11.99f, 13.01f, 11.99f);
    bezierPath.lineTo(9.01f, 11.92f);
    bezierPath.cubicTo(9.01f, 11.92f, 9.02f, 10.75f, 9.02f, 10.66f);
    bezierPath.cubicTo(9.01f, 10.6f, 9.01f, 10.53f, 9.01f, 10.46f);
    bezierPath.cubicTo(9.01f, 10.17f, 8.82f, 9.94f, 8.53f, 9.94f);
    bezierPath.cubicTo(8.32f, 9.98f, 5.82f, 10.89f, 5.71f, 10.93f);
    bezierPath.cubicTo(5.65f, 10.96f, 5.58f, 10.97f, 5.52f, 10.97f);
    bezierPath.cubicTo(5.23f, 10.97f, 5f, 10.74f, 5f, 10.46f);
    bezierPath.cubicTo(5f, 10.3f, 5.06f, 10.17f, 5.16f, 10.08f);
    bezierPath.cubicTo(5.28f, 9.9f, 10.97f, 2.06f, 11.01f, 2f);
    bezierPath.lineTo(11.02f, 2f);
    bezierPath.close();

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(secondaryColor);
    canvas.drawPath(bezierPath, paint);

    // Bezier 2
    RectF bezier2Rect = CacheForLaneRightOnly.bezier2Rect;
    bezier2Rect.set(17.99f, 10.58f, 26.97f, 22.6f);
    Path bezier2Path = CacheForLaneRightOnly.bezier2Path;
    bezier2Path.reset();
    bezier2Path.moveTo(18.05f, 14.59f);
    bezier2Path.lineTo(19.31f, 14.59f);
    bezier2Path.lineTo(19.31f, 14.59f);
    bezier2Path.cubicTo(19.37f, 14.59f, 19.44f, 14.59f, 19.51f, 14.59f);
    bezier2Path.cubicTo(19.8f, 14.59f, 20.03f, 14.4f, 20.03f, 14.1f);
    bezier2Path.cubicTo(20.03f, 14.07f, 20.03f, 14.04f, 20.03f, 14.01f);
    bezier2Path.lineTo(20.03f, 14.01f);
    bezier2Path.lineTo(19.04f, 11.28f);
    bezier2Path.lineTo(19.04f, 11.29f);
    bezier2Path.cubicTo(19.02f, 11.23f, 19f, 11.16f, 19f, 11.09f);
    bezier2Path.cubicTo(19f, 10.81f, 19.23f, 10.58f, 19.52f, 10.58f);
    bezier2Path.cubicTo(19.67f, 10.58f, 19.8f, 10.64f, 19.9f, 10.74f);
    bezier2Path.lineTo(19.9f, 10.74f);
    bezier2Path.lineTo(26.97f, 16.59f);
    bezier2Path.lineTo(19.83f, 22.44f);
    bezier2Path.lineTo(19.84f, 22.43f);
    bezier2Path.cubicTo(19.74f, 22.53f, 19.6f, 22.6f, 19.46f, 22.6f);
    bezier2Path.cubicTo(19.17f, 22.6f, 18.94f, 22.37f, 18.94f, 22.08f);
    bezier2Path.cubicTo(18.94f, 22.01f, 18.95f, 21.95f, 18.98f, 21.89f);
    bezier2Path.lineTo(18.98f, 21.89f);
    bezier2Path.lineTo(19.97f, 19.16f);
    bezier2Path.lineTo(19.97f, 19.16f);
    bezier2Path.cubicTo(19.97f, 19.14f, 19.97f, 19.1f, 19.97f, 19.07f);
    bezier2Path.cubicTo(19.97f, 18.78f, 19.74f, 18.59f, 19.45f, 18.59f);
    bezier2Path.cubicTo(19.38f, 18.59f, 19.31f, 18.58f, 19.25f, 18.58f);
    bezier2Path.lineTo(19.25f, 18.58f);
    bezier2Path.lineTo(17.99f, 18.59f);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    bezier2Path.setFillType(Path.FillType.EVEN_ODD);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(primaryColor);
    canvas.drawPath(bezier2Path, paint);

    // Bezier 3
    RectF bezier3Rect = CacheForLaneRightOnly.bezier3Rect;
    bezier3Rect.set(11.03f, 16.61f, 20.03f, 27f);
    Path bezier3Path = CacheForLaneRightOnly.bezier3Path;
    bezier3Path.reset();
    bezier3Path.moveTo(11.03f, 27f);
    bezier3Path.lineTo(11.03f, 22.87f);
    bezier3Path.cubicTo(11.03f, 21.23f, 11.73f, 19.65f, 13f, 18.61f);
    bezier3Path.cubicTo(14.23f, 17.61f, 15.93f, 16.61f, 17.84f, 16.61f);
    bezier3Path.lineTo(20.03f, 16.61f);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStrokeWidth(4f);
    paint.setStrokeMiter(10f);
    canvas.save();
    paint.setStyle(Paint.Style.STROKE);
    paint.setColor(primaryColor);
    canvas.drawPath(bezier3Path, paint);
    canvas.restore();
  }

  private static class CacheForLaneStraight {
    private static Paint paint = new Paint();
    private static RectF rectangleRect = new RectF();
    private static Path rectanglePath = new Path();
    private static RectF bezierRect = new RectF();
    private static Path bezierPath = new Path();
  }


  public static void drawLaneStraight(Canvas canvas, int primaryColor) {
    // General Declarations
    Paint paint = CacheForLaneStraight.paint;

    // Rectangle
    RectF rectangleRect = CacheForLaneStraight.rectangleRect;
    rectangleRect.set(13f, 11f, 17f, 27f);
    Path rectanglePath = CacheForLaneStraight.rectanglePath;
    rectanglePath.reset();
    rectanglePath.addRect(rectangleRect, Path.Direction.CW);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(primaryColor);
    canvas.drawPath(rectanglePath, paint);

    // Bezier
    RectF bezierRect = CacheForLaneStraight.bezierRect;
    bezierRect.set(9f, 3f, 21.02f, 12.99f);
    Path bezierPath = CacheForLaneStraight.bezierPath;
    bezierPath.reset();
    bezierPath.moveTo(13.01f, 12.92f);
    bezierPath.lineTo(13.02f, 11.66f);
    bezierPath.lineTo(13.01f, 11.66f);
    bezierPath.cubicTo(13.01f, 11.6f, 13.01f, 11.53f, 13.01f, 11.46f);
    bezierPath.cubicTo(13.01f, 11.17f, 12.82f, 10.94f, 12.53f, 10.94f);
    bezierPath.cubicTo(12.5f, 10.94f, 12.46f, 10.94f, 12.43f, 10.94f);
    bezierPath.lineTo(12.44f, 10.94f);
    bezierPath.lineTo(9.71f, 11.93f);
    bezierPath.lineTo(9.71f, 11.93f);
    bezierPath.cubicTo(9.65f, 11.96f, 9.58f, 11.97f, 9.52f, 11.97f);
    bezierPath.cubicTo(9.23f, 11.97f, 9f, 11.74f, 9f, 11.45f);
    bezierPath.cubicTo(9f, 11.3f, 9.06f, 11.17f, 9.16f, 11.07f);
    bezierPath.lineTo(9.16f, 11.08f);
    bezierPath.lineTo(15.02f, 3f);
    bezierPath.lineTo(20.86f, 11.14f);
    bezierPath.lineTo(20.86f, 11.14f);
    bezierPath.cubicTo(20.96f, 11.23f, 21.02f, 11.37f, 21.02f, 11.52f);
    bezierPath.cubicTo(21.02f, 11.8f, 20.79f, 12.03f, 20.5f, 12.03f);
    bezierPath.cubicTo(20.43f, 12.03f, 20.37f, 12.02f, 20.31f, 11.99f);
    bezierPath.lineTo(20.31f, 11.99f);
    bezierPath.lineTo(17.58f, 11f);
    bezierPath.lineTo(17.59f, 11.01f);
    bezierPath.cubicTo(17.56f, 11f, 17.52f, 11f, 17.49f, 11f);
    bezierPath.cubicTo(17.2f, 11f, 17.01f, 11.23f, 17.01f, 11.53f);
    bezierPath.cubicTo(17.01f, 11.59f, 17f, 11.66f, 17f, 11.73f);
    bezierPath.lineTo(17f, 11.72f);
    bezierPath.lineTo(17.01f, 12.99f);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    bezierPath.setFillType(Path.FillType.EVEN_ODD);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(primaryColor);
    canvas.drawPath(bezierPath, paint);
  }

  private static class CacheForLaneUturn {
    private static Paint paint = new Paint();
    private static RectF bezierRect = new RectF();
    private static Path bezierPath = new Path();
    private static RectF bezier2Rect = new RectF();
    private static Path bezier2Path = new Path();
  }


  public static void drawLaneUturn(Canvas canvas, int primaryColor) {
    // General Declarations
    Paint paint = CacheForLaneUturn.paint;

    // Bezier
    RectF bezierRect = CacheForLaneUturn.bezierRect;
    bezierRect.set(9f, 5f, 19f, 27f);
    Path bezierPath = CacheForLaneUturn.bezierPath;
    bezierPath.reset();
    bezierPath.moveTo(19f, 20f);
    bezierPath.lineTo(19f, 11.26f);
    bezierPath.cubicTo(19f, 9.62f, 19f, 5f, 14f, 5f);
    bezierPath.cubicTo(9f, 5f, 9f, 11f, 9f, 11f);
    bezierPath.lineTo(9f, 27f);

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStrokeWidth(4f);
    paint.setStrokeMiter(10f);
    canvas.save();
    paint.setStyle(Paint.Style.STROKE);
    paint.setColor(primaryColor);
    canvas.drawPath(bezierPath, paint);
    canvas.restore();

    // Bezier 2
    RectF bezier2Rect = CacheForLaneUturn.bezier2Rect;
    bezier2Rect.set(13.01f, 17.99f, 25f, 26.97f);
    Path bezier2Path = CacheForLaneUturn.bezier2Path;
    bezier2Path.reset();
    bezier2Path.moveTo(21.02f, 18.05f);
    bezier2Path.cubicTo(21.02f, 18.05f, 21.01f, 19.22f, 21.01f, 19.31f);
    bezier2Path.cubicTo(21.02f, 19.37f, 21.02f, 19.44f, 21.02f, 19.51f);
    bezier2Path.cubicTo(21.02f, 19.8f, 21.21f, 20.03f, 21.5f, 20.03f);
    bezier2Path.cubicTo(21.71f, 19.99f, 24.21f, 19.08f, 24.32f, 19.04f);
    bezier2Path.cubicTo(24.38f, 19.02f, 24.45f, 19f, 24.51f, 19f);
    bezier2Path.cubicTo(24.74f, 19f, 24.93f, 19.15f, 25f, 19.34f);
    bezier2Path.lineTo(25f, 19.52f);
    bezier2Path.lineTo(25f, 19.69f);
    bezier2Path.cubicTo(24.97f, 19.77f, 24.93f, 19.84f, 24.87f, 19.89f);
    bezier2Path.cubicTo(24.74f, 20.05f, 19.02f, 26.97f, 19.02f, 26.97f);
    bezier2Path.cubicTo(19.02f, 26.97f, 16.98f, 24.48f, 15.31f, 22.44f);
    bezier2Path.cubicTo(14.18f, 21.07f, 13.23f, 19.9f, 13.17f, 19.84f);
    bezier2Path.cubicTo(13.07f, 19.74f, 13.01f, 19.6f, 13.01f, 19.46f);
    bezier2Path.cubicTo(13.01f, 19.17f, 13.24f, 18.94f, 13.53f, 18.94f);
    bezier2Path.cubicTo(13.6f, 18.94f, 13.66f, 18.95f, 13.72f, 18.98f);
    bezier2Path.cubicTo(13.83f, 19.02f, 16.34f, 19.93f, 16.44f, 19.97f);
    bezier2Path.cubicTo(16.83f, 19.97f, 17.02f, 19.74f, 17.02f, 19.45f);
    bezier2Path.cubicTo(17.02f, 19.38f, 17.03f, 19.31f, 17.03f, 19.25f);
    bezier2Path.cubicTo(17.03f, 19.17f, 17.02f, 17.99f, 17.02f, 17.99f);
    bezier2Path.lineTo(21.02f, 18.05f);
    bezier2Path.close();

    paint.reset();
    paint.setFlags(Paint.ANTI_ALIAS_FLAG);
    paint.setStyle(Paint.Style.FILL);
    paint.setColor(primaryColor);
    canvas.drawPath(bezier2Path, paint);
  }

  private static class CacheForLaneSlightRight {
    private static Paint paint = new Paint();
    private static RectF bezier3Rect = new RectF();
    private static Path bezier3Path = new Path();
    private static RectF bezierRect = new RectF();
    private static Path bezierPath = new Path();
  }


  public static void drawLaneSlightRight(Canvas canvas, int primaryColor, float scale) {
    // General Declarations
    Stack<Matrix> currentTransformation = new Stack<Matrix>();
    currentTransformation.push(new Matrix());
    Paint paint = CacheForLaneSlightRight.paint;

    // Group 3
    {
      canvas.save();
      canvas.translate(21.78f, 10.24f);
      currentTransformation.peek().postTranslate(21.78f, 10.24f);
      canvas.scale(scale, scale);
      currentTransformation.peek().postScale(scale, scale);

      // Bezier 3
      RectF bezier3Rect = CacheForLaneSlightRight.bezier3Rect;
      bezier3Rect.set(-12.5f, -0.49f, -5.33f, 16.5f);
      Path bezier3Path = CacheForLaneSlightRight.bezier3Path;
      bezier3Path.reset();
      bezier3Path.moveTo(-5.33f, -0.49f);
      bezier3Path.lineTo(-11.03f, 4.79f);
      bezier3Path.cubicTo(-11.9f, 6.11f, -12.5f, 7.72f, -12.5f, 9.37f);
      bezier3Path.lineTo(-12.5f, 16.5f);

      paint.reset();
      paint.setFlags(Paint.ANTI_ALIAS_FLAG);
      paint.setStrokeWidth(4f);
      paint.setStrokeJoin(Paint.Join.ROUND);
      paint.setStrokeMiter(10f);
      canvas.save();
      paint.setStyle(Paint.Style.STROKE);
      paint.setColor(primaryColor);
      canvas.drawPath(bezier3Path, paint);
      canvas.restore();

      // Bezier
      canvas.save();
      canvas.translate(-2.25f, -11.1f);
      currentTransformation.peek().postTranslate(-2.25f, -11.1f);
      canvas.rotate(49f);
      currentTransformation.peek().postRotate(49f);
      RectF bezierRect = CacheForLaneSlightRight.bezierRect;
      bezierRect.set(0f, 0f, 12.02f, 9.99f);
      Path bezierPath = CacheForLaneSlightRight.bezierPath;
      bezierPath.reset();
      bezierPath.moveTo(4.01f, 9.92f);
      bezierPath.lineTo(4.02f, 8.66f);
      bezierPath.lineTo(4.01f, 8.66f);
      bezierPath.cubicTo(4.01f, 8.6f, 4.01f, 8.53f, 4.01f, 8.46f);
      bezierPath.cubicTo(4.01f, 8.17f, 3.82f, 7.94f, 3.53f, 7.94f);
      bezierPath.cubicTo(3.5f, 7.94f, 3.46f, 7.94f, 3.43f, 7.94f);
      bezierPath.lineTo(3.44f, 7.94f);
      bezierPath.lineTo(0.71f, 8.93f);
      bezierPath.lineTo(0.71f, 8.93f);
      bezierPath.cubicTo(0.65f, 8.96f, 0.58f, 8.97f, 0.52f, 8.97f);
      bezierPath.cubicTo(0.23f, 8.97f, 0f, 8.74f, 0f, 8.45f);
      bezierPath.cubicTo(0f, 8.3f, 0.06f, 8.17f, 0.16f, 8.07f);
      bezierPath.lineTo(0.16f, 8.08f);
      bezierPath.lineTo(6.02f, 0f);
      bezierPath.lineTo(11.86f, 8.14f);
      bezierPath.lineTo(11.86f, 8.14f);
      bezierPath.cubicTo(11.96f, 8.23f, 12.02f, 8.37f, 12.02f, 8.52f);
      bezierPath.cubicTo(12.02f, 8.8f, 11.79f, 9.03f, 11.5f, 9.03f);
      bezierPath.cubicTo(11.43f, 9.03f, 11.37f, 9.02f, 11.31f, 8.99f);
      bezierPath.lineTo(11.31f, 8.99f);
      bezierPath.lineTo(8.58f, 8f);
      bezierPath.lineTo(8.59f, 8.01f);
      bezierPath.cubicTo(8.56f, 8f, 8.52f, 8f, 8.49f, 8f);
      bezierPath.cubicTo(8.2f, 8f, 8.01f, 8.23f, 8.01f, 8.53f);
      bezierPath.cubicTo(8.01f, 8.59f, 8f, 8.66f, 8f, 8.73f);
      bezierPath.lineTo(8f, 8.72f);
      bezierPath.lineTo(8.01f, 9.99f);

      paint.reset();
      paint.setFlags(Paint.ANTI_ALIAS_FLAG);
      bezierPath.setFillType(Path.FillType.EVEN_ODD);
      paint.setStyle(Paint.Style.FILL);
      paint.setColor(primaryColor);
      canvas.drawPath(bezierPath, paint);
      canvas.restore();

      canvas.restore();
    }
  }
}