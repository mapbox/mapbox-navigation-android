// Signature format: 3.0
package com.mapbox.navigation.dropin {

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class EmptyBinder implements com.mapbox.navigation.ui.base.lifecycle.UIBinder {
    ctor public EmptyBinder();
    method public com.mapbox.navigation.core.lifecycle.MapboxNavigationObserver bind(android.view.ViewGroup viewGroup);
  }

  @UiThread @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class NavigationView extends android.widget.FrameLayout implements androidx.lifecycle.LifecycleOwner {
    ctor public NavigationView(android.content.Context context, android.util.AttributeSet? attrs = null, String accessToken = attrs.navigationViewAccessToken(context), androidx.lifecycle.ViewModelStoreOwner viewModelStoreOwner = context.toViewModelStoreOwner());
    ctor public NavigationView(android.content.Context context, android.util.AttributeSet? attrs = null, String accessToken = attrs.navigationViewAccessToken(context));
    ctor public NavigationView(android.content.Context context, android.util.AttributeSet? attrs = null);
    ctor public NavigationView(android.content.Context context);
    method public void addListener(com.mapbox.navigation.dropin.navigationview.NavigationViewListener listener);
    method public void customizeViewBinders(kotlin.jvm.functions.Function1<? super com.mapbox.navigation.dropin.ViewBinderCustomization,kotlin.Unit> action);
    method public void customizeViewOptions(kotlin.jvm.functions.Function1<? super com.mapbox.navigation.dropin.ViewOptionsCustomization,kotlin.Unit> action);
    method public void customizeViewStyles(kotlin.jvm.functions.Function1<? super com.mapbox.navigation.dropin.ViewStyleCustomization,kotlin.Unit> action);
    method public com.mapbox.navigation.dropin.NavigationViewApi getApi();
    method public androidx.lifecycle.Lifecycle getLifecycle();
    method public void registerMapObserver(com.mapbox.navigation.dropin.map.MapViewObserver observer);
    method public void removeListener(com.mapbox.navigation.dropin.navigationview.NavigationViewListener listener);
    method public void setRouteOptionsInterceptor(com.mapbox.navigation.dropin.RouteOptionsInterceptor? routeOptionsInterceptor);
    method public void unregisterMapObserver(com.mapbox.navigation.dropin.map.MapViewObserver observer);
    property public final com.mapbox.navigation.dropin.NavigationViewApi api;
  }

  @UiThread @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public abstract class NavigationViewApi {
    ctor public NavigationViewApi();
    method public abstract com.mapbox.navigation.ui.voice.api.MapboxVoiceInstructionsPlayer? getCurrentVoiceInstructionsPlayer();
    method public abstract boolean isReplayEnabled();
    method public abstract void routeReplayEnabled(boolean enabled);
    method public abstract com.mapbox.bindgen.Expected<com.mapbox.navigation.dropin.NavigationViewApiError,kotlin.Unit> startActiveGuidance();
    method public abstract com.mapbox.bindgen.Expected<com.mapbox.navigation.dropin.NavigationViewApiError,kotlin.Unit> startActiveGuidance(java.util.List<com.mapbox.navigation.base.route.NavigationRoute> routes);
    method public abstract com.mapbox.bindgen.Expected<com.mapbox.navigation.dropin.NavigationViewApiError,kotlin.Unit> startArrival();
    method public abstract com.mapbox.bindgen.Expected<com.mapbox.navigation.dropin.NavigationViewApiError,kotlin.Unit> startArrival(java.util.List<com.mapbox.navigation.base.route.NavigationRoute> routes);
    method public abstract void startDestinationPreview(com.mapbox.geojson.Point point);
    method public abstract void startFreeDrive();
    method public abstract com.mapbox.bindgen.Expected<com.mapbox.navigation.dropin.NavigationViewApiError,kotlin.Unit> startRoutePreview();
    method public abstract com.mapbox.bindgen.Expected<com.mapbox.navigation.dropin.NavigationViewApiError,kotlin.Unit> startRoutePreview(java.util.List<com.mapbox.navigation.base.route.NavigationRoute> routes);
  }

  public final class NavigationViewApiError extends java.lang.Throwable {
    method public int getType();
    property public final int type;
  }

  @IntDef({com.mapbox.navigation.dropin.NavigationViewApiErrorTypes.MissingDestinationInfo, com.mapbox.navigation.dropin.NavigationViewApiErrorTypes.MissingPreviewRoutesInfo, com.mapbox.navigation.dropin.NavigationViewApiErrorTypes.MissingRoutesInfo, com.mapbox.navigation.dropin.NavigationViewApiErrorTypes.InvalidRoutesInfo, com.mapbox.navigation.dropin.NavigationViewApiErrorTypes.IncompleteRoutesInfo}) @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface NavigationViewApiErrorType {
  }

  public final class NavigationViewApiErrorTypes {
    field public static final com.mapbox.navigation.dropin.NavigationViewApiErrorTypes INSTANCE;
    field public static final int IncompleteRoutesInfo = 5; // 0x5
    field public static final int InvalidRoutesInfo = 4; // 0x4
    field public static final int MissingDestinationInfo = 1; // 0x1
    field public static final int MissingPreviewRoutesInfo = 2; // 0x2
    field public static final int MissingRoutesInfo = 3; // 0x3
  }

  public fun interface RouteOptionsInterceptor {
    method public com.mapbox.api.directions.v5.models.RouteOptions.Builder intercept(com.mapbox.api.directions.v5.models.RouteOptions.Builder builder);
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class ViewBinderCustomization {
    ctor public ViewBinderCustomization();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getActionButtonsBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getActionCameraModeButtonBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getActionCompassButtonBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getActionRecenterButtonBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getActionToggleAudioButtonBinder();
    method public java.util.List<com.mapbox.navigation.dropin.actionbutton.ActionButtonDescription>? getCustomActionButtons();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelArrivalTextBinder();
    method public com.mapbox.navigation.dropin.infopanel.InfoPanelBinder? getInfoPanelBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelContentBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelEndNavigationButtonBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelHeaderActiveGuidanceBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelHeaderArrivalBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelHeaderBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelHeaderDestinationPreviewBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelHeaderFreeDriveBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelHeaderRoutesPreviewBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelPoiNameBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelRoutePreviewButtonBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelStartNavigationButtonBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelTripProgressBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getLeftFrameBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getManeuverBinder();
    method public com.mapbox.navigation.dropin.map.MapViewBinder? getMapViewBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getRightFrameBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getRoadNameBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getSpeedLimitBinder();
    method public void setActionButtonsBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setActionCameraModeButtonBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setActionCompassButtonBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setActionRecenterButtonBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setActionToggleAudioButtonBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setCustomActionButtons(java.util.List<com.mapbox.navigation.dropin.actionbutton.ActionButtonDescription>?);
    method public void setInfoPanelArrivalTextBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelBinder(com.mapbox.navigation.dropin.infopanel.InfoPanelBinder?);
    method public void setInfoPanelContentBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelEndNavigationButtonBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelHeaderActiveGuidanceBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelHeaderArrivalBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelHeaderBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelHeaderDestinationPreviewBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelHeaderFreeDriveBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelHeaderRoutesPreviewBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelPoiNameBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelRoutePreviewButtonBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelStartNavigationButtonBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelTripProgressBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setLeftFrameBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setManeuverBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setMapViewBinder(com.mapbox.navigation.dropin.map.MapViewBinder?);
    method public void setRightFrameBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setRoadNameBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setSpeedLimitBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? actionButtonsBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? actionCameraModeButtonBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? actionCompassButtonBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? actionRecenterButtonBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? actionToggleAudioButtonBinder;
    property public final java.util.List<com.mapbox.navigation.dropin.actionbutton.ActionButtonDescription>? customActionButtons;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelArrivalTextBinder;
    property public final com.mapbox.navigation.dropin.infopanel.InfoPanelBinder? infoPanelBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelContentBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelEndNavigationButtonBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelHeaderActiveGuidanceBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelHeaderArrivalBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelHeaderBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelHeaderDestinationPreviewBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelHeaderFreeDriveBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelHeaderRoutesPreviewBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelPoiNameBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelRoutePreviewButtonBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelStartNavigationButtonBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelTripProgressBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? leftFrameBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? maneuverBinder;
    property public final com.mapbox.navigation.dropin.map.MapViewBinder? mapViewBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? rightFrameBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? roadNameBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? speedLimitBinder;
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class ViewOptionsCustomization {
    ctor public ViewOptionsCustomization();
    method public com.mapbox.navigation.base.formatter.DistanceFormatterOptions? getDistanceFormatterOptions();
    method public Boolean? getEnableMapLongClickIntercept();
    method public Integer? getInfoPanelForcedState();
    method public String? getMapStyleUriDay();
    method public String? getMapStyleUriNight();
    method public com.mapbox.navigation.ui.maps.route.arrow.model.RouteArrowOptions? getRouteArrowOptions();
    method public com.mapbox.navigation.ui.maps.route.line.model.MapboxRouteLineOptions? getRouteLineOptions();
    method public Boolean? getShowActionButtons();
    method public Boolean? getShowArrivalText();
    method public Boolean? getShowCameraDebugInfo();
    method public Boolean? getShowCameraModeActionButton();
    method public Boolean? getShowCompassActionButton();
    method public Boolean? getShowEndNavigationButton();
    method public Boolean? getShowInfoPanelInFreeDrive();
    method public Boolean? getShowManeuver();
    method public Boolean? getShowMapScalebar();
    method public Boolean? getShowPoiName();
    method public Boolean? getShowRecenterActionButton();
    method public Boolean? getShowRoadName();
    method public Boolean? getShowRoutePreviewButton();
    method public Boolean? getShowSpeedLimit();
    method public Boolean? getShowStartNavigationButton();
    method public Boolean? getShowToggleAudioActionButton();
    method public Boolean? getShowTripProgress();
    method public Boolean? isInfoPanelHideable();
    method public void setDistanceFormatterOptions(com.mapbox.navigation.base.formatter.DistanceFormatterOptions?);
    method public void setEnableMapLongClickIntercept(Boolean?);
    method public void setInfoPanelForcedState(Integer?);
    method public void setInfoPanelHideable(Boolean?);
    method public void setMapStyleUriDay(String?);
    method public void setMapStyleUriNight(String?);
    method public void setRouteArrowOptions(com.mapbox.navigation.ui.maps.route.arrow.model.RouteArrowOptions?);
    method public void setRouteLineOptions(com.mapbox.navigation.ui.maps.route.line.model.MapboxRouteLineOptions?);
    method public void setShowActionButtons(Boolean?);
    method public void setShowArrivalText(Boolean?);
    method public void setShowCameraDebugInfo(Boolean?);
    method public void setShowCameraModeActionButton(Boolean?);
    method public void setShowCompassActionButton(Boolean?);
    method public void setShowEndNavigationButton(Boolean?);
    method public void setShowInfoPanelInFreeDrive(Boolean?);
    method public void setShowManeuver(Boolean?);
    method public void setShowMapScalebar(Boolean?);
    method public void setShowPoiName(Boolean?);
    method public void setShowRecenterActionButton(Boolean?);
    method public void setShowRoadName(Boolean?);
    method public void setShowRoutePreviewButton(Boolean?);
    method public void setShowSpeedLimit(Boolean?);
    method public void setShowStartNavigationButton(Boolean?);
    method public void setShowToggleAudioActionButton(Boolean?);
    method public void setShowTripProgress(Boolean?);
    property public final com.mapbox.navigation.base.formatter.DistanceFormatterOptions? distanceFormatterOptions;
    property public final Boolean? enableMapLongClickIntercept;
    property public final Integer? infoPanelForcedState;
    property public final Boolean? isInfoPanelHideable;
    property public final String? mapStyleUriDay;
    property public final String? mapStyleUriNight;
    property public final com.mapbox.navigation.ui.maps.route.arrow.model.RouteArrowOptions? routeArrowOptions;
    property public final com.mapbox.navigation.ui.maps.route.line.model.MapboxRouteLineOptions? routeLineOptions;
    property public final Boolean? showActionButtons;
    property public final Boolean? showArrivalText;
    property public final Boolean? showCameraDebugInfo;
    property public final Boolean? showCameraModeActionButton;
    property public final Boolean? showCompassActionButton;
    property public final Boolean? showEndNavigationButton;
    property public final Boolean? showInfoPanelInFreeDrive;
    property public final Boolean? showManeuver;
    property public final Boolean? showMapScalebar;
    property public final Boolean? showPoiName;
    property public final Boolean? showRecenterActionButton;
    property public final Boolean? showRoadName;
    property public final Boolean? showRoutePreviewButton;
    property public final Boolean? showSpeedLimit;
    property public final Boolean? showStartNavigationButton;
    property public final Boolean? showToggleAudioActionButton;
    property public final Boolean? showTripProgress;
    field public static final com.mapbox.navigation.dropin.ViewOptionsCustomization.Companion Companion;
  }

  public static final class ViewOptionsCustomization.Companion {
    method public com.mapbox.navigation.ui.maps.route.arrow.model.RouteArrowOptions defaultRouteArrowOptions(android.content.Context context);
    method public com.mapbox.navigation.ui.maps.route.line.model.MapboxRouteLineOptions defaultRouteLineOptions(android.content.Context context);
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class ViewStyleCustomization {
    ctor public ViewStyleCustomization();
    method public Integer? getArrivalTextAppearance();
    method public Integer? getAudioGuidanceButtonStyle();
    method public Integer? getCameraModeButtonStyle();
    method public Integer? getCompassButtonStyle();
    method public com.mapbox.maps.plugin.annotation.generated.PointAnnotationOptions? getDestinationMarkerAnnotationOptions();
    method public Integer? getEndNavigationButtonStyle();
    method public Integer? getInfoPanelBackground();
    method public Integer? getInfoPanelMarginEnd();
    method public Integer? getInfoPanelMarginStart();
    method public Integer? getInfoPanelPeekHeight();
    method public com.mapbox.maps.plugin.LocationPuck? getLocationPuck();
    method public com.mapbox.navigation.ui.maneuver.model.ManeuverViewOptions? getManeuverViewOptions();
    method public Integer? getPoiNameTextAppearance();
    method public Integer? getRecenterButtonStyle();
    method public Integer? getRoadNameBackground();
    method public Integer? getRoadNameTextAppearance();
    method public Integer? getRoutePreviewButtonStyle();
    method public Integer? getSpeedLimitStyle();
    method public Integer? getSpeedLimitTextAppearance();
    method public Integer? getStartNavigationButtonStyle();
    method public Integer? getTripProgressStyle();
    method public void setArrivalTextAppearance(Integer?);
    method public void setAudioGuidanceButtonStyle(Integer?);
    method public void setCameraModeButtonStyle(Integer?);
    method public void setCompassButtonStyle(Integer?);
    method public void setDestinationMarkerAnnotationOptions(com.mapbox.maps.plugin.annotation.generated.PointAnnotationOptions?);
    method public void setEndNavigationButtonStyle(Integer?);
    method public void setInfoPanelBackground(Integer?);
    method public void setInfoPanelMarginEnd(Integer?);
    method public void setInfoPanelMarginStart(Integer?);
    method public void setInfoPanelPeekHeight(Integer?);
    method public void setLocationPuck(com.mapbox.maps.plugin.LocationPuck?);
    method public void setManeuverViewOptions(com.mapbox.navigation.ui.maneuver.model.ManeuverViewOptions?);
    method public void setPoiNameTextAppearance(Integer?);
    method public void setRecenterButtonStyle(Integer?);
    method public void setRoadNameBackground(Integer?);
    method public void setRoadNameTextAppearance(Integer?);
    method public void setRoutePreviewButtonStyle(Integer?);
    method public void setSpeedLimitStyle(Integer?);
    method public void setSpeedLimitTextAppearance(Integer?);
    method public void setStartNavigationButtonStyle(Integer?);
    method public void setTripProgressStyle(Integer?);
    property public final Integer? arrivalTextAppearance;
    property public final Integer? audioGuidanceButtonStyle;
    property public final Integer? cameraModeButtonStyle;
    property public final Integer? compassButtonStyle;
    property public final com.mapbox.maps.plugin.annotation.generated.PointAnnotationOptions? destinationMarkerAnnotationOptions;
    property public final Integer? endNavigationButtonStyle;
    property public final Integer? infoPanelBackground;
    property public final Integer? infoPanelMarginEnd;
    property public final Integer? infoPanelMarginStart;
    property public final Integer? infoPanelPeekHeight;
    property public final com.mapbox.maps.plugin.LocationPuck? locationPuck;
    property public final com.mapbox.navigation.ui.maneuver.model.ManeuverViewOptions? maneuverViewOptions;
    property public final Integer? poiNameTextAppearance;
    property public final Integer? recenterButtonStyle;
    property public final Integer? roadNameBackground;
    property public final Integer? roadNameTextAppearance;
    property public final Integer? routePreviewButtonStyle;
    property public final Integer? speedLimitStyle;
    property public final Integer? speedLimitTextAppearance;
    property public final Integer? startNavigationButtonStyle;
    property public final Integer? tripProgressStyle;
    field public static final com.mapbox.navigation.dropin.ViewStyleCustomization.Companion Companion;
  }

  public static final class ViewStyleCustomization.Companion {
    method @StyleRes public int defaultArrivalTextAppearance();
    method @StyleRes public int defaultAudioGuidanceButtonStyle();
    method @StyleRes public int defaultCameraModeButtonStyle();
    method @StyleRes public int defaultCompassButtonStyle();
    method public com.mapbox.maps.plugin.annotation.generated.PointAnnotationOptions defaultDestinationMarkerAnnotationOptions(android.content.Context context);
    method @StyleRes public int defaultEndNavigationButtonStyle();
    method @DrawableRes public int defaultInfoPanelBackground();
    method @Px public int defaultInfoPanelMarginEnd();
    method @Px public int defaultInfoPanelMarginStart();
    method @Px public int defaultInfoPanelPeekHeight(android.content.Context context);
    method public com.mapbox.maps.plugin.LocationPuck defaultLocationPuck(android.content.Context context);
    method public com.mapbox.navigation.ui.maneuver.model.ManeuverViewOptions defaultManeuverViewOptions();
    method @StyleRes public int defaultPoiNameTextAppearance();
    method @StyleRes public int defaultRecenterButtonStyle();
    method @DrawableRes public int defaultRoadNameBackground();
    method @StyleRes public int defaultRoadNameTextAppearance();
    method @StyleRes public int defaultRoutePreviewButtonStyle();
    method @StyleRes public int defaultSpeedLimitStyle();
    method @StyleRes public int defaultSpeedLimitTextAppearance();
    method @StyleRes public int defaultStartNavigationButtonStyle();
    method @StyleRes public int defaultTripProgressStyle();
  }

}

package com.mapbox.navigation.dropin.actionbutton {

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class ActionButtonDescription {
    ctor public ActionButtonDescription(android.view.View view, com.mapbox.navigation.dropin.actionbutton.ActionButtonDescription.Position position = com.mapbox.navigation.dropin.actionbutton.ActionButtonDescription.Position.END);
    method public com.mapbox.navigation.dropin.actionbutton.ActionButtonDescription.Position getPosition();
    method public android.view.View getView();
    property public final com.mapbox.navigation.dropin.actionbutton.ActionButtonDescription.Position position;
    property public final android.view.View view;
  }

  public enum ActionButtonDescription.Position {
    enum_constant public static final com.mapbox.navigation.dropin.actionbutton.ActionButtonDescription.Position END;
    enum_constant public static final com.mapbox.navigation.dropin.actionbutton.ActionButtonDescription.Position START;
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public abstract class ActionButtonsBinder implements com.mapbox.navigation.ui.base.lifecycle.UIBinder {
    ctor public ActionButtonsBinder();
    method public com.mapbox.navigation.core.lifecycle.MapboxNavigationObserver bind(android.view.ViewGroup viewGroup);
    method @UiThread protected abstract android.view.ViewGroup? getCameraModeButtonContainer(android.view.ViewGroup layout);
    method @UiThread protected abstract android.view.ViewGroup? getCompassButtonContainer(android.view.ViewGroup layout);
    method @UiThread protected abstract android.view.ViewGroup? getCustomButtonsEndContainer(android.view.ViewGroup layout);
    method @UiThread protected abstract android.view.ViewGroup? getCustomButtonsStartContainer(android.view.ViewGroup layout);
    method @UiThread protected abstract android.view.ViewGroup? getRecenterButtonContainer(android.view.ViewGroup layout);
    method @UiThread protected abstract android.view.ViewGroup? getToggleAudioButtonContainer(android.view.ViewGroup layout);
    method @UiThread public abstract android.view.ViewGroup onCreateLayout(android.view.LayoutInflater layoutInflater, android.view.ViewGroup root);
    method @Px @UiThread protected int verticalSpacing(android.content.res.Resources resources);
    field public static final com.mapbox.navigation.dropin.actionbutton.ActionButtonsBinder.Companion Companion;
  }

  public static final class ActionButtonsBinder.Companion {
    method public com.mapbox.navigation.dropin.actionbutton.ActionButtonsBinder defaultBinder();
  }

}

package com.mapbox.navigation.dropin.infopanel {

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public abstract class InfoPanelBinder implements com.mapbox.navigation.ui.base.lifecycle.UIBinder {
    ctor public InfoPanelBinder();
    method @UiThread public void applySystemBarsInsets(android.view.ViewGroup layout, androidx.core.graphics.Insets insets);
    method public com.mapbox.navigation.core.lifecycle.MapboxNavigationObserver bind(android.view.ViewGroup viewGroup);
    method @UiThread public abstract android.view.ViewGroup? getContentLayout(android.view.ViewGroup layout);
    method @UiThread public abstract android.view.ViewGroup? getHeaderLayout(android.view.ViewGroup layout);
    method @UiThread public abstract android.view.ViewGroup onCreateLayout(android.view.LayoutInflater layoutInflater, android.view.ViewGroup root);
    field public static final com.mapbox.navigation.dropin.infopanel.InfoPanelBinder.Companion Companion;
  }

  public static final class InfoPanelBinder.Companion {
    method public com.mapbox.navigation.dropin.infopanel.InfoPanelBinder defaultBinder();
  }

}

package com.mapbox.navigation.dropin.map {

  public final class MapLayoutCoordinatorKt {
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public abstract class MapViewBinder implements com.mapbox.navigation.ui.base.lifecycle.UIBinder {
    ctor public MapViewBinder();
    method public com.mapbox.navigation.core.lifecycle.MapboxNavigationObserver bind(android.view.ViewGroup viewGroup);
    method public abstract com.mapbox.maps.MapView getMapView(android.content.Context context);
    method public boolean getShouldLoadMapStyle();
    property public boolean shouldLoadMapStyle;
    field public static final com.mapbox.navigation.dropin.map.MapViewBinder.Companion Companion;
  }

  public static final class MapViewBinder.Companion {
    method public com.mapbox.navigation.dropin.map.MapViewBinder defaultBinder();
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public abstract class MapViewObserver {
    ctor public MapViewObserver();
    method public void onAttached(com.mapbox.maps.MapView mapView);
    method public void onDetached(com.mapbox.maps.MapView mapView);
  }

}

package com.mapbox.navigation.dropin.navigationview {

  public final class MapboxNavigationViewApiKt {
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public abstract class NavigationViewListener {
    ctor public NavigationViewListener();
    method public void onActiveNavigation();
    method public void onArrival();
    method public void onAudioGuidanceStateChanged(boolean muted);
    method public void onCameraPaddingChanged(com.mapbox.maps.EdgeInsets padding);
    method public void onDestinationChanged(com.mapbox.geojson.Point? destination);
    method public void onDestinationPreview();
    method public void onFollowingCameraMode();
    method public void onFreeDrive();
    method public void onIdleCameraMode();
    method public void onInfoPanelCollapsed();
    method public void onInfoPanelDragging();
    method public void onInfoPanelExpanded();
    method public void onInfoPanelHidden();
    method public void onInfoPanelSettling();
    method public void onInfoPanelSlide(float slideOffset);
    method public void onManeuverCollapsed();
    method public void onManeuverExpanded();
    method public void onMapClicked(com.mapbox.geojson.Point point);
    method public void onOverviewCameraMode();
    method public void onRouteFetchCanceled(com.mapbox.api.directions.v5.models.RouteOptions routeOptions, com.mapbox.navigation.base.route.RouterOrigin routerOrigin);
    method public void onRouteFetchFailed(java.util.List<com.mapbox.navigation.base.route.RouterFailure> reasons, com.mapbox.api.directions.v5.models.RouteOptions routeOptions);
    method public void onRouteFetchSuccessful(java.util.List<com.mapbox.navigation.base.route.NavigationRoute> routes);
    method public void onRouteFetching(long requestId);
    method public void onRoutePreview();
  }

}

