// Signature format: 3.0
package com.mapbox.navigation.dropin {

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class NavigationView extends android.widget.FrameLayout implements androidx.lifecycle.LifecycleOwner {
    ctor public NavigationView(android.content.Context context, android.util.AttributeSet? attrs = null, String accessToken = attrs.navigationViewAccessToken(context), androidx.lifecycle.ViewModelStoreOwner viewModelStoreOwner = context.toViewModelStoreOwner());
    ctor public NavigationView(android.content.Context context, android.util.AttributeSet? attrs = null, String accessToken = attrs.navigationViewAccessToken(context));
    ctor public NavigationView(android.content.Context context, android.util.AttributeSet? attrs = null);
    ctor public NavigationView(android.content.Context context);
    method public void customizeMapView(com.mapbox.maps.MapView? mapView);
    method public void customizeViewBinders(kotlin.jvm.functions.Function1<? super com.mapbox.navigation.dropin.ViewBinderCustomization,kotlin.Unit> action);
    method public void customizeViewOptions(kotlin.jvm.functions.Function1<? super com.mapbox.navigation.dropin.ViewOptionsCustomization,kotlin.Unit> action);
    method public void customizeViewStyles(kotlin.jvm.functions.Function1<? super com.mapbox.navigation.dropin.ViewStyleCustomization,kotlin.Unit> action);
    method public com.mapbox.navigation.dropin.NavigationViewApi getApi();
    method public androidx.lifecycle.Lifecycle getLifecycle();
    property public final com.mapbox.navigation.dropin.NavigationViewApi api;
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class NavigationViewApi {
    method public void enableReplaySession();
    method public void enableTripSession();
    method public boolean isReplayEnabled();
    method public void setDestination(com.mapbox.geojson.Point point);
    method public void setRoutes(com.mapbox.api.directions.v5.models.RouteOptions options);
    method public void setRoutes(java.util.List<com.mapbox.navigation.base.route.NavigationRoute> routes);
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class ViewBinderCustomization {
    ctor public ViewBinderCustomization();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getActionButtonsBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelContentBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelHeaderBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getInfoPanelTripProgressBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getManeuverBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getRoadNameBinder();
    method public com.mapbox.navigation.ui.base.lifecycle.UIBinder? getSpeedLimitBinder();
    method public void setActionButtonsBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelContentBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelHeaderBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setInfoPanelTripProgressBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setManeuverBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setRoadNameBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    method public void setSpeedLimitBinder(com.mapbox.navigation.ui.base.lifecycle.UIBinder?);
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? actionButtonsBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelContentBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelHeaderBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? infoPanelTripProgressBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? maneuverBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? roadNameBinder;
    property public final com.mapbox.navigation.ui.base.lifecycle.UIBinder? speedLimitBinder;
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class ViewOptionsCustomization {
    ctor public ViewOptionsCustomization();
    method public String? getMapStyleUriDay();
    method public String? getMapStyleUriNight();
    method public com.mapbox.navigation.ui.maps.route.arrow.model.RouteArrowOptions? getRouteArrowOptions();
    method public com.mapbox.navigation.ui.maps.route.line.model.MapboxRouteLineOptions? getRouteLineOptions();
    method public void setMapStyleUriDay(String?);
    method public void setMapStyleUriNight(String?);
    method public void setRouteArrowOptions(com.mapbox.navigation.ui.maps.route.arrow.model.RouteArrowOptions?);
    method public void setRouteLineOptions(com.mapbox.navigation.ui.maps.route.line.model.MapboxRouteLineOptions?);
    property public final String? mapStyleUriDay;
    property public final String? mapStyleUriNight;
    property public final com.mapbox.navigation.ui.maps.route.arrow.model.RouteArrowOptions? routeArrowOptions;
    property public final com.mapbox.navigation.ui.maps.route.line.model.MapboxRouteLineOptions? routeLineOptions;
    field public static final com.mapbox.navigation.dropin.ViewOptionsCustomization.Companion Companion;
  }

  public static final class ViewOptionsCustomization.Companion {
    method public com.mapbox.navigation.ui.maps.route.arrow.model.RouteArrowOptions defaultRouteArrowOptions(android.content.Context context);
    method public com.mapbox.navigation.ui.maps.route.line.model.MapboxRouteLineOptions defaultRouteLineOptions(android.content.Context context);
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class ViewStyleCustomization {
    ctor public ViewStyleCustomization();
    method public Integer? getAudioGuidanceButtonStyle();
    method public Integer? getCameraModeButtonStyle();
    method public Integer? getDestinationMarker();
    method public Integer? getEndNavigationButtonStyle();
    method public com.mapbox.navigation.ui.maneuver.model.ManeuverViewOptions? getManeuverViewOptions();
    method public Integer? getRecenterButtonStyle();
    method public Integer? getRoadNameBackground();
    method public Integer? getRoadNameTextAppearance();
    method public Integer? getRoutePreviewButtonStyle();
    method public Integer? getSpeedLimitStyle();
    method public Integer? getSpeedLimitTextAppearance();
    method public Integer? getStartNavigationButtonStyle();
    method public Integer? getTripProgressStyle();
    method public void setAudioGuidanceButtonStyle(Integer?);
    method public void setCameraModeButtonStyle(Integer?);
    method public void setDestinationMarker(Integer?);
    method public void setEndNavigationButtonStyle(Integer?);
    method public void setManeuverViewOptions(com.mapbox.navigation.ui.maneuver.model.ManeuverViewOptions?);
    method public void setRecenterButtonStyle(Integer?);
    method public void setRoadNameBackground(Integer?);
    method public void setRoadNameTextAppearance(Integer?);
    method public void setRoutePreviewButtonStyle(Integer?);
    method public void setSpeedLimitStyle(Integer?);
    method public void setSpeedLimitTextAppearance(Integer?);
    method public void setStartNavigationButtonStyle(Integer?);
    method public void setTripProgressStyle(Integer?);
    property public final Integer? audioGuidanceButtonStyle;
    property public final Integer? cameraModeButtonStyle;
    property public final Integer? destinationMarker;
    property public final Integer? endNavigationButtonStyle;
    property public final com.mapbox.navigation.ui.maneuver.model.ManeuverViewOptions? maneuverViewOptions;
    property public final Integer? recenterButtonStyle;
    property public final Integer? roadNameBackground;
    property public final Integer? roadNameTextAppearance;
    property public final Integer? routePreviewButtonStyle;
    property public final Integer? speedLimitStyle;
    property public final Integer? speedLimitTextAppearance;
    property public final Integer? startNavigationButtonStyle;
    property public final Integer? tripProgressStyle;
    field public static final com.mapbox.navigation.dropin.ViewStyleCustomization.Companion Companion;
  }

  public static final class ViewStyleCustomization.Companion {
    method @StyleRes public int defaultAudioGuidanceButtonStyle();
    method @StyleRes public int defaultCameraModeButtonStyle();
    method @DrawableRes public int defaultDestinationMarker();
    method @StyleRes public int defaultEndNavigationButtonStyle();
    method public com.mapbox.navigation.ui.maneuver.model.ManeuverViewOptions defaultManeuverViewOptions();
    method @StyleRes public int defaultRecenterButtonStyle();
    method @DrawableRes public int defaultRoadNameBackground();
    method @StyleRes public int defaultRoadNameTextAppearance();
    method @StyleRes public int defaultRoutePreviewButtonStyle();
    method @StyleRes public int defaultSpeedLimitStyle();
    method @StyleRes public int defaultSpeedLimitTextAppearance();
    method @StyleRes public int defaultStartNavigationButtonStyle();
    method @StyleRes public int defaultTripProgressStyle();
  }

}

package com.mapbox.navigation.dropin.view {

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class MapboxCameraModeButton extends android.widget.FrameLayout {
    ctor public MapboxCameraModeButton(android.content.Context context);
    ctor public MapboxCameraModeButton(android.content.Context context, android.util.AttributeSet? attrs);
    ctor public MapboxCameraModeButton(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr);
    ctor public MapboxCameraModeButton(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr, int defStyleRes);
    method public androidx.constraintlayout.widget.ConstraintLayout getContainerView();
    method public int getFollowingIconResId();
    method public String? getFollowingText();
    method public androidx.appcompat.widget.AppCompatImageView getIconImage();
    method public int getOverviewIconResId();
    method public String? getOverviewText();
    method public androidx.appcompat.widget.AppCompatTextView getTextView();
    method public void setFollowingIconResId(int);
    method public void setFollowingText(String?);
    method public void setOverviewIconResId(int);
    method public void setOverviewText(String?);
    method @UiThread public void setState(com.mapbox.navigation.ui.maps.camera.state.NavigationCameraState state);
    method @UiThread public void setStateAndExtend(com.mapbox.navigation.ui.maps.camera.state.NavigationCameraState state, long duration = 2000L);
    method @UiThread public void setStateAndExtend(com.mapbox.navigation.ui.maps.camera.state.NavigationCameraState state);
    method public void updateStyle(@StyleRes int style);
    property public final androidx.constraintlayout.widget.ConstraintLayout containerView;
    property public final int followingIconResId;
    property public final String? followingText;
    property public final androidx.appcompat.widget.AppCompatImageView iconImage;
    property public final int overviewIconResId;
    property public final String? overviewText;
    property public final androidx.appcompat.widget.AppCompatTextView textView;
  }

  @com.mapbox.navigation.base.ExperimentalPreviewMapboxNavigationAPI public final class MapboxExtendableButton extends android.widget.FrameLayout {
    ctor public MapboxExtendableButton(android.content.Context context);
    ctor public MapboxExtendableButton(android.content.Context context, android.util.AttributeSet? attrs);
    ctor public MapboxExtendableButton(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr);
    ctor public MapboxExtendableButton(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr, int defStyleRes);
    method public androidx.constraintlayout.widget.ConstraintLayout getContainerView();
    method public androidx.appcompat.widget.AppCompatImageView getIconImage();
    method public androidx.appcompat.widget.AppCompatTextView getTextView();
    method public void setState(com.mapbox.navigation.dropin.view.MapboxExtendableButton.State state);
    method public void updateStyle(@StyleRes int style);
    property public final androidx.constraintlayout.widget.ConstraintLayout containerView;
    property public final androidx.appcompat.widget.AppCompatImageView iconImage;
    property public final androidx.appcompat.widget.AppCompatTextView textView;
  }

  public static final class MapboxExtendableButton.State {
    ctor public MapboxExtendableButton.State(@DrawableRes int icon, String? text = null, long duration = 0);
    method public int component1();
    method public String? component2();
    method public long component3();
    method public com.mapbox.navigation.dropin.view.MapboxExtendableButton.State copy(@DrawableRes int icon, String? text, long duration);
    method public long getDuration();
    method public int getIcon();
    method public String? getText();
    property public final long duration;
    property public final int icon;
    property public final String? text;
  }

}

