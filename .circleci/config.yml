version: 2.1

parameters:
  mapbox_navigation_native_upstream:
    type: boolean
    default: false
  mapbox_navigation_native_snapshot:
    type: string
    default: ''

#-------------------------------
#---------- EXECUTORS ----------
#-------------------------------
executors:
  ndk-r21e-latest-executor:
    docker:
      - image: mbgl/android-ndk-r21e:latest
    working_directory: ~/code
    environment:
      MBX_CI_DOMAIN: o619qyc20d.execute-api.us-east-1.amazonaws.com
      FORCE_MAPBOX_NAVIGATION_NATIVE_VERSION: << pipeline.parameters.mapbox_navigation_native_snapshot >>
      ALLOW_SNAPSHOT_REPOSITORY: << pipeline.parameters.mapbox_navigation_native_upstream >>

#-------------------------------
#---------- WORKFLOWS ----------
#-------------------------------
workflows:
  version: 2
  release-workflow:
    when:
      not: << pipeline.parameters.mapbox_navigation_native_upstream >>
    jobs:
      - release-snapshot:
          filters:
            branches:
              only:
                - main
      - release:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-documentation:
          requires:
            - release
  default:
    jobs:
      - prepare-and-assemble
      - changelog-verification:
          filters:
            branches:
              ignore: /^(main|release-.*)/
      - static-analysis:
          requires:
            - prepare-and-assemble
      - unit-tests-core:
          requires:
            - prepare-and-assemble
      - unit-tests-ui:
          requires:
            - prepare-and-assemble
      - ui-robo-tests:
          requires:
            - prepare-and-assemble
      - internal-instrumentation-tests:
          requires:
            - prepare-and-assemble
      - instrumentation-tests:
          requires:
            - prepare-and-assemble
      - mobile-metrics-dry-run:
          type: approval
      - mobile-metrics-benchmarks:
          requires:
            - mobile-metrics-dry-run

#------------------------------
#---------- COMMANDS ----------
#------------------------------
commands:
  write-workspace:
    steps:
      - persist_to_workspace:
          root: ~/code
          paths:
            - ./

  read-workspace:
    steps:
      - attach_workspace:
          at: ~/code

  restore-gradle-cache:
    steps:
      - restore_cache:
          keys:
            - deps-{{ checksum "build.gradle" }}-{{ checksum  "gradle/dependencies.gradle" }}-{{ checksum  "examples/build.gradle" }}-{{ checksum  "libnavigation-router/build.gradle" }}-{{ checksum  "libnavigation-base/build.gradle" }}-{{ checksum  "libnavigation-core/build.gradle" }}-{{ checksum  "libnavigation-metrics/build.gradle" }}-{{ checksum  "libnavigation-util/build.gradle" }}-{{ checksum  "libnavigator/build.gradle" }}-{{ checksum  "libtrip-notification/build.gradle" }}-{{ checksum  "libtesting-ui/build.gradle" }}-{{ checksum  "libtesting-utils/build.gradle" }}-{{ checksum  "libnavui-maps/build.gradle" }}-{{ checksum  "libnavui-base/build.gradle" }}-{{ checksum  "libnavui-util/build.gradle" }}-{ checksum  "libnavui-resources/build.gradle" }}-{ checksum  "libnavui-maneuver/build.gradle" }}-{{ checksum  "libnavui-tripprogress/build.gradle" }}-{{ checksum  "libnavui-voice/build.gradle" }}-{{ checksum  "libnavigation-android/build.gradle" }}-{{ checksum  "libnavui-speedlimit/build.gradle" }}
            - deps-
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: deps-{{ checksum "build.gradle" }}-{{ checksum  "gradle/dependencies.gradle" }}-{{ checksum  "examples/build.gradle" }}-{{ checksum  "libnavigation-router/build.gradle" }}-{{ checksum  "libnavigation-base/build.gradle" }}-{{ checksum  "libnavigation-core/build.gradle" }}-{{ checksum  "libnavigation-metrics/build.gradle" }}-{{ checksum  "libnavigation-util/build.gradle" }}-{{ checksum  "libnavigator/build.gradle" }}-{{ checksum  "libtrip-notification/build.gradle" }}-{{ checksum  "libtesting-ui/build.gradle" }}-{{ checksum  "libtesting-utils/build.gradle" }}-{{ checksum  "libnavui-maps/build.gradle" }}-{{ checksum  "libnavui-base/build.gradle" }}-{{ checksum  "libnavui-util/build.gradle" }}-{ checksum  "libnavui-resources/build.gradle" }}-{ checksum  "libnavui-maneuver/build.gradle" }}-{{ checksum  "libnavui-tripprogress/build.gradle" }}-{{ checksum  "libnavui-voice/build.gradle" }}-{{ checksum  "libnavigation-android/build.gradle" }}-{{ checksum  "libnavui-speedlimit/build.gradle" }}

  verify-codestyle:
    steps:
      - run:
          name: Check codestyle
          command: make check-lint

  verify-license:
    steps:
      - run:
          name: License verification
          command: make license-verification

  verify-common-sdk-version:
    steps:
      - run:
          name: Verify Common SDK version
          command: make verify-common-sdk-version

  verify-changelog:
    steps:
      - run:
          name: Install python dependencies
          command: python3 -m pip install requests
      - run:
          name: Verify that a changelog entry is present in the PR description
          command: |
            MBX_CI_GITHUB_TOKEN=$(./mbx-ci github reader token)
            if [[ -n "$CIRCLE_PULL_REQUEST" ]]; then
              python3 scripts/validate-changelog.py ${CIRCLE_PULL_REQUEST##*/} ${MBX_CI_GITHUB_TOKEN}
            else
              echo "Not a PR, skipping changelog validation."
            fi

  assemble-module:
    parameters:
      module_target:
        description: module target
        type: string
      variant:
        description: debug or release
        type: string
      inject_token:
        description: whether to inject an access token file
        type: boolean
        default: false
    steps:
      - run:
          name: Assemble << parameters.module_target >> APK in << parameters.variant >> mode
          command: |
            if << parameters.inject_token >>; then
                echo "${MAPBOX_DEVELOPER_CONFIG}" > /root/code/<< parameters.module_target >>/src/main/res/values/mapbox_access_token.xml
            fi
            ./gradlew << parameters.module_target >>:assemble<< parameters.variant >>

  assemble-instrumentation-test:
    parameters:
      module_target:
        description: module target
        type: string
    steps:
      - run:
          name: Assemble Instrumentation Test APK for << parameters.module_target >>
          command: |
            ./gradlew << parameters.module_target >>:assembleAndroidTest

  login-google-cloud-platform:
    steps:
      - run:
          name: Log in to Google Cloud Platform
          shell: /bin/bash -euo pipefail
          command: |
            echo "${GCLOUD_SERVICE_ACCOUNT_JSON}" > secret.json
            gcloud auth activate-service-account --key-file secret.json --project mapbox-navigation-android
            rm secret.json

  store-results:
    parameters:
      module_target:
        description: module target
        type: string
    steps:
      - store_artifacts:
          path: << parameters.module_target >>/build/reports
          destination: << parameters.module_target >>/reports
      - store_test_results:
          path: << parameters.module_target >>/build/test-results

  assemble-core-debug:
    steps:
      - run:
          name: Assemble Navigation Core SDK (debug)
          command: make assemble-core-debug

  assemble-ui-debug:
    steps:
      - run:
          name: Assemble Navigation UI SDK(debug)
          command: make assemble-ui-debug

  assemble-core-release:
    steps:
      - run:
          name: Assemble Navigation Core SDK (release)
          command: make assemble-core-release

  assemble-ui-release:
    steps:
      - run:
          name: Assemble Navigation UI SDK (release)
          command: make assemble-ui-release

  check-api-core:
    steps:
      - run:
          name: Check Navigation Core SDK public API
          command: make core-check-api

  check-api-ui:
    steps:
      - run:
          name: Check Navigation UI SDK public API
          command: make ui-check-api

  unit-tests-core:
    steps:
      - run:
          name: Run Navigation Core SDK Unit Tests and generate Jacoco test report
          command: |
            make core-unit-tests-jacoco
      - store-results:
          module_target: "libnavigation-router"
      - store-results:
          module_target: "libnavigation-base"
      - store-results:
          module_target: "libnavigation-core"
      - store-results:
          module_target: "libnavigation-metrics"
      - store-results:
          module_target: "libnavigation-util"
      - store-results:
          module_target: "libnavigator"
      - store-results:
          module_target: "libtrip-notification"

  unit-tests-ui:
    steps:
      - run:
          name: Run Navigation UI SDK Unit Tests and generate Jacoco test report
          command: |
            make ui-unit-tests-jacoco
      - store-results:
          module_target: "libnavui-maps"
      - store-results:
          module_target: "libnavui-base"
      - store-results:
          module_target: "libnavui-util"
      - store-results:
          module_target: "libnavui-maneuver"
      - store-results:
          module_target: "libnavui-tripprogress"
      - store-results:
          module_target: "libnavui-voice"
      - store-results:
          module_target: "libnavui-speedlimit"

  codecov:
    steps:
      - run:
          name: Post code coverage reports to Codecov.io
          command: pip3 install --user codecov && /root/.local/bin/codecov

  generate-version-name:
    steps:
      - run:
          name: Generate Core version name
          command: |
            if [[ -n "$CIRCLE_TAG" ]]; then
              if [[ $CIRCLE_TAG == v* ]]; then
                POM_VERSION_NAME=`echo $CIRCLE_TAG | sed s/v//`
              else
                echo "Exiting the job as this is not a release TAG"
                exit 1
              fi
              echo "export POM_VERSION_NAME=$POM_VERSION_NAME" >> $BASH_ENV
            fi

  generate-google-services-json:
    steps:
      - run:
          name: Generate google services json for the test app
          command: |
            echo "${EXAMPLES_GOOGLE_SERVICES_JSON}" > /root/code/examples/google-services.json

  download-native-libs:
    steps:
      - run:
          name: Download native libraries for crashlytics
          command: ./gradlew downloadUnstrippedNativeLibsDir

  upload-native-libs-to-crashlytics:
    steps:
      - run:
          name: Generate crashlytics symbol file felease
          command: ./gradlew examples:generateCrashlyticsSymbolFileRelease -d | grep "com.google.firebase.crashlytics"
      - run:
          name: Upload crashlytics mapping file felease
          command: ./gradlew examples:uploadCrashlyticsMappingFileRelease -d | grep "com.google.firebase.crashlytics"
      - run:
          name: Upload crashlytics symbol file release
          command: ./gradlew examples:uploadCrashlyticsSymbolFileRelease -d | grep "com.google.firebase.crashlytics"

  run-internal-firebase-instrumentation:
    parameters:
      module_wrapper:
        description: tests wrapper
        type: string
      module_target:
        description: SDK module target
        type: string
      variant:
        description: debug or release
        type: string
    steps:
      - run:
          name: Run instrumentation tests on internal SDK classes on Firebase
          no_output_timeout: 1200
          shell: /bin/bash -euo pipefail
          command: |
            gcloud firebase test android run --type instrumentation \
              --app << parameters.module_wrapper >>/build/outputs/apk/<< parameters.variant >>/<< parameters.module_wrapper >>-<< parameters.variant >>.apk \
              --test << parameters.module_target >>/build/outputs/apk/androidTest/<< parameters.variant >>/<< parameters.module_target >>-<< parameters.variant >>-androidTest.apk \
              --device model=hammerhead,version=23,locale=fr,orientation=portrait \
              --device model=star2lte,version=28,locale=de,orientation=landscape \
              --device model=flame,version=30,locale=en,orientation=portrait \
              --use-orchestrator \
              --timeout 10m

  run-firebase-instrumentation:
    parameters:
      variant:
        description: debug or release
        type: string
    steps:
      - run:
          name: Run instrumentation tests on public SDK classes on Firebase
          no_output_timeout: 1200
          shell: /bin/bash -euo pipefail
          command: |
            gcloud firebase test android run --type instrumentation \
              --app instrumentation-tests/build/outputs/apk/<< parameters.variant >>/instrumentation-tests-<< parameters.variant >>.apk \
              --test instrumentation-tests/build/outputs/apk/androidTest/<< parameters.variant >>/instrumentation-tests-<< parameters.variant >>-androidTest.apk \
              --device model=hammerhead,version=23,locale=fr,orientation=portrait \
              --device model=star2lte,version=28,locale=de,orientation=landscape \
              --device model=flame,version=30,locale=en,orientation=portrait \
              --use-orchestrator \
              --directories-to-pull=/sdcard/Download/mapbox_test \
              --timeout 15m

  run-firebase-robo:
    parameters:
      variant:
        description: debug or release
        type: string
      module_target:
        description: module target
        type: string
    steps:
      - run:
          name: Run robo tests on Firebase
          no_output_timeout: 10m
          command: |
            gcloud firebase test android run --type robo \
              --app << parameters.module_target >>/build/outputs/apk/<< parameters.variant >>/<< parameters.module_target >>-<< parameters.variant >>.apk \
              --device model=hammerhead,version=21,locale=es,orientation=portrait  \
              --device model=hammerhead,version=23,locale=fr,orientation=landscape \
              --device model=star2lte,version=28,locale=de,orientation=landscape \
              --device model=flame,version=30,locale=en,orientation=portrait \
              --timeout 5m

  publish-artifacts:
    parameters:
      artifact-type:
        description: core or ui
        type: string
    steps:
      - deploy:
          name: Upload Navigation SDK to SDK Registry
          command: |
            make << parameters.artifact-type >>-upload-to-sdk-registry

  check-public-documentation:
    steps:
      - run:
          name: Check public documentation
          command: ./scripts/dokka-validate.sh

  generate-documentation:
    steps:
      - run:
          name: Generate documentation
          command: make javadoc-dokka

  trigger-mobile-metrics:
    steps:
      - run:
          name: Track metrics of the Navigation SDK
          command: |
            pip3 install requests
            python3 scripts/trigger-mobile-metrics.py

  prepare-mbx-ci:
    steps:
      - run:
          name: Install mbx-ci
          command: |
            curl -Ls https://mapbox-release-engineering.s3.amazonaws.com/mbx-ci/latest/mbx-ci-linux-amd64 > mbx-ci && chmod 755 ./mbx-ci

  setup-aws-credentials:
    steps:
      - run:
          name: Obtain AWS credentials
          command: |
            ./mbx-ci aws setup

#--------------------------
#---------- JOBS ----------
#--------------------------
jobs:
  prepare-and-assemble:
    executor: ndk-r21e-latest-executor
    steps:
      - checkout
      - when:
          condition:
            not:
              matches:
                pattern: "^add-changelog.*"
                value: << pipeline.git.branch >>
          steps:
            - restore-gradle-cache
            - assemble-core-debug
            - assemble-ui-debug
            - assemble-core-release
            - assemble-ui-release
            - assemble-module:
                module_target: "instrumentation-tests"
                variant: "Debug"
                inject_token: true
            - assemble-instrumentation-test:
                module_target: "instrumentation-tests"
            - assemble-module:
                module_target: "app-tests-wrapper"
                variant: "Debug"
            - assemble-instrumentation-test:
                module_target: "libnavigation-core"
            - write-workspace

  unit-tests-core:
    executor: ndk-r21e-latest-executor
    steps:
      - when:
          condition:
            not:
              matches:
                pattern: "^add-changelog.*"
                value: << pipeline.git.branch >>
          steps:
            - read-workspace
            - unit-tests-core
      - run: exit 0

  unit-tests-ui:
    executor: ndk-r21e-latest-executor
    steps:
      - when:
          condition:
            not:
              matches:
                pattern: "^add-changelog.*"
                value: << pipeline.git.branch >>
          steps:
            - read-workspace
            - unit-tests-ui
      - run: exit 0
  # Disabling Codecov (for now) due to https://about.codecov.io/security-update/
  #      - codecov

  static-analysis:
    executor: ndk-r21e-latest-executor
    steps:
      - when:
          condition:
            not:
              matches:
                pattern: "^add-changelog.*"
                value: << pipeline.git.branch >>
          steps:
            - read-workspace
            - verify-codestyle
            - verify-license
            - verify-common-sdk-version
            - check-api-core
            - check-api-ui
            - check-public-documentation
      - run: exit 0

  publish-documentation:
    executor: ndk-r21e-latest-executor
    steps:
      - checkout
      - prepare-mbx-ci
      - run:
          name: Publish API docs Android
          command: |
            GITHUB_WRITER_TOKEN=$(./mbx-ci github writer token)
            git remote set-url origin "https://x-access-token:$GITHUB_WRITER_TOKEN@github.com/mapbox/mapbox-navigation-android"
            git config --global user.email no-reply@mapbox.com && git config --global user.name mapbox-ci
            ./scripts/publish_api_docs_android.sh -p $GITHUB_WRITER_TOKEN -t $CIRCLE_TAG

  changelog-verification:
    executor: ndk-r21e-latest-executor
    steps:
      - checkout
      - when:
          condition:
            not:
              matches:
                pattern: "^add-changelog.*"
                value: << pipeline.git.branch >>
          steps:
            - prepare-mbx-ci
            - verify-changelog

  ui-robo-tests:
    executor: ndk-r21e-latest-executor
    environment:
      JVM_OPTS: -Xmx3200m
      BUILDTYPE: Debug
      GRADLE_OPTS: -Xmx4096m -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process
    steps:
      - when:
          condition:
            not:
              matches:
                pattern: "^add-changelog.*"
                value: << pipeline.git.branch >>
          steps:
            - read-workspace
            - download-native-libs
            - generate-google-services-json
            - assemble-module:
                module_target: "examples"
                variant: "Release"
                inject_token: true
            - login-google-cloud-platform
            - upload-native-libs-to-crashlytics
            - run-firebase-robo:
                module_target: "examples"
                variant: "release"
      - run: exit 0

  internal-instrumentation-tests:
    executor: ndk-r21e-latest-executor
    environment:
      JVM_OPTS: -Xmx3200m
      BUILDTYPE: Debug
      GRADLE_OPTS: -Xmx4096m -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process
    steps:
      - when:
          condition:
            not:
              matches:
                pattern: "^add-changelog.*"
                value: << pipeline.git.branch >>
          steps:
            - read-workspace
            - login-google-cloud-platform
            - run-internal-firebase-instrumentation:
                module_target: "libnavigation-core"
                module_wrapper: "app-tests-wrapper"
                variant: "debug"
      - run: exit 0

  instrumentation-tests:
    executor: ndk-r21e-latest-executor
    environment:
      JVM_OPTS: -Xmx3200m
      BUILDTYPE: Debug
      GRADLE_OPTS: -Xmx4096m -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process
    steps:
      - when:
          condition:
            not:
              matches:
                pattern: "^add-changelog.*"
                value: << pipeline.git.branch >>
          steps:
            - read-workspace
            - login-google-cloud-platform
            - run-firebase-instrumentation:
                variant: "debug"
      - run: exit 0

  mobile-metrics-benchmarks:
    executor: ndk-r21e-latest-executor
    steps:
      - checkout
      - trigger-mobile-metrics

  release-snapshot:
    executor: ndk-r21e-latest-executor
    steps:
      - checkout
      - generate-version-name
      - assemble-core-release
      - assemble-ui-release
      - check-public-documentation
      - generate-documentation
      - prepare-mbx-ci
      - setup-aws-credentials
      - publish-artifacts:
          artifact-type: "core"
      - publish-artifacts:
          artifact-type: "ui"
      - trigger-mobile-metrics

  release:
    executor: ndk-r21e-latest-executor
    steps:
      - checkout
      - generate-version-name
      - assemble-core-release
      - assemble-ui-release
      - check-public-documentation
      - generate-documentation
      - prepare-mbx-ci
      - setup-aws-credentials
      - publish-artifacts:
          artifact-type: "core"
      - publish-artifacts:
          artifact-type: "ui"