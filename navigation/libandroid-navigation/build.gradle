apply plugin: 'com.android.library'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode rootProject.ext.versionCode
    versionName rootProject.ext.versionName
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    buildConfigField('String', "MAPBOX_NAVIGATION_VERSION_NAME", String.format("\"%s\"", project.VERSION_NAME))
    buildConfigField "String", "MAPBOX_NAVIGATION_EVENTS_USER_AGENT",
        String.format("\"mapbox-navigation-android/%s\"", project.VERSION_NAME)
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  configurations {
    javadocDeps
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }
}

dependencies {
  // Mapbox Android Services
  compile rootProject.ext.dep.mapboxServices

  // Logging
  compile rootProject.ext.dep.timber

  // AutoValues
  provided rootProject.ext.dep.autoValues
  annotationProcessor rootProject.ext.dep.autoValues

  // Unit testing
  testCompile rootProject.ext.dep.junit
  testCompile rootProject.ext.dep.mockito
  testCompile rootProject.ext.dep.hamcrest
  testCompile rootProject.ext.dep.commonsIO
  testCompile rootProject.ext.dep.robolectric

  // Instrument testing
  androidTestCompile(rootProject.ext.dep.testEspressoCore, {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
}

// The following is necessary to copy the fixtures into the resources folder,
// guaranteeing that the fixtures are looked for inside the right folders.
// (This is a known issue: https://issuetracker.google.com/issues/37020423.)
task copyResourcesToClassesDebug(type: Copy) {
  from "${projectDir}/src/test/res"
  into "${buildDir}/intermediates/classes/test/debug/res"
}

task copyResourcesToClassesRelease(type: Copy) {
  from "${projectDir}/src/test/res"
  into "${buildDir}/intermediates/classes/test/release/res"
}

tasks.whenTaskAdded { task ->
  if (task.name == "compileDebugUnitTestSources")
    task.dependsOn('copyResourcesToClassesDebug')
  if (task.name == "compileReleaseUnitTestSources")
    task.dependsOn('copyResourcesToClassesRelease')
}

apply from: 'javadoc.gradle'
apply from: '../mvn-push-android.gradle'
apply from: '../checkstyle.gradle'
