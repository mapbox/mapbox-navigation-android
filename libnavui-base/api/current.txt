// Signature format: 3.0
package com.mapbox.navigation.ui.base.formatter {

  public fun interface ValueFormatter<T, R> {
    method public R! format(T? update);
  }

}

package com.mapbox.navigation.ui.base.internal.model.route {

  public final class RouteConstants {
    method public int getALTERNATE_RESTRICTED_ROAD_COLOR();
    method public int getALTERNATE_ROUTE_CASING_COLOR();
    method public int getALTERNATE_ROUTE_DEFAULT_COLOR();
    method public int getALTERNATE_ROUTE_HEAVY_TRAFFIC_COLOR();
    method public int getALTERNATE_ROUTE_LOW_TRAFFIC_COLOR();
    method public int getALTERNATE_ROUTE_MODERATE_TRAFFIC_COLOR();
    method public int getALTERNATE_ROUTE_SEVERE_TRAFFIC_COLOR();
    method public int getALTERNATE_ROUTE_UNKNOWN_TRAFFIC_COLOR();
    method public int getALTERNATIVE_ROUTE_CLOSURE_COLOR();
    method public Double![] getARROW_HEAD_CASING_OFFSET();
    method public Double![] getARROW_HEAD_OFFSET();
    method public int getDESTINATION_WAYPOINT_ICON();
    method public kotlin.ranges.IntRange getHEAVY_CONGESTION_RANGE();
    method public int getIN_ACTIVE_ROUTE_LEG_COLOR();
    method public kotlin.ranges.IntRange getLOW_CONGESTION_RANGE();
    method public int getMANEUVER_ARROWHEAD_ICON_CASING_DRAWABLE();
    method public int getMANEUVER_ARROWHEAD_ICON_DRAWABLE();
    method public int getMANEUVER_ARROW_CASING_COLOR();
    method public int getMANEUVER_ARROW_COLOR();
    method public kotlin.ranges.IntRange getMODERATE_CONGESTION_RANGE();
    method public int getORIGIN_WAYPOINT_ICON();
    method public int getRESTRICTED_ROAD_COLOR();
    method public int getROUTE_CASING_COLOR();
    method public int getROUTE_CLOSURE_COLOR();
    method public int getROUTE_DEFAULT_COLOR();
    method public int getROUTE_HEAVY_TRAFFIC_COLOR();
    method public int getROUTE_LINE_TRAVELED_CASING_COLOR();
    method public int getROUTE_LINE_TRAVELED_COLOR();
    method public int getROUTE_LOW_TRAFFIC_COLOR();
    method public int getROUTE_MODERATE_TRAFFIC_COLOR();
    method public int getROUTE_SEVERE_TRAFFIC_COLOR();
    method public int getROUTE_UNKNOWN_TRAFFIC_COLOR();
    method public kotlin.ranges.IntRange getSEVERE_CONGESTION_RANGE();
    method public java.util.List<java.lang.String> getTRAFFIC_BACKFILL_ROAD_CLASSES();
    property public final int ALTERNATE_RESTRICTED_ROAD_COLOR;
    property public final int ALTERNATE_ROUTE_CASING_COLOR;
    property public final int ALTERNATE_ROUTE_DEFAULT_COLOR;
    property public final int ALTERNATE_ROUTE_HEAVY_TRAFFIC_COLOR;
    property public final int ALTERNATE_ROUTE_LOW_TRAFFIC_COLOR;
    property public final int ALTERNATE_ROUTE_MODERATE_TRAFFIC_COLOR;
    property public final int ALTERNATE_ROUTE_SEVERE_TRAFFIC_COLOR;
    property public final int ALTERNATE_ROUTE_UNKNOWN_TRAFFIC_COLOR;
    property public final int ALTERNATIVE_ROUTE_CLOSURE_COLOR;
    property public final Double![] ARROW_HEAD_CASING_OFFSET;
    property public final Double![] ARROW_HEAD_OFFSET;
    property public final int DESTINATION_WAYPOINT_ICON;
    property public final kotlin.ranges.IntRange HEAVY_CONGESTION_RANGE;
    property public final int IN_ACTIVE_ROUTE_LEG_COLOR;
    property public final kotlin.ranges.IntRange LOW_CONGESTION_RANGE;
    property public final int MANEUVER_ARROWHEAD_ICON_CASING_DRAWABLE;
    property public final int MANEUVER_ARROWHEAD_ICON_DRAWABLE;
    property public final int MANEUVER_ARROW_CASING_COLOR;
    property public final int MANEUVER_ARROW_COLOR;
    property public final kotlin.ranges.IntRange MODERATE_CONGESTION_RANGE;
    property public final int ORIGIN_WAYPOINT_ICON;
    property public final int RESTRICTED_ROAD_COLOR;
    property public final int ROUTE_CASING_COLOR;
    property public final int ROUTE_CLOSURE_COLOR;
    property public final int ROUTE_DEFAULT_COLOR;
    property public final int ROUTE_HEAVY_TRAFFIC_COLOR;
    property public final int ROUTE_LINE_TRAVELED_CASING_COLOR;
    property public final int ROUTE_LINE_TRAVELED_COLOR;
    property public final int ROUTE_LOW_TRAFFIC_COLOR;
    property public final int ROUTE_MODERATE_TRAFFIC_COLOR;
    property public final int ROUTE_SEVERE_TRAFFIC_COLOR;
    property public final int ROUTE_UNKNOWN_TRAFFIC_COLOR;
    property public final kotlin.ranges.IntRange SEVERE_CONGESTION_RANGE;
    property public final java.util.List<java.lang.String> TRAFFIC_BACKFILL_ROAD_CLASSES;
    field public static final String ALTERNATIVE_ROUTE1_SOURCE_ID = "mapbox-navigation-alt-route1-source";
    field public static final String ALTERNATIVE_ROUTE2_SOURCE_ID = "mapbox-navigation-alt-route2-source";
    field public static final String ARROW_BEARING = "mapbox-navigation-arrow-bearing";
    field public static final String ARROW_HEAD_ICON = "mapbox-navigation-arrow-head-icon";
    field public static final String ARROW_HEAD_ICON_CASING = "mapbox-navigation-arrow-head-icon-casing";
    field public static final String ARROW_HEAD_SOURCE_ID = "mapbox-navigation-arrow-head-source";
    field public static final double ARROW_HIDDEN_ZOOM_LEVEL = 14.0;
    field public static final String ARROW_SHAFT_SOURCE_ID = "mapbox-navigation-arrow-shaft-source";
    field public static final String CLOSURE_CONGESTION_VALUE = "closed";
    field public static final String DEFAULT_ROUTE_DESCRIPTOR_PLACEHOLDER = "mapboxDescriptorPlaceHolderUnused";
    field public static final double DEFAULT_ROUTE_SOURCES_TOLERANCE = 0.375;
    field public static final String DESTINATION_MARKER_NAME = "destinationMarker";
    field public static final String HEAVY_CONGESTION_VALUE = "heavy";
    field public static final com.mapbox.navigation.ui.base.internal.model.route.RouteConstants INSTANCE;
    field public static final String LOW_CONGESTION_VALUE = "low";
    field public static final double MAX_ARROW_ZOOM = 22.0;
    field public static final double MAX_DEGREES = 360.0;
    field public static final double MAX_ELAPSED_SINCE_INDEX_UPDATE_NANO = 1.5E9;
    field public static final double MAX_ZOOM_ARROW_HEAD_CASING_SCALE = 0.8;
    field public static final double MAX_ZOOM_ARROW_HEAD_SCALE = 0.8;
    field public static final double MAX_ZOOM_ARROW_SHAFT_CASING_SCALE = 17.0;
    field public static final double MAX_ZOOM_ARROW_SHAFT_SCALE = 13.0;
    field public static final double MIN_ARROW_ZOOM = 10.0;
    field public static final double MIN_ZOOM_ARROW_HEAD_CASING_SCALE = 0.2;
    field public static final double MIN_ZOOM_ARROW_HEAD_SCALE = 0.2;
    field public static final double MIN_ZOOM_ARROW_SHAFT_CASING_SCALE = 3.4;
    field public static final double MIN_ZOOM_ARROW_SHAFT_SCALE = 2.6;
    field public static final String MODERATE_CONGESTION_VALUE = "moderate";
    field public static final double OPAQUE = 0.0;
    field public static final String ORIGIN_MARKER_NAME = "originMarker";
    field public static final String PRIMARY_ROUTE_SOURCE_ID = "mapbox-navigation-route-source";
    field public static final String RESTRICTED_CONGESTION_VALUE = "restricted";
    field public static final double RESTRICTED_ROAD_SECTION_SCALE = 10.0;
    field public static final boolean ROUNDED_LINE_CAP = true;
    field public static final double ROUTE_LINE_UPDATE_MAX_DISTANCE_THRESHOLD_IN_METERS = 1.0;
    field public static final String SEVERE_CONGESTION_VALUE = "severe";
    field public static final double SOFT_GRADIENT_STOP_GAP_METERS = 30.0;
    field public static final int THIRTY = 30; // 0x1e
    field public static final double TRANSPARENT = 1.0;
    field public static final int TWO_POINTS = 2; // 0x2
    field public static final String UNKNOWN_CONGESTION_VALUE = "unknown";
    field public static final String WAYPOINT_DESTINATION_VALUE = "destination";
    field public static final String WAYPOINT_ORIGIN_VALUE = "origin";
    field public static final String WAYPOINT_PROPERTY_KEY = "wayPoint";
    field public static final String WAYPOINT_SOURCE_ID = "mapbox-navigation-waypoint-source";
  }

}

package com.mapbox.navigation.ui.base.model.route {

  public final class RouteLayerConstants {
    field public static final String ALTERNATIVE_ROUTE1_CASING_LAYER_ID = "mapbox-navigation-alt-route1-casing-layer";
    field public static final String ALTERNATIVE_ROUTE1_LAYER_ID = "mapbox-navigation-alt-route1-layer";
    field public static final String ALTERNATIVE_ROUTE1_TRAFFIC_LAYER_ID = "mapbox-navigation-alt-route1-traffic-layer";
    field public static final String ALTERNATIVE_ROUTE2_CASING_LAYER_ID = "mapbox-navigation-alt-route2-casing-layer";
    field public static final String ALTERNATIVE_ROUTE2_LAYER_ID = "mapbox-navigation-alt-route2-layer";
    field public static final String ALTERNATIVE_ROUTE2_TRAFFIC_LAYER_ID = "mapbox-navigation-alt-route2-traffic-layer";
    field public static final String ARROW_HEAD_CASING_LAYER_ID = "mapbox-navigation-arrow-head-casing-layer";
    field public static final String ARROW_HEAD_LAYER_ID = "mapbox-navigation-arrow-head-layer";
    field public static final String ARROW_SHAFT_CASING_LINE_LAYER_ID = "mapbox-navigation-arrow-shaft-casing-layer";
    field public static final String ARROW_SHAFT_LINE_LAYER_ID = "mapbox-navigation-arrow-shaft-layer";
    field public static final com.mapbox.navigation.ui.base.model.route.RouteLayerConstants INSTANCE;
    field public static final String PRIMARY_ROUTE_CASING_LAYER_ID = "mapbox-navigation-route-casing-layer";
    field public static final String PRIMARY_ROUTE_LAYER_ID = "mapbox-navigation-route-layer";
    field public static final String PRIMARY_ROUTE_TRAFFIC_LAYER_ID = "mapbox-navigation-route-traffic-layer";
    field public static final String RESTRICTED_ROAD_LAYER_ID = "mapbox-restricted-road-layer";
    field public static final String WAYPOINT_LAYER_ID = "mapbox-navigation-waypoint-layer";
  }

}

package com.mapbox.navigation.ui.base.util {

  public fun interface MapboxNavigationConsumer<T> {
    method public void accept(T? value);
  }

}

