// Signature format: 3.0
package com.mapbox.navigation.ui.maneuver {

  public final class RoadShieldContentManagerKt {
  }

}

package com.mapbox.navigation.ui.maneuver.api {

  public fun interface ManeuverCallback {
    method public void onManeuvers(com.mapbox.bindgen.Expected<com.mapbox.navigation.ui.maneuver.model.ManeuverError,java.util.List<com.mapbox.navigation.ui.maneuver.model.Maneuver>> maneuvers);
  }

  public final class MapboxManeuverApi {
    ctor public MapboxManeuverApi(com.mapbox.navigation.base.formatter.DistanceFormatter formatter, com.mapbox.navigation.ui.maneuver.model.ManeuverOptions maneuverOptions = ManeuverOptions.<init>().build());
    ctor public MapboxManeuverApi(com.mapbox.navigation.base.formatter.DistanceFormatter formatter);
    method public void cancel();
    method public void getManeuvers(com.mapbox.api.directions.v5.models.DirectionsRoute route, com.mapbox.navigation.ui.maneuver.api.ManeuverCallback callback, Integer? routeLegIndex = null);
    method public void getManeuvers(com.mapbox.api.directions.v5.models.DirectionsRoute route, com.mapbox.navigation.ui.maneuver.api.ManeuverCallback callback);
    method public void getManeuvers(com.mapbox.navigation.base.trip.model.RouteProgress routeProgress, com.mapbox.navigation.ui.maneuver.api.ManeuverCallback callback);
    method public void getRoadShields(java.util.List<com.mapbox.navigation.ui.maneuver.model.Maneuver> maneuvers, com.mapbox.navigation.ui.maneuver.api.RoadShieldCallback callback);
  }

  public fun interface RoadShieldCallback {
    method public void onRoadShields(java.util.List<com.mapbox.navigation.ui.maneuver.model.Maneuver> maneuvers, java.util.Map<java.lang.String,com.mapbox.navigation.ui.maneuver.model.RoadShield> shields, java.util.Map<java.lang.String,com.mapbox.navigation.ui.maneuver.model.RoadShieldError> errors);
  }

}

package com.mapbox.navigation.ui.maneuver.model {

  public final class Component {
    ctor public Component(String type, com.mapbox.navigation.ui.maneuver.model.ComponentNode node);
    method public String component1();
    method public com.mapbox.navigation.ui.maneuver.model.ComponentNode component2();
    method public com.mapbox.navigation.ui.maneuver.model.Component copy(String type, com.mapbox.navigation.ui.maneuver.model.ComponentNode node);
    method public com.mapbox.navigation.ui.maneuver.model.ComponentNode getNode();
    method public String getType();
    property public final com.mapbox.navigation.ui.maneuver.model.ComponentNode node;
    property public final String type;
  }

  public interface ComponentNode {
  }

  public final class DelimiterComponentNode implements com.mapbox.navigation.ui.maneuver.model.ComponentNode {
    method public String getText();
    method public com.mapbox.navigation.ui.maneuver.model.DelimiterComponentNode.Builder toBuilder();
    property public final String text;
  }

  public static final class DelimiterComponentNode.Builder {
    ctor public DelimiterComponentNode.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.DelimiterComponentNode build();
    method public com.mapbox.navigation.ui.maneuver.model.DelimiterComponentNode.Builder text(String text);
  }

  public final class ExitComponentNode implements com.mapbox.navigation.ui.maneuver.model.ComponentNode {
    method public String getText();
    method public com.mapbox.navigation.ui.maneuver.model.ExitComponentNode.Builder toBuilder();
    property public final String text;
  }

  public static final class ExitComponentNode.Builder {
    ctor public ExitComponentNode.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.ExitComponentNode build();
    method public com.mapbox.navigation.ui.maneuver.model.ExitComponentNode.Builder text(String text);
  }

  public final class ExitNumberComponentNode implements com.mapbox.navigation.ui.maneuver.model.ComponentNode {
    method public String getText();
    method public com.mapbox.navigation.ui.maneuver.model.ExitNumberComponentNode.Builder toBuilder();
    property public final String text;
  }

  public static final class ExitNumberComponentNode.Builder {
    ctor public ExitNumberComponentNode.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.ExitNumberComponentNode build();
    method public com.mapbox.navigation.ui.maneuver.model.ExitNumberComponentNode.Builder text(String text);
  }

  public final class Lane {
    method public String? getActiveDirection();
    method public java.util.List<com.mapbox.navigation.ui.maneuver.model.LaneIndicator> getAllLanes();
    method public com.mapbox.navigation.ui.maneuver.model.Lane.Builder toBuilder();
    property public final String? activeDirection;
    property public final java.util.List<com.mapbox.navigation.ui.maneuver.model.LaneIndicator> allLanes;
  }

  public static final class Lane.Builder {
    ctor public Lane.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.Lane.Builder activeDirection(String? activeDirection);
    method public com.mapbox.navigation.ui.maneuver.model.Lane.Builder allLanes(java.util.List<com.mapbox.navigation.ui.maneuver.model.LaneIndicator> allLanes);
    method public com.mapbox.navigation.ui.maneuver.model.Lane build();
  }

  public final class LaneIndicator {
    method public java.util.List<java.lang.String> getDirections();
    method public boolean isActive();
    method public com.mapbox.navigation.ui.maneuver.model.LaneIndicator.Builder toBuilder();
    property public final java.util.List<java.lang.String> directions;
    property public final boolean isActive;
  }

  public static final class LaneIndicator.Builder {
    ctor public LaneIndicator.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.LaneIndicator build();
    method public com.mapbox.navigation.ui.maneuver.model.LaneIndicator.Builder directions(java.util.List<java.lang.String> directions);
    method public com.mapbox.navigation.ui.maneuver.model.LaneIndicator.Builder isActive(boolean isActive);
  }

  public final class Maneuver {
    method public com.mapbox.navigation.ui.maneuver.model.Lane? getLaneGuidance();
    method public com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver getPrimary();
    method public com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver? getSecondary();
    method public com.mapbox.navigation.ui.maneuver.model.StepDistance getStepDistance();
    method public com.mapbox.navigation.ui.maneuver.model.SubManeuver? getSub();
    property public final com.mapbox.navigation.ui.maneuver.model.Lane? laneGuidance;
    property public final com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver primary;
    property public final com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver? secondary;
    property public final com.mapbox.navigation.ui.maneuver.model.StepDistance stepDistance;
    property public final com.mapbox.navigation.ui.maneuver.model.SubManeuver? sub;
  }

  public final class ManeuverError {
    method public String? getErrorMessage();
    method public Throwable? getThrowable();
    property public final String? errorMessage;
    property public final Throwable? throwable;
  }

  public final class ManeuverOptions {
    method public boolean getFilterDuplicateManeuvers();
    method public com.mapbox.navigation.ui.maneuver.model.ManeuverOptions.Builder toBuilder();
    property public final boolean filterDuplicateManeuvers;
  }

  public static final class ManeuverOptions.Builder {
    ctor public ManeuverOptions.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.ManeuverOptions build();
    method public com.mapbox.navigation.ui.maneuver.model.ManeuverOptions.Builder filterDuplicateManeuvers(boolean filterDuplicateManeuvers);
  }

  public final class PrimaryManeuver {
    method public java.util.List<com.mapbox.navigation.ui.maneuver.model.Component> getComponentList();
    method public Double? getDegrees();
    method public String? getDrivingSide();
    method public String getId();
    method public String? getModifier();
    method public String getText();
    method public String? getType();
    method public com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver.Builder toBuilder();
    property public final java.util.List<com.mapbox.navigation.ui.maneuver.model.Component> componentList;
    property public final Double? degrees;
    property public final String? drivingSide;
    property public final String id;
    property public final String? modifier;
    property public final String text;
    property public final String? type;
  }

  public static final class PrimaryManeuver.Builder {
    ctor public PrimaryManeuver.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver build();
    method public com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver.Builder componentList(java.util.List<com.mapbox.navigation.ui.maneuver.model.Component> componentList);
    method public com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver.Builder degrees(Double? degrees);
    method public com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver.Builder drivingSide(String? drivingSide);
    method public com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver.Builder id(String id);
    method public com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver.Builder modifier(String? modifier);
    method public com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver.Builder text(String text);
    method public com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver.Builder type(String? type);
  }

  public final class RoadShield {
    ctor public RoadShield(String shieldUrl, byte[] shieldIcon);
    method public String component1();
    method public byte[] component2();
    method public com.mapbox.navigation.ui.maneuver.model.RoadShield copy(String shieldUrl, byte[] shieldIcon);
    method public byte[] getShieldIcon();
    method public String getShieldUrl();
    method public void setShieldIcon(byte[] p);
    property public final byte[] shieldIcon;
    property public final String shieldUrl;
  }

  public final class RoadShieldComponentNode implements com.mapbox.navigation.ui.maneuver.model.ComponentNode {
    method public String? getShieldUrl();
    method public String getText();
    method public com.mapbox.navigation.ui.maneuver.model.RoadShieldComponentNode.Builder toBuilder();
    property public final String? shieldUrl;
    property public final String text;
  }

  public static final class RoadShieldComponentNode.Builder {
    ctor public RoadShieldComponentNode.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.RoadShieldComponentNode build();
    method public com.mapbox.navigation.ui.maneuver.model.RoadShieldComponentNode.Builder shieldUrl(String? shieldUrl);
    method public com.mapbox.navigation.ui.maneuver.model.RoadShieldComponentNode.Builder text(String text);
  }

  public final class RoadShieldError {
    method public String component1();
    method public String component2();
    method public com.mapbox.navigation.ui.maneuver.model.RoadShieldError copy(String url, String message);
    method public String getMessage();
    method public String getUrl();
    property public final String message;
    property public final String url;
  }

  public final class SecondaryManeuver {
    method public java.util.List<com.mapbox.navigation.ui.maneuver.model.Component> getComponentList();
    method public Double? getDegrees();
    method public String? getDrivingSide();
    method public String getId();
    method public String? getModifier();
    method public String getText();
    method public String? getType();
    method public com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver.Builder toBuilder();
    property public final java.util.List<com.mapbox.navigation.ui.maneuver.model.Component> componentList;
    property public final Double? degrees;
    property public final String? drivingSide;
    property public final String id;
    property public final String? modifier;
    property public final String text;
    property public final String? type;
  }

  public static final class SecondaryManeuver.Builder {
    ctor public SecondaryManeuver.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver build();
    method public com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver.Builder componentList(java.util.List<com.mapbox.navigation.ui.maneuver.model.Component> componentList);
    method public com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver.Builder degrees(Double? degrees);
    method public com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver.Builder drivingSide(String? drivingSide);
    method public com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver.Builder id(String id);
    method public com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver.Builder modifier(String? modifier);
    method public com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver.Builder text(String text);
    method public com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver.Builder type(String? type);
  }

  public final class StepDistance {
    method public com.mapbox.navigation.base.formatter.DistanceFormatter getDistanceFormatter();
    method public Double? getDistanceRemaining();
    method public double getTotalDistance();
    method public void setDistanceRemaining(Double? p);
    property public final com.mapbox.navigation.base.formatter.DistanceFormatter distanceFormatter;
    property public final Double? distanceRemaining;
    property public final double totalDistance;
  }

  public final class SubManeuver {
    method public java.util.List<com.mapbox.navigation.ui.maneuver.model.Component> getComponentList();
    method public Double? getDegrees();
    method public String? getDrivingSide();
    method public String getId();
    method public String? getModifier();
    method public String getText();
    method public String? getType();
    method public com.mapbox.navigation.ui.maneuver.model.SubManeuver.Builder toBuilder();
    property public final java.util.List<com.mapbox.navigation.ui.maneuver.model.Component> componentList;
    property public final Double? degrees;
    property public final String? drivingSide;
    property public final String id;
    property public final String? modifier;
    property public final String text;
    property public final String? type;
  }

  public static final class SubManeuver.Builder {
    ctor public SubManeuver.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.SubManeuver build();
    method public com.mapbox.navigation.ui.maneuver.model.SubManeuver.Builder componentList(java.util.List<com.mapbox.navigation.ui.maneuver.model.Component> componentList);
    method public com.mapbox.navigation.ui.maneuver.model.SubManeuver.Builder degrees(Double? degrees);
    method public com.mapbox.navigation.ui.maneuver.model.SubManeuver.Builder drivingSide(String? drivingSide);
    method public com.mapbox.navigation.ui.maneuver.model.SubManeuver.Builder id(String id);
    method public com.mapbox.navigation.ui.maneuver.model.SubManeuver.Builder modifier(String? modifier);
    method public com.mapbox.navigation.ui.maneuver.model.SubManeuver.Builder text(String text);
    method public com.mapbox.navigation.ui.maneuver.model.SubManeuver.Builder type(String? type);
  }

  public final class TextComponentNode implements com.mapbox.navigation.ui.maneuver.model.ComponentNode {
    method public String? getAbbr();
    method public Integer? getAbbrPriority();
    method public String getText();
    method public com.mapbox.navigation.ui.maneuver.model.TextComponentNode.Builder toBuilder();
    property public final String? abbr;
    property public final Integer? abbrPriority;
    property public final String text;
  }

  public static final class TextComponentNode.Builder {
    ctor public TextComponentNode.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.TextComponentNode.Builder abbr(String? abbr);
    method public com.mapbox.navigation.ui.maneuver.model.TextComponentNode.Builder abbrPriority(Integer? abbrPriority);
    method public com.mapbox.navigation.ui.maneuver.model.TextComponentNode build();
    method public com.mapbox.navigation.ui.maneuver.model.TextComponentNode.Builder text(String text);
  }

  public final class TurnIconResources {
    method public int getTurnIconArrive();
    method public int getTurnIconArriveLeft();
    method public int getTurnIconArriveRight();
    method public int getTurnIconArriveStraight();
    method public int getTurnIconContinue();
    method public int getTurnIconContinueLeft();
    method public int getTurnIconContinueRight();
    method public int getTurnIconContinueSlightLeft();
    method public int getTurnIconContinueSlightRight();
    method public int getTurnIconContinueStraight();
    method public int getTurnIconContinueUturn();
    method public int getTurnIconDepart();
    method public int getTurnIconDepartLeft();
    method public int getTurnIconDepartRight();
    method public int getTurnIconDepartStraight();
    method public int getTurnIconEndRoadLeft();
    method public int getTurnIconEndRoadRight();
    method public int getTurnIconFork();
    method public int getTurnIconForkLeft();
    method public int getTurnIconForkRight();
    method public int getTurnIconForkSlightLeft();
    method public int getTurnIconForkSlightRight();
    method public int getTurnIconForkStraight();
    method public int getTurnIconInvalid();
    method public int getTurnIconInvalidLeft();
    method public int getTurnIconInvalidRight();
    method public int getTurnIconInvalidSlightLeft();
    method public int getTurnIconInvalidSlightRight();
    method public int getTurnIconInvalidStraight();
    method public int getTurnIconInvalidUturn();
    method public int getTurnIconMergeLeft();
    method public int getTurnIconMergeRight();
    method public int getTurnIconMergeSlightLeft();
    method public int getTurnIconMergeSlightRight();
    method public int getTurnIconMergeStraight();
    method public int getTurnIconNewNameLeft();
    method public int getTurnIconNewNameRight();
    method public int getTurnIconNewNameSharpLeft();
    method public int getTurnIconNewNameSharpRight();
    method public int getTurnIconNewNameSlightLeft();
    method public int getTurnIconNewNameSlightRight();
    method public int getTurnIconNewNameStraight();
    method public int getTurnIconNotificationLeft();
    method public int getTurnIconNotificationRight();
    method public int getTurnIconNotificationSharpLeft();
    method public int getTurnIconNotificationSharpRight();
    method public int getTurnIconNotificationSlightLeft();
    method public int getTurnIconNotificationSlightRight();
    method public int getTurnIconNotificationStraight();
    method public int getTurnIconOffRamp();
    method public int getTurnIconOffRampLeft();
    method public int getTurnIconOffRampRight();
    method public int getTurnIconOffRampSlightLeft();
    method public int getTurnIconOffRampSlightRight();
    method public int getTurnIconOnRamp();
    method public int getTurnIconOnRampLeft();
    method public int getTurnIconOnRampRight();
    method public int getTurnIconOnRampSharpLeft();
    method public int getTurnIconOnRampSharpRight();
    method public int getTurnIconOnRampSlightLeft();
    method public int getTurnIconOnRampSlightRight();
    method public int getTurnIconOnRampStraight();
    method public int getTurnIconRamp();
    method public int getTurnIconRotary();
    method public int getTurnIconRotaryLeft();
    method public int getTurnIconRotaryRight();
    method public int getTurnIconRotarySharpLeft();
    method public int getTurnIconRotarySharpRight();
    method public int getTurnIconRotarySlightLeft();
    method public int getTurnIconRotarySlightRight();
    method public int getTurnIconRotaryStraight();
    method public int getTurnIconRoundabout();
    method public int getTurnIconRoundaboutLeft();
    method public int getTurnIconRoundaboutRight();
    method public int getTurnIconRoundaboutSharpLeft();
    method public int getTurnIconRoundaboutSharpRight();
    method public int getTurnIconRoundaboutSlightLeft();
    method public int getTurnIconRoundaboutSlightRight();
    method public int getTurnIconRoundaboutStraight();
    method public int getTurnIconTurnLeft();
    method public int getTurnIconTurnRight();
    method public int getTurnIconTurnSharpLeft();
    method public int getTurnIconTurnSharpRight();
    method public int getTurnIconTurnSlightLeft();
    method public int getTurnIconTurnSlightRight();
    method public int getTurnIconTurnStraight();
    method public int getTurnIconUturn();
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder toBuilder();
    property public final int turnIconArrive;
    property public final int turnIconArriveLeft;
    property public final int turnIconArriveRight;
    property public final int turnIconArriveStraight;
    property public final int turnIconContinue;
    property public final int turnIconContinueLeft;
    property public final int turnIconContinueRight;
    property public final int turnIconContinueSlightLeft;
    property public final int turnIconContinueSlightRight;
    property public final int turnIconContinueStraight;
    property public final int turnIconContinueUturn;
    property public final int turnIconDepart;
    property public final int turnIconDepartLeft;
    property public final int turnIconDepartRight;
    property public final int turnIconDepartStraight;
    property public final int turnIconEndRoadLeft;
    property public final int turnIconEndRoadRight;
    property public final int turnIconFork;
    property public final int turnIconForkLeft;
    property public final int turnIconForkRight;
    property public final int turnIconForkSlightLeft;
    property public final int turnIconForkSlightRight;
    property public final int turnIconForkStraight;
    property public final int turnIconInvalid;
    property public final int turnIconInvalidLeft;
    property public final int turnIconInvalidRight;
    property public final int turnIconInvalidSlightLeft;
    property public final int turnIconInvalidSlightRight;
    property public final int turnIconInvalidStraight;
    property public final int turnIconInvalidUturn;
    property public final int turnIconMergeLeft;
    property public final int turnIconMergeRight;
    property public final int turnIconMergeSlightLeft;
    property public final int turnIconMergeSlightRight;
    property public final int turnIconMergeStraight;
    property public final int turnIconNewNameLeft;
    property public final int turnIconNewNameRight;
    property public final int turnIconNewNameSharpLeft;
    property public final int turnIconNewNameSharpRight;
    property public final int turnIconNewNameSlightLeft;
    property public final int turnIconNewNameSlightRight;
    property public final int turnIconNewNameStraight;
    property public final int turnIconNotificationLeft;
    property public final int turnIconNotificationRight;
    property public final int turnIconNotificationSharpLeft;
    property public final int turnIconNotificationSharpRight;
    property public final int turnIconNotificationSlightLeft;
    property public final int turnIconNotificationSlightRight;
    property public final int turnIconNotificationStraight;
    property public final int turnIconOffRamp;
    property public final int turnIconOffRampLeft;
    property public final int turnIconOffRampRight;
    property public final int turnIconOffRampSlightLeft;
    property public final int turnIconOffRampSlightRight;
    property public final int turnIconOnRamp;
    property public final int turnIconOnRampLeft;
    property public final int turnIconOnRampRight;
    property public final int turnIconOnRampSharpLeft;
    property public final int turnIconOnRampSharpRight;
    property public final int turnIconOnRampSlightLeft;
    property public final int turnIconOnRampSlightRight;
    property public final int turnIconOnRampStraight;
    property public final int turnIconRamp;
    property public final int turnIconRotary;
    property public final int turnIconRotaryLeft;
    property public final int turnIconRotaryRight;
    property public final int turnIconRotarySharpLeft;
    property public final int turnIconRotarySharpRight;
    property public final int turnIconRotarySlightLeft;
    property public final int turnIconRotarySlightRight;
    property public final int turnIconRotaryStraight;
    property public final int turnIconRoundabout;
    property public final int turnIconRoundaboutLeft;
    property public final int turnIconRoundaboutRight;
    property public final int turnIconRoundaboutSharpLeft;
    property public final int turnIconRoundaboutSharpRight;
    property public final int turnIconRoundaboutSlightLeft;
    property public final int turnIconRoundaboutSlightRight;
    property public final int turnIconRoundaboutStraight;
    property public final int turnIconTurnLeft;
    property public final int turnIconTurnRight;
    property public final int turnIconTurnSharpLeft;
    property public final int turnIconTurnSharpRight;
    property public final int turnIconTurnSlightLeft;
    property public final int turnIconTurnSlightRight;
    property public final int turnIconTurnStraight;
    property public final int turnIconUturn;
  }

  public static final class TurnIconResources.Builder {
    ctor public TurnIconResources.Builder();
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources build();
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconArrive(@DrawableRes int turnIconArrive);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconArriveLeft(@DrawableRes int turnIconArriveLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconArriveRight(@DrawableRes int turnIconArriveRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconArriveStraight(@DrawableRes int turnIconArriveStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconContinue(@DrawableRes int turnIconContinue);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconContinueLeft(@DrawableRes int turnIconContinueLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconContinueRight(@DrawableRes int turnIconContinueRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconContinueSlightLeft(@DrawableRes int turnIconContinueSlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconContinueSlightRight(@DrawableRes int turnIconContinueSlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconContinueStraight(@DrawableRes int turnIconContinueStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconContinueUturn(@DrawableRes int turnIconContinueUturn);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconDepart(@DrawableRes int turnIconDepart);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconDepartLeft(@DrawableRes int turnIconDepartLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconDepartRight(@DrawableRes int turnIconDepartRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconDepartStraight(@DrawableRes int turnIconDepartStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconEndRoadLeft(@DrawableRes int turnIconEndRoadLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconEndRoadRight(@DrawableRes int turnIconEndRoadRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconFork(@DrawableRes int turnIconFork);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconForkLeft(@DrawableRes int turnIconForkLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconForkRight(@DrawableRes int turnIconForkRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconForkSlightLeft(@DrawableRes int turnIconForkSlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconForkSlightRight(@DrawableRes int turnIconForkSlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconForkStraight(@DrawableRes int turnIconForkStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconInvalid(@DrawableRes int turnIconInvalid);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconInvalidLeft(@DrawableRes int turnIconInvalidLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconInvalidRight(@DrawableRes int turnIconInvalidRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconInvalidSlightLeft(@DrawableRes int turnIconInvalidSlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconInvalidSlightRight(@DrawableRes int turnIconInvalidSlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconInvalidStraight(@DrawableRes int turnIconInvalidStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconInvalidUturn(@DrawableRes int turnIconInvalidUturn);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconMergeLeft(@DrawableRes int turnIconMergeLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconMergeRight(@DrawableRes int turnIconMergeRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconMergeSlightLeft(@DrawableRes int turnIconMergeSlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconMergeSlightRight(@DrawableRes int turnIconMergeSlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconMergeStraight(@DrawableRes int turnIconMergeStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNewNameLeft(@DrawableRes int turnIconNewNameLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNewNameRight(@DrawableRes int turnIconNewNameRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNewNameSharpLeft(@DrawableRes int turnIconNewNameSharpLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNewNameSharpRight(@DrawableRes int turnIconNewNameSharpRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNewNameSlightLeft(@DrawableRes int turnIconNewNameSlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNewNameSlightRight(@DrawableRes int turnIconNewNameSlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNewNameStraight(@DrawableRes int turnIconNewNameStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNotificationLeft(@DrawableRes int turnIconNotificationLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNotificationRight(@DrawableRes int turnIconNotificationRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNotificationSharpLeft(@DrawableRes int turnIconNotificationSharpLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNotificationSharpRight(@DrawableRes int turnIconNotificationSharpRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNotificationSlightLeft(@DrawableRes int turnIconNotificationSlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNotificationSlightRight(@DrawableRes int turnIconNotificationSlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconNotificationStraight(@DrawableRes int turnIconNotificationStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOffRamp(@DrawableRes int turnIconOffRamp);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOffRampLeft(@DrawableRes int turnIconOffRampLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOffRampRight(@DrawableRes int turnIconOffRampRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOffRampSlightLeft(@DrawableRes int turnIconOffRampSlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOffRampSlightRight(@DrawableRes int turnIconOffRampSlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOnRamp(@DrawableRes int turnIconOnRamp);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOnRampLeft(@DrawableRes int turnIconOnRampLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOnRampRight(@DrawableRes int turnIconOnRampRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOnRampSharpLeft(@DrawableRes int turnIconOnRampSharpLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOnRampSharpRight(@DrawableRes int turnIconOnRampSharpRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOnRampSlightLeft(@DrawableRes int turnIconOnRampSlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOnRampSlightRight(@DrawableRes int turnIconOnRampSlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconOnRampStraight(@DrawableRes int turnIconOnRampStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRamp(@DrawableRes int turnIconRamp);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRotary(@DrawableRes int turnIconRotary);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRotaryLeft(@DrawableRes int turnIconRotaryLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRotaryRight(@DrawableRes int turnIconRotaryRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRotarySharpLeft(@DrawableRes int turnIconRotarySharpLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRotarySharpRight(@DrawableRes int turnIconRotarySharpRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRotarySlightLeft(@DrawableRes int turnIconRotarySlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRotarySlightRight(@DrawableRes int turnIconRotarySlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRotaryStraight(@DrawableRes int turnIconRotaryStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRoundabout(@DrawableRes int turnIconRoundabout);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRoundaboutLeft(@DrawableRes int turnIconRoundaboutLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRoundaboutRight(@DrawableRes int turnIconRoundaboutRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRoundaboutSharpLeft(@DrawableRes int turnIconRoundaboutSharpLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRoundaboutSharpRight(@DrawableRes int turnIconRoundaboutSharpRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRoundaboutSlightLeft(@DrawableRes int turnIconRoundaboutSlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRoundaboutSlightRight(@DrawableRes int turnIconRoundaboutSlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconRoundaboutStraight(@DrawableRes int turnIconRoundaboutStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconTurnLeft(@DrawableRes int turnIconTurnLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconTurnRight(@DrawableRes int turnIconTurnRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconTurnSharpLeft(@DrawableRes int turnIconTurnSharpLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconTurnSharpRight(@DrawableRes int turnIconTurnSharpRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconTurnSlightLeft(@DrawableRes int turnIconTurnSlightLeft);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconTurnSlightRight(@DrawableRes int turnIconTurnSlightRight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconTurnStraight(@DrawableRes int turnIconTurnStraight);
    method public com.mapbox.navigation.ui.maneuver.model.TurnIconResources.Builder turnIconUturn(@DrawableRes int turnIconUturn);
  }

}

package com.mapbox.navigation.ui.maneuver.view {

  public final class MapboxExitText extends androidx.appcompat.widget.AppCompatTextView {
    ctor public MapboxExitText(android.content.Context context);
    ctor public MapboxExitText(android.content.Context context, android.util.AttributeSet? attrs);
    ctor public MapboxExitText(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr);
    method public android.graphics.Bitmap getViewAsBitmap();
    method public void setExit(String? modifier, com.mapbox.navigation.ui.maneuver.model.ExitNumberComponentNode exit);
    method public void setExitStyle(android.graphics.drawable.Drawable? background, android.graphics.drawable.Drawable? leftDrawable, android.graphics.drawable.Drawable? rightDrawable);
    method public android.graphics.drawable.Drawable styleExitWith(android.graphics.Bitmap bitmap, int drawableHeight);
  }

  public final class MapboxLaneGuidance extends androidx.appcompat.widget.AppCompatImageView {
    ctor public MapboxLaneGuidance(android.content.Context context, android.util.AttributeSet? attrs = null, int defStyleAttr = 0);
    ctor public MapboxLaneGuidance(android.content.Context context, android.util.AttributeSet? attrs = null);
    ctor public MapboxLaneGuidance(android.content.Context context);
    method public void renderLane(com.mapbox.navigation.ui.maneuver.model.LaneIndicator laneIndicator, String? activeDirection, androidx.appcompat.view.ContextThemeWrapper wrapper);
  }

  public final class MapboxLaneGuidanceAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.mapbox.navigation.ui.maneuver.view.MapboxLaneGuidanceAdapter.MapboxLaneGuidanceViewHolder> {
    ctor public MapboxLaneGuidanceAdapter(android.content.Context context);
    method public void addLanes(java.util.List<com.mapbox.navigation.ui.maneuver.model.LaneIndicator> laneIndicatorList, String? activeDirection);
    method public int getItemCount();
    method public void onBindViewHolder(com.mapbox.navigation.ui.maneuver.view.MapboxLaneGuidanceAdapter.MapboxLaneGuidanceViewHolder holder, int position);
    method public com.mapbox.navigation.ui.maneuver.view.MapboxLaneGuidanceAdapter.MapboxLaneGuidanceViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType);
    method public void removeLanes();
    method public void updateStyle(@StyleRes int style);
  }

  public final class MapboxLaneGuidanceAdapter.MapboxLaneGuidanceViewHolder extends androidx.recyclerview.widget.RecyclerView.ViewHolder {
    ctor public MapboxLaneGuidanceAdapter.MapboxLaneGuidanceViewHolder(error.NonExistentClass viewBinding);
    method public void bindLaneIndicator(com.mapbox.navigation.ui.maneuver.model.LaneIndicator laneIndicator);
  }

  public final class MapboxManeuverView extends androidx.constraintlayout.widget.ConstraintLayout {
    ctor public MapboxManeuverView(android.content.Context context);
    ctor public MapboxManeuverView(android.content.Context context, android.util.AttributeSet? attrs);
    ctor public MapboxManeuverView(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr);
    method public boolean getUpcomingManeuverRenderingEnabled();
    method public void renderAddLanes(com.mapbox.navigation.ui.maneuver.model.Lane lane);
    method public void renderDistanceRemaining(com.mapbox.navigation.ui.maneuver.model.StepDistance stepDistance);
    method public void renderManeuverShields(java.util.Map<java.lang.String,com.mapbox.navigation.ui.maneuver.model.RoadShield> shieldMap);
    method public void renderManeuvers(com.mapbox.bindgen.Expected<com.mapbox.navigation.ui.maneuver.model.ManeuverError,java.util.List<com.mapbox.navigation.ui.maneuver.model.Maneuver>> maneuvers);
    method public void renderPrimaryManeuver(com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver primary, com.mapbox.navigation.ui.maneuver.model.RoadShield? roadShield = null);
    method public void renderPrimaryManeuver(com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver primary);
    method public void renderRemoveLanes();
    method public void renderSecondaryManeuver(com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver? secondary, com.mapbox.navigation.ui.maneuver.model.RoadShield? roadShield = null);
    method public void renderSecondaryManeuver(com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver? secondary);
    method public void renderSubManeuver(com.mapbox.navigation.ui.maneuver.model.SubManeuver? sub, com.mapbox.navigation.ui.maneuver.model.RoadShield? roadShield = null);
    method public void renderSubManeuver(com.mapbox.navigation.ui.maneuver.model.SubManeuver? sub);
    method public void setUpcomingManeuverRenderingEnabled(boolean value);
    method public void updatePrimaryManeuverTextAppearance(@StyleRes int style);
    method public void updatePrimaryManeuverTextVisibility(int visibility);
    method public void updateSecondaryManeuverTextAppearance(@StyleRes int style);
    method public void updateSecondaryManeuverVisibility(int visibility);
    method public void updateStepDistanceTextAppearance(@StyleRes int style);
    method public void updateStyle(@StyleRes int style);
    method public void updateSubManeuverTextAppearance(@StyleRes int style);
    method public void updateSubManeuverViewVisibility(int visibility);
    method public void updateTurnIconResources(com.mapbox.navigation.ui.maneuver.model.TurnIconResources turnIconResources);
    method public void updateTurnIconStyle(@StyleRes int style);
    method public void updateUpcomingManeuverStepDistanceTextAppearance(@StyleRes int style);
    method public void updateUpcomingManeuversVisibility(int visibility);
    method public void updateUpcomingPrimaryManeuverTextAppearance(@StyleRes int style);
    method public void updateUpcomingSecondaryManeuverTextAppearance(@StyleRes int style);
    property public final boolean upcomingManeuverRenderingEnabled;
  }

  public final class MapboxPrimaryManeuver extends androidx.appcompat.widget.AppCompatTextView {
    ctor public MapboxPrimaryManeuver(android.content.Context context);
    ctor public MapboxPrimaryManeuver(android.content.Context context, android.util.AttributeSet? attrs);
    ctor public MapboxPrimaryManeuver(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr);
    method public void render(com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver maneuver, com.mapbox.navigation.ui.maneuver.model.RoadShield? roadShield = null);
    method public void render(com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver maneuver);
  }

  public final class MapboxSecondaryManeuver extends androidx.appcompat.widget.AppCompatTextView {
    ctor public MapboxSecondaryManeuver(android.content.Context context);
    ctor public MapboxSecondaryManeuver(android.content.Context context, android.util.AttributeSet? attrs);
    ctor public MapboxSecondaryManeuver(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr);
    method public void render(com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver? maneuver, com.mapbox.navigation.ui.maneuver.model.RoadShield? roadShield = null);
    method public void render(com.mapbox.navigation.ui.maneuver.model.SecondaryManeuver? maneuver);
  }

  public final class MapboxStepDistance extends androidx.appcompat.widget.AppCompatTextView {
    ctor public MapboxStepDistance(android.content.Context context);
    ctor public MapboxStepDistance(android.content.Context context, android.util.AttributeSet? attrs);
    ctor public MapboxStepDistance(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr);
    method public void renderDistanceRemaining(com.mapbox.navigation.ui.maneuver.model.StepDistance stepDistance);
    method public void renderTotalStepDistance(com.mapbox.navigation.ui.maneuver.model.StepDistance stepDistance);
  }

  public final class MapboxSubManeuver extends androidx.appcompat.widget.AppCompatTextView {
    ctor public MapboxSubManeuver(android.content.Context context);
    ctor public MapboxSubManeuver(android.content.Context context, android.util.AttributeSet? attrs);
    ctor public MapboxSubManeuver(android.content.Context context, android.util.AttributeSet? attrs, int defStyleAttr);
    method public void render(com.mapbox.navigation.ui.maneuver.model.SubManeuver? maneuver, com.mapbox.navigation.ui.maneuver.model.RoadShield? roadShield = null);
    method public void render(com.mapbox.navigation.ui.maneuver.model.SubManeuver? maneuver);
  }

  public final class MapboxTurnIconManeuver extends androidx.appcompat.widget.AppCompatImageView {
    ctor public MapboxTurnIconManeuver(android.content.Context context, android.util.AttributeSet? attrs = null, int defStyleAttr = 0);
    ctor public MapboxTurnIconManeuver(android.content.Context context, android.util.AttributeSet? attrs = null);
    ctor public MapboxTurnIconManeuver(android.content.Context context);
    method public void renderPrimaryTurnIcon(com.mapbox.navigation.ui.maneuver.model.PrimaryManeuver maneuver);
    method public void renderSubTurnIcon(com.mapbox.navigation.ui.maneuver.model.SubManeuver? maneuver);
    method public void updateTurnIconResources(com.mapbox.navigation.ui.maneuver.model.TurnIconResources turnIcon);
    method public void updateTurnIconStyle(androidx.appcompat.view.ContextThemeWrapper wrapper);
  }

  public final class MapboxUpcomingManeuverAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.mapbox.navigation.ui.maneuver.view.MapboxUpcomingManeuverAdapter.MapboxUpcomingManeuverViewHolder> {
    ctor public MapboxUpcomingManeuverAdapter(android.content.Context context);
    method public void addUpcomingManeuvers(java.util.List<com.mapbox.navigation.ui.maneuver.model.Maneuver> upcomingManeuvers);
    method public int getItemCount();
    method public void onBindViewHolder(com.mapbox.navigation.ui.maneuver.view.MapboxUpcomingManeuverAdapter.MapboxUpcomingManeuverViewHolder holder, int position);
    method public com.mapbox.navigation.ui.maneuver.view.MapboxUpcomingManeuverAdapter.MapboxUpcomingManeuverViewHolder onCreateViewHolder(android.view.ViewGroup parent, int viewType);
    method public void updateRoadShields(java.util.Map<java.lang.String,com.mapbox.navigation.ui.maneuver.model.RoadShield> shieldMap);
    method public void updateUpcomingManeuverStepDistanceTextAppearance(@StyleRes int style);
    method public void updateUpcomingPrimaryManeuverTextAppearance(@StyleRes int style);
    method public void updateUpcomingSecondaryManeuverTextAppearance(@StyleRes int style);
  }

  public final class MapboxUpcomingManeuverAdapter.MapboxUpcomingManeuverViewHolder extends androidx.recyclerview.widget.RecyclerView.ViewHolder {
    ctor public MapboxUpcomingManeuverAdapter.MapboxUpcomingManeuverViewHolder(error.NonExistentClass viewBinding);
    method public void bindUpcomingManeuver(com.mapbox.navigation.ui.maneuver.model.Maneuver maneuver);
    method public error.NonExistentClass getViewBinding();
    property public final error.NonExistentClass viewBinding;
  }

}

